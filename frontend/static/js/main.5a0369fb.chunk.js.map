{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","containers/manager/RamshikPayments.js","components/utils.js","components/Shifts.js","containers/manager/Shifts.js","containers/manager/Stock.js","components/CreateIncomeTimberComponent.js","containers/manager/CreateIncome.js","containers/manager/IncomeTimbers.js","containers/manager/Quotas.js","components/ShiftCreateComponent.js","containers/manager/CreateShift.js","containers/ramshik/ShiftList.js","containers/ramshik/OverView.js","components/kladman/SaleCalc.js","containers/manager/SaleCalc.js","components/kladman/SaleCommon.js","containers/manager/SaleCreateCommon.js","containers/manager/SaleList.js","components/kladman/DailyRep.js","containers/manager/DailyRep.js","components/kladman/Expenses.js","containers/manager/Expenses.js","components/kladman/Resaw.js","containers/manager/Resaw.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","setRamaToSee","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","ramaToSee","AuthSelectors","getUser","state","rama","merge","data","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","SET_RAMA_TO_SEE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","STOCK","SHIFTS","SALES","RESAWS","DAILY_REP","SALE_CALC_DATA","INCOME_TIMBERS","QUOTAS","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","EMPLOYEE_CREATE","manager_ramshiki_delete","id","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_STOCK_SET_LUMBER_PRICE","MANAGER_SALE_LIST","MANAGER_RAWSTOCK_INCOME_INIT_DATA","MANAGER_RAWSTOCK_INCOME_CREATE","manager_rawstock_income_delete","MANAGER_SHIFT_CREATE_DATA","MANAGER_SHIFT_CREATE","manager_shift_delete","MANAGER_SALE_INIT_DATA","MANAGER_SALE_CREATE","manager_delete_sale","MANAGER_CASH_RECORDS_LIST","MANAGER_CASH_RECORDS_CREATE","manager_delete_expense","MANAGER_RESAW_CREATE","manager_delete_resaw","CAPO_BOSS_PAYOUT_MANAGER_CREATE","boss_delete_manager_payout","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","DateFilter","startDate","endDate","setData","showResults","value","onChange","shrink","onClick","DayFilter","date","MenuItem","history","useHistory","push","to","style","title","RamaMenu","manager_access","is_manager","rama_id","can_see_rama_raw_stock","includes","can_see_rama_shift","can_see_rama_resaws","can_see_rama_sales","can_see_rama_cash","AfterLogin","is_ramshik","can_see_rama_stock","map","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","logout","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","lineHeight","nickname","Header","modalOpen","parseErrorData","errorObj","statusText","JSON","stringify","property","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","LastOperations","lastOperations","length","op","created_at","record_type","employee","amount","CreateRamshik","newCash","newName","createRamshik","useState","open","setOpen","RamshikPayments","employees","activeEmployee","last_payouts","payout","deleteRamshik","method","url","headers","res","initData","setState","formData","FormData","e","target","cash","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","jsDateTimeToStrDate","jsDate","ShiftLumberTr","record","wood_species","lumber","quantity","volume","rate","total_cash","ShiftComponent","shift","deleteShift","shift_type","emp","volume_without_zabor","back_calc_cash","back_calc_cash_per_employee","lumber_records","ShiftList","shiftList","ManagerShiftList","yesterday","setDate","date_before","date_after","results","shifts","TrRow","showNull","changeMarketCost","show","current_stock_quantity","woodSpeciesClass","current_stock_volume","toFixed","is_boss","market_cost","is_kladman","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","FilteredTimberTr","timber_record","calcType","calcRowAndTotal","tr","diameter","total_volume","TimberTable","timbers","totalQnty","colSpan","TimberTableRead","IncomeToSave","incomeTimber","saveData","back","rowClass","raw_timber_records","CreatedIncome","createdIncome","note","timber_records","IncomeTimberCreateContainer","initTimbers","dataToSave","preSave","switchCalc","timber","parseFloat","tmb","income_timber","IncomeList","deleteIncome","income","who","ManagerIncomeTimbersList","incomeTimberList","created_at_before","created_at_after","income_timbers","QuotaDetail","wood","total_volume_quota_brus","total_volume_sold_brus","brus_balance","total_volume_quota_doska","total_volume_sold_doska","doska_balance","CashRecordsList","records","deletePayout","QuotaOverview","pine_data","larch_data","manager_balance","cash_records","payoutToManager","variant","FilteredLumberTr","volume_total","employee_rate","lumber_type","LumberTableMixed","LumberTable","lumber_record","ShiftToSave","employee_cash","cash_per_employee","raw_records","employeesData","CreatedShift","back_calc_volume","EmployeesBlock","activeEmployees","addEmployee","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","calcRow","calcTotalVolume","calcTotalCash","qnty","moreThan10","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","eIds","RamshikShiftList","ShiftListButton","RamshikOverView","ramshik","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","price","LumbersToSale","setLumberID","pineBrus","pineDoska","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","lumberRef","useRef","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","pb","pd","china_volume","SaleCalcContainer","lumberToSale","lumbersToSale","addLumberToSale","calcTotal","pine_brus_lumbers","pine_doska_lumbers","lumberData","round_volume","setRamaPrice","selling_price","selling_total_cash","rama_price","larchBrus","stockType","larchDoska","lb","ld","calc_type","SaleCheckList","loader","setAddParams","seller","bonus_kladman_label","sellers","client","delivery_fee","china_vira","setChinaVira","FormControl","s","FormControlLabel","control","Checkbox","color","LumbersTable","CreatedSale","sale","seller_fee","loader_fee","kladman_fee","SaleCommonToCreate","bonus_kladman","deliveryFee","sale_cash","SaleCreateCommonContainer","createdSale","stock_type","rama_type","larch_brus_lumbers","larch_doska_lumbers","kladman_id","SalesTable","sales","totals","deleteSale","console","log","sale_type","rama_total_cash","seller_name","total_selling_cash","total_seller_fee","total_kladman_fee","total_loader_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","SalesList","sales_totals","sellers_fee","total","DailyRepContainer","createdExpense","expenses","incomes","allRecords","total_expenses","total_incomes","createExpense","expense_records","expense_records_total","income_records","income_records_total","records_total","sales_sellers_fee","expense","KLADMAN_EXPENSE_CREATE","ExpensesList","deleteExpense","CreateExpense","setCount","setNote","ExpensesContainer","ResawInput","setLumber","lumber_input_label","lumber_input_quantity_label","CreatedResaw","resaw","lumber_in_quantity","lumber_in","lumber_out_quantity","lumber_out","ResawToCreate","lumberIn","lumberOut","ResawList","deleteResaw","rsw","lumber_in_wood_species","lumber_out_wood_species","is_capo","ResawContainer","createdResaw","resawsList","created","resaws","requireAuthentication","groups","AuthenticatedComponent","access","is_seller","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.5a0369fb.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null,\n\n  setRamaToSee: ['rama'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false,\n  ramaToSee: {},\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// rama to see\nexport const setRamaToSee = (state, { rama }) => {\n  return state.merge({ ramaToSee: rama })\n}\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false, ramaToSee: {} })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.SET_RAMA_TO_SEE]: setRamaToSee,\n\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    //common_api\r\n    STOCK: `${apiUrl}/common/stock/`,\r\n    SHIFTS: `${apiUrl}/common/shifts/`,\r\n    SALES: `${apiUrl}/common/sales/`,\r\n    RESAWS: `${apiUrl}/common/resaw/`,\r\n    DAILY_REP: `${apiUrl}/common/daily_report/`,\r\n    SALE_CALC_DATA: `${apiUrl}/common/sales/calc_data/`,\r\n    INCOME_TIMBERS: `${apiUrl}/common/income_timbers/`,\r\n    QUOTAS: `${apiUrl}/common/quotas/`,\r\n\r\n    // ramshik api\r\n    // RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    // RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    EMPLOYEE_CREATE: `${apiUrl}/manager/ramshiki/create/`,\r\n    manager_ramshiki_delete: (id) => `${apiUrl}/manager/ramshiki/${id}/`,\r\n\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_STOCK_SET_LUMBER_PRICE: `${apiUrl}/manager/stock/set_price/`,\r\n    \r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n    \r\n    MANAGER_RAWSTOCK_INCOME_INIT_DATA: `${apiUrl}/manager/rawstock/timber/create_income/init_data/`,\r\n    MANAGER_RAWSTOCK_INCOME_CREATE: `${apiUrl}/manager/rawstock/timber/create_income/`,\r\n    manager_rawstock_income_delete: (id) => `${apiUrl}/manager/rawstock/timber/income_timbers/${id}/`,\r\n\r\n    MANAGER_SHIFT_CREATE_DATA: `${apiUrl}/manager/shifts/create/init_data/`,\r\n    MANAGER_SHIFT_CREATE: `${apiUrl}/manager/shifts/create/`,\r\n    manager_shift_delete: (id) => `${apiUrl}/manager/shifts/${id}/`,\r\n\r\n    MANAGER_SALE_INIT_DATA: `${apiUrl}/manager/sales/create/init_data/`,\r\n    MANAGER_SALE_CREATE: `${apiUrl}/manager/sales/create/`,\r\n    manager_delete_sale: (id) => `${apiUrl}/manager/sales/${id}/`,\r\n\r\n    MANAGER_CASH_RECORDS_LIST: `${apiUrl}/manager/cash_records/list/`,\r\n    MANAGER_CASH_RECORDS_CREATE: `${apiUrl}/manager/cash_records/create_expense/`,\r\n    manager_delete_expense: (id) => `${apiUrl}/manager/cash_records/${id}/`,\r\n\r\n    MANAGER_RESAW_CREATE: `${apiUrl}/manager/resaws/create/`,\r\n    manager_delete_resaw: (id) => `${apiUrl}/manager/resaws/${id}/`,\r\n\r\n    CAPO_BOSS_PAYOUT_MANAGER_CREATE: `${apiUrl}/boss_capo/cash_records/payout_to_manager/`,\r\n    boss_delete_manager_payout: (id) => `${apiUrl}/boss_capo/cash_records/${id}/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n\r\n\r\nexport function DateFilter(props) {\r\n  const { startDate, endDate, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        label={'Дата с'}\r\n        type=\"date\"\r\n        name='startDate'\r\n        className='mr-2'\r\n        value={startDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <TextField\r\n        label={'Дата до'}\r\n        type=\"date\"\r\n        name='endDate'\r\n        className='mr-2'\r\n        value={endDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport function DayFilter(props) {\r\n  const { date, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        // label={'Дата '}\r\n        type=\"date\"\r\n        name='date'\r\n        className='mr-2'\r\n        value={date}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} "," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nexport function MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        // 'height': '0px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction RamaMenu (props) {\r\n  const { user, ramaToSee } = props\r\n  let manager_access = false\r\n  if (user.is_manager && user.rama_id === ramaToSee.id) {\r\n    manager_access = true\r\n  }\r\n\r\n  return (\r\n    <div className=' '>\r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Склад</h3>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n      </div>\r\n\r\n      {user.can_see_rama_raw_stock.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Круглый лес и план</h3>\r\n          {manager_access && \r\n            <MenuItem title={'Приход круглого леса'} to={'/manager/rawstock/create_income/'}/>}\r\n          <MenuItem title={'Список отгрузок круглого леса'} to={'/manager/rawstock/income_timbers/'}/>\r\n          <MenuItem title={'План'} to={'/manager/quotas/overview/'}/>\r\n        </div>\r\n      }\r\n\r\n      {user.can_see_rama_shift.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Смены</h3>\r\n            <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/>\r\n          {manager_access &&\r\n            <MenuItem title={'Создать смену'} to={'/manager/shift/create_shift/'}/>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      {user.can_see_rama_resaws.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n         <MenuItem title={'Перепил'} to={'/manager/resaws/create/'}/>\r\n        </div>\r\n      }\r\n      \r\n      {user.can_see_rama_sales.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Продажи</h3>\r\n          {manager_access &&\r\n            <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n          }\r\n          <MenuItem title={'Калькулятор продавца'} to={'/manager/sales/calc/'}/>\r\n          <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        </div>\r\n      }\r\n\r\n      {user.can_see_rama_cash.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Отчеты и расходы</h3>\r\n          {manager_access && [\r\n            <MenuItem title={'Расходы'} to={'/manager/expenses/'}/>,\r\n            <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>]\r\n          }\r\n          <MenuItem title={'Итоги за день'} to={'/manager/daily_report/'}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, setRamaToSee, ramaToSee } = props\r\n\r\n  if (user.is_ramshik) \r\n    return <Redirect to=\"/ramshik/main\" />\r\n  \r\n  if (user.can_see_rama_stock) {\r\n      return (\r\n        ramaToSee.id \r\n        ? <RamaMenu user={user} ramaToSee={ramaToSee}/>\r\n        : <div className='my-3'>\r\n          {user.can_see_rama_stock.map(rama => \r\n            <div className='card card-style' onClick={() => setRamaToSee(rama)}>\r\n              <div className='content'>\r\n                <h4 className='text-center'>{rama.name}</h4>\r\n              </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, ramaToSee } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout} setRamaToSee={this.props.setRamaToSee}\r\n                ramaToSee={ramaToSee}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  setRamaToSee: (rama) => dispatch(AuthActions.setRamaToSee(rama))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  function toMain () {\r\n    props.setRamaToSee({})\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>{props.ramaToSee.name}</h4>\r\n      {props.ramaToSee.name \r\n          ? <h6 onClick={toMain}>к списку пилорам</h6>\r\n          : <h4>Пилорамы</h4>\r\n        }\r\n      <button className='btn btn-xs bg-red1-light' style={{lineHeight: '13px'}} onClick={handleClickLogout}>\r\n        <span className='py-0 my-0'>\r\n          <span className='d-block'>{props.user.nickname}</span>\r\n          выйти\r\n        </span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, ramaToSee } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout} user={user} ramaToSee={ramaToSee} \r\n            setRamaToSee={this.props.setRamaToSee}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n  setRamaToSee: (rama) => dispatch(AuthActions.setRamaToSee(rama))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component, useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreateRamshik (props) {\r\n  const { newCash, newName, createRamshik, setData } = props\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const create = () => (\r\n    setOpen(false),\r\n    createRamshik()\r\n  )\r\n\r\n  return (\r\n    open \r\n      ? <div className='card card-style'>\r\n          <div className='content'>\r\n            <div className='  my-1'>\r\n              <TextField type='text' name='newName' value={newName} onChange={setData} label='Имя' \r\n                fullWidth className='mb-2'/>\r\n              <TextField type='number' name='newCash' value={newCash} onChange={setData} label='Баланс' fullWidth/>\r\n            </div>\r\n            <div className='d-flex justify-content-between mt-3'>\r\n              <button className='btn btn-s bg-highlight' onClick={create}>Создать</button>\r\n              <button className='btn btn-s bg-red1-light' onClick={() => setOpen(false)}>Отмена</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      : <div className='d-flex justify-content-center my-3'>\r\n          <button className='btn btn-l bg-highlight' onClick={setOpen}>\r\n            Создать нового рамщика\r\n          </button>\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      newName: '',\r\n      newCash: 0\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n    this.deleteRamshik = this.deleteRamshik.bind(this);\r\n    this.createRamshik = this.createRamshik.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  createRamshik () {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_CREATE,\r\n      data: { nickname: this.state.newName, cash: this.state.newCash },\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  deleteRamshik () {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_ramshiki_delete(this.state.activeEmployee.id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className=''>\r\n              {employees.length > 0 &&\r\n                  <table className='table table-sm'>\r\n                    <thead>\r\n                      <th>рамщик</th>\r\n                      <th>баланс</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {employees.map(employee => \r\n                        <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                          onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                          <td>{employee.nickname}</td>\r\n                          <td>{employee.cash} р</td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                  </table>\r\n              }\r\n              {activeEmployee && \r\n                <div className='w-100'>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <div className='d-flex justify-content-start mt-2 mb-4'>\r\n                    <TextField type='number' className='mr-3' value={amount}\r\n                      onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                    <button className='d-block btn btn-s bg-green2-light'\r\n                      onClick={this.payout}>\r\n                      Выдать\r\n                    </button>\r\n                  </div>\r\n                  <button className='d-block btn btn-s bg-red1-light mt-2'\r\n                    onClick={this.deleteRamshik}>\r\n                    Удалить рамщика\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CreateRamshik newName={this.state.newName} newCash={this.state.newCash} setData={this.setData}\r\n          createRamshik={this.createRamshik}\r\n          />\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}\r\n\r\nexport function jsDateTimeToStr (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  let hours = jsDate.getHours();\r\n  let minutes = jsDate.getMinutes() > 9 ? jsDate.getMinutes(): '0' + jsDate.getMinutes();\r\n  return yyyy + '-' + mm + '-' + dd + 'T' + hours + ':' + minutes\r\n  \r\n}\r\n\r\nexport function jsDateTimeToStrDate (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  return yyyy + '-' + mm + '-' + dd \r\n  \r\n}","import React, { Component } from 'react';\r\n\r\n\r\nfunction ShiftLumberTr (props) {\r\n  const { record } = props\r\n  const measureClass = 'font-10'\r\n  return (\r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {record.wood_species === 'larch'  \r\n          ? <span className='d-block color-brown1-light'>листв</span>\r\n          : <span className='d-block color-green1-light'>сосна</span>\r\n        }\r\n        {record.lumber.includes('доска') \r\n          ? <span className='font-italic'>{record.lumber}</span>\r\n          : <span className=''>{record.lumber}</span>\r\n        }\r\n      </td>\r\n      <td>\r\n        {record.quantity}\r\n        <span className={measureClass}> шт</span>\r\n      </td>\r\n      <td>{record.volume}<span className={measureClass}> м3</span></td>\r\n      <td>{record.rate}<span className={measureClass}> р</span></td>\r\n      <td>{record.total_cash}<span className={measureClass}> р</span></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport function ShiftComponent (props) {\r\n  const { shift, user, deleteShift } = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content mb-1'>\r\n        <div className='d-flex justify-content-between'>\r\n          <p className='color-black mb-0 font-16'>Дата: {shift.date} {shift.shift_type}</p>\r\n          {user.is_manager && \r\n            <button className='btn btn-s bg-red1-light mr-2 text-uppercase' \r\n            onClick={() => deleteShift(shift.id)}>\r\n              удалить</button>\r\n          }\r\n        </div>\r\n        <p className='mb-0 color-black'>\r\n          Работали: \r\n          {shift.employees.map(emp => <span className='mx-1'>{emp}</span>)}\r\n        </p>\r\n        <p className='color-black mb-0 font-13 d-flex justify-content-between' style={{lineHeight: '15px'}}>\r\n          <span>\r\n            <span className='d-block mb-1'>Объем: <span className='d-block font-600 font-14'>{shift.volume} m3</span></span>\r\n            <span>Объем без заборки: <span className='d-block font-600 font-14'>{shift.volume_without_zabor} m3</span></span>\r\n          </span>\r\n          <span>Общая сумма: <span className='d-block font-600 font-14'>{shift.back_calc_cash} р</span></span>\r\n          <span>На одного: <span className='d-block font-600 font-14'>\r\n            {shift.back_calc_cash_per_employee} р</span></span>\r\n        </p>\r\n      </div>\r\n      <div className='content mt-0'>\r\n        <table className='table table-sm'>\r\n          <thead>\r\n            <th>Пиломат</th>\r\n            <th>кол-во</th>\r\n            <th>объем</th>\r\n            <th>ставка</th>\r\n            <th>сумма</th>\r\n          </thead>\r\n          <tbody>\r\n            {shift.lumber_records.map(record => \r\n              <ShiftLumberTr record={record}/>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShiftList (props) {\r\n  const { shiftList, user, deleteShift } = props\r\n  return (\r\n    <div className='mt-2'>\r\n      <h4 className='my-3 text-center'>Смены  ({shiftList.length})</h4>\r\n      {shiftList.length > 0 && shiftList.map(shift => \r\n          <ShiftComponent shift={shift} user={user} deleteShift={deleteShift}/>\r\n      )}\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { ShiftList } from '../../components/Shifts';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n    this.deleteShift = this.deleteShift.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, });\r\n    })\r\n  }\r\n\r\n  deleteShift (id) {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_shift_delete(id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ shiftList: response.data.shifts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <ShiftList shiftList={this.state.shiftList} user={this.props.user} deleteShift={this.deleteShift}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerShiftList);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost, user } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(4)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          {user.is_boss &&\r\n            <TextField type='number' \r\n              className=''\r\n              value={lumber.market_cost > 0 && lumber.market_cost} \r\n              onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n          }\r\n          {user.is_kladman && <span className='font-16'>{lumber.market_cost}</span>}\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    // console.log(this.props.ramaToSee)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.STOCK,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n   \r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_STOCK_SET_LUMBER_PRICE,\r\n      data: {\r\n        lumber: lumberId,\r\n        market_cost: parseInt(e.target.value) || 0\r\n      },\r\n      headers: {'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      lumber = res.data;\r\n    })\r\n\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}\r\n                        user={this.props.user}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerStock);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredTimberTr (props) {\r\n  const { timber_record, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {timber_record.diameter }\r\n        {timber_record.wood_species === 'Сосна' \r\n          ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n          : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n        }\r\n      </td>\r\n      <td className=''>\r\n          <input style={{'color': '#6c6c6c'}}\r\n            type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, timber_record)} \r\n            value={timber_record.quantity > 0 && timber_record.quantity}/>\r\n      </td>\r\n      <td className=''>\r\n        {timber_record.total_volume ? timber_record.total_volume.toFixed(4) : 0} m3\r\n      </td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((timber_record.wood_species === 'Лиственница') | ( timber_record.wood_species === 'Сосна'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'pine' ) {\r\n    if (timber_record.wood_species === 'Сосна')\r\n      return tr\r\n    }\r\n\r\n  if (calcType === 'larch' ) {\r\n    if (timber_record.wood_species === 'Лиственница')\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\nexport function TimberTable (props) {\r\n  const { timbers, calcRowAndTotal, totalQnty, totalVolume, calcType } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) =>\r\n          <FilteredTimberTr timber_record={timber_record} calcRowAndTotal={calcRowAndTotal} \r\n            calcType={calcType} key={key}/>\r\n          )}\r\n        <tr>\r\n          <td colSpan='2'>\r\n            <span className='font-17'>Количество: {totalQnty}</span>\r\n          </td>\r\n          <td >\r\n            <span className='font-17'>Объем: {totalVolume ? totalVolume.toFixed(5) : 0}</span>\r\n          </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function TimberTableRead (props) {\r\n  const { timbers } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) => timber_record.quantity > 0 &&\r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {timber_record.diameter}\r\n              {timber_record.wood_species === 'Сосна' \r\n                ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n                : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n              }\r\n            </td>\r\n            <td>{timber_record.quantity} шт</td>\r\n            <td>{timber_record.total_volume ? timber_record.total_volume.toFixed(5) : 0 } m3</td>\r\n          </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function IncomeToSave (props) {\r\n  const { incomeTimber, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {incomeTimber &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Общее количество: {incomeTimber.totalQnty} шт\r\n            </p>\r\n            <p className={rowClass}>\r\n              Объем: {incomeTimber.totalVolume.toFixed(5)} m3\r\n            </p>\r\n            <TimberTableRead timbers={incomeTimber.raw_timber_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedIncome (props) {\r\n  const { createdIncome, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Приход сохранен</h4>\r\n        {createdIncome &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {createdIncome.created_at}</p>\r\n            <p className={rowClass}>\r\n              Общее количество: {createdIncome.quantity} шт</p>\r\n            <p className={rowClass}>\r\n              Общий объем: {createdIncome.volume} м3</p>              \r\n            <p className={rowClass}>Примечание: {createdIncome.note}</p>\r\n\r\n            <TimberTableRead timbers={createdIncome.timber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\n\r\nimport { TimberTable, CreatedIncome, IncomeToSave } from '../../components/CreateIncomeTimberComponent';\r\n\r\n\r\nexport class IncomeTimberCreateContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timbers: [],\r\n      initTimbers: [],\r\n      calcType: 'pine',\r\n      totalQnty: 0,\r\n      totalVolume: 0.0,\r\n      dataToSave: null,\r\n      createdIncome: null\r\n    }\r\n\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.switchCalc = this.switchCalc.bind(this);\r\n    this.saveData = this.saveData.bind(this)\r\n    this.back = this.back.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_RAWSTOCK_INCOME_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ timbers: initData.timbers, initTimbers: initData.timbers });\r\n      })\r\n  }\r\n\r\n  calcRowAndTotal (e, timber) {\r\n    let { timbers } = this.state\r\n    timber.quantity = parseInt(e.target.value)\r\n\r\n    if (timber.quantity > 0) {\r\n      timber.total_volume = parseFloat(timber.quantity * timber.volume)\r\n    }\r\n\r\n    timbers = replaceItemInDictArrayById(timbers, timber)\r\n    let totalQnty = 0\r\n    let totalVolume = 0\r\n\r\n    timbers.map(tmb => {\r\n      totalQnty = totalQnty + parseInt(tmb.quantity ? tmb.quantity : 0)\r\n      if (tmb.quantity > 0) {\r\n        totalVolume = totalVolume + parseFloat(tmb.total_volume ? tmb.total_volume : 0.0)\r\n      }\r\n    })\r\n\r\n    this.setState({ \r\n      ...this.state,\r\n      timbers: timbers,\r\n      totalQnty: totalQnty,\r\n      totalVolume: totalVolume,\r\n      message: null\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { timbers, totalQnty, totalVolume } = this.state\r\n    let data = {\r\n      raw_timber_records: timbers,\r\n      totalQnty: totalQnty,\r\n      totalVolume: totalVolume,\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_RAWSTOCK_INCOME_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdIncome: response.data.income_timber });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      timbers: this.state.initTimbers,\r\n      totalQnty: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      timbers: this.state.timbers,\r\n      totalQnty: 0,\r\n      calcType: calcType,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { timbers, totalQnty, totalVolume, calcType, createdIncome, dataToSave, message }  = this.state\r\n    return (\r\n      <div>\r\n        {createdIncome \r\n          ? <CreatedIncome createdIncome={createdIncome} message={message}/>\r\n          : dataToSave\r\n            ? <IncomeToSave incomeTimber={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : timbers.length > 0 &&\r\n              <div className='card card-style mb-1 mt-2'>\r\n                <div className='content mb-1'>\r\n                  <h3>Приход круглого</h3>\r\n                  <div className='d-flex justify-content-between my-2'>\r\n                    <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'}\r\n                      onClick={() => this.switchCalc('mixed')}\r\n                      >Пересорт</button>\r\n                    <button className={calcType === 'larch' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('larch')}>\r\n                      все листвяк</button>\r\n                    <button className={calcType === 'pine' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('pine')}>\r\n                      все сосна</button>\r\n                  </div>\r\n                  <TimberTable timbers={timbers} calcRowAndTotal={this.calcRowAndTotal} totalQnty={totalQnty}\r\n                    calcType={calcType} totalVolume={totalVolume}/>\r\n                </div>\r\n                {totalQnty > 0 && \r\n                  <div className='content mt-0'>\r\n                    <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                  </div>\r\n                }\r\n              </div>\r\n            }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nfunction IncomeList (props) {\r\n  const { list, deleteIncome, user } = props\r\n  return (\r\n    list.length > 0 &&\r\n    <div>\r\n      <div className='card card-style'>\r\n        <div className='content'>\r\n          всего\r\n        </div>\r\n      </div>\r\n      {list.map(income => \r\n        <div className='card card-style'>\r\n          <div className='content'>\r\n            <p className='mb-1 color-black font-15'>Дата: {income.created_at}</p>\r\n              <div className='d-flex justify-content-between'>\r\n                <p className='mb-1 color-black font-15'>{income.who}</p>\r\n                {user.is_boss && \r\n                  <button className='btn btn-s bg-red1-light' onClick={() => deleteIncome(income.id)} >\r\n                    Удалить\r\n                  </button>\r\n                }\r\n              </div>\r\n            <p className='mb-2 color-black font-15 d-flex justify-content-between'>\r\n              <span>Количество: {income.quantity} шт</span>\r\n              <span>Объем: {income.volume} m3</span>\r\n            </p>\r\n            <table className='table table-sm'>\r\n              <thead>\r\n                <th>Диаметр/порода</th>\r\n                <th>Количество</th>\r\n                <th>Объем</th>\r\n              </thead>\r\n              <tbody>\r\n                {income.timber_records.map(tr => \r\n                  <tr>\r\n                    <td>{tr.timber}</td>\r\n                    <td>{tr.quantity} шт</td>\r\n                    <td>{tr.volume} м3</td>\r\n                  </tr>\r\n                  )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport class ManagerIncomeTimbersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      incomeTimberList: [],\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n    this.deleteIncome = this.deleteIncome.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      created_at_before: endDate, created_at_after:startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.INCOME_TIMBERS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, incomeTimberList: response.data.results, startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      created_at_before: this.state.endDate, created_at_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.INCOME_TIMBERS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, incomeTimberList: response.data.results, });\r\n    })\r\n  }\r\n\r\n  deleteIncome (id) {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_rawstock_income_delete(id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ incomeTimberList: response.data.income_timbers });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { incomeTimberList } = this.state\r\n    return (\r\n      <div>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <IncomeList list={incomeTimberList} user={this.props.user} deleteIncome={this.deleteIncome}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerIncomeTimbersList);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters, parseErrorData } from '../../redux/api/utils';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction QuotaDetail (props) {\r\n  const { data, wood } = props\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>{wood}</th>\r\n          <th>План</th>\r\n          <th>Отгружено</th>\r\n          <th>Баланс</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Брус</td>\r\n            <td>{data.total_volume_quota_brus} m3</td>\r\n            <td>{data.total_volume_sold_brus} m3</td>\r\n            <td>{data.brus_balance && data.brus_balance.toFixed(4)} m3\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Доска(без дюймовки)</td>\r\n            <td>{data.total_volume_quota_doska} m3</td>\r\n            <td>{data.total_volume_sold_doska} m3</td>\r\n            <td>{data.doska_balance && data.doska_balance.toFixed(4)} m3\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction CashRecordsList(props) {\r\n  const { records, deletePayout, user } = props\r\n  return (\r\n    <table className='table table-sm table-responsive' style={{lineHeight: '13px'}}>\r\n      <thead>\r\n        <th>Дата</th>\r\n        <th>Тип</th>\r\n        <th>Кто создал</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n        {records.map(record =>\r\n          <tr>\r\n            <td className='text-nowrap'>{record.created_at}</td>\r\n            <td>{record.record_type}</td>\r\n            <td>{record.who}</td>\r\n            <td className={record.record_type === 'Вывод средств от кладмэна/менеджера' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>{record.amount} р</td>\r\n            {user.is_boss && \r\n              <td>\r\n                <button className='btn btn-s bg-red1-light' onClick={() => deletePayout(record.id)}>\r\n                  Удалить\r\n                </button>\r\n              </td>\r\n            }\r\n          </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nclass QuotaOverview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pine_data: null,\r\n      larch_data: null,\r\n\r\n      manager_balance: null,\r\n      cash_records: [],\r\n      amount: 0,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payoutToManager = this.payoutToManager.bind(this);\r\n    this.deletePayout = this.deletePayout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.QUOTAS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      this.setState({ \r\n        pine_data: res.data.pine_data,\r\n        larch_data: res.data.larch_data,\r\n        manager_balance: res.data.manager_balance,\r\n        cash_records: res.data.cash_records,\r\n      });\r\n    })\r\n  }\r\n\r\n  payoutToManager () {\r\n    const { amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"rama\", this.props.ramaToSee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.CAPO_BOSS_PAYOUT_MANAGER_CREATE,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ ...this.state, \r\n        manager_balance: res.data.manager_balance,\r\n        cash_records: res.data.cash_records,\r\n        amount: 0\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  deletePayout (id) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.boss_delete_manager_payout(id),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ ...this.state, manager_balance: res.data.manager_balance,\r\n        cash_records: res.data.cash_records,\r\n        amount: 0 });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    return (\r\n      <div>\r\n        <div className='card card-style my-2'>\r\n          <div className='content mb-0'>\r\n            <h4 className='mb-2'>План пилорамы</h4>\r\n          </div>\r\n\r\n          {this.state.pine_data &&\r\n            <div className='content my-0'>\r\n              <QuotaDetail data={this.state.pine_data} wood={'Сосна'}/>\r\n            </div>\r\n          }\r\n\r\n          {this.state.larch_data && \r\n            <div className='content my-0'>\r\n              <QuotaDetail data={this.state.larch_data} wood={'Лиственница'}/>\r\n            </div>\r\n          }\r\n        </div>\r\n        <div className='card card-style my-2'>\r\n          <div className='content'>\r\n            <h5 className='text-center'>Должны манагеру: \r\n              <span className='font-400'> {this.state.manager_balance} рублей</span>\r\n            </h5>\r\n            {(user.is_boss) && \r\n              <div className='d-flex justify-content-around mt-4'>\r\n                <TextField type='number'\r\n                  variant=\"outlined\"\r\n                  value={this.state.amount} \r\n                  onChange={(e) => this.setState({amount: e.target.value})}/>\r\n                <button className='btn btn-s bg-highlight' onClick={this.payoutToManager}>\r\n                  Выдать аванс\r\n                </button>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='card card-style'>\r\n          <div className='content'>\r\n            <h5>Расчеты</h5>\r\n            <CashRecordsList records={this.state.cash_records} user={user} deletePayout={this.deletePayout}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuotaOverview);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredLumberTr (props) {\r\n  const { lumber, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr key={key}>\r\n      <td>\r\n        {lumber.name} \r\n        {lumber.wood_species === 'pine' \r\n          ? <span className='d-block color-brown1-light'>сосна</span> \r\n          : <span className='d-block color-green2-light'>лиственница</span>}\r\n      </td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n        type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n        value={lumber.quantity > 0 && lumber.quantity}/>\r\n      </td>\r\n      <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n      <td>{lumber.employee_rate} руб</td>\r\n      <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((lumber.lumber_type !== 'doska' & lumber.wood_species === 'larch') | ( lumber.wood_species === 'pine'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'sorted' ) {\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\n\r\nexport function LumberTableMixed (props) {\r\n  const { lumbers, calcRowAndTotal, totalVolume, totalCash, calcType } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive text-center' \r\n      style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n      <thead>\r\n        <th>Изделие</th>\r\n        <th>Кол-во</th>\r\n        <th>Обьем</th>\r\n        <th>Ставка</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n      {lumbers.map((lumber, key) => \r\n        <FilteredLumberTr lumber={lumber} calcType={calcType} calcRowAndTotal={calcRowAndTotal} key={key}/>\r\n        )}\r\n        <tr>\r\n          <td>Итого</td>\r\n          <td className='w-25'>\r\n            -\r\n          </td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n            </span>\r\n          </td>\r\n          <td>-</td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2 flex-wrap'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) \r\n              ? 'bg-green2-light mx-1 my-1' + empClass : 'bg-dark1-dark mx-1 my-1' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock, LumberTableMixed } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      calcType: 'mixed',\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n    this.switchCalc = this.switchCalc.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_SHIFT_CREATE_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, \r\n          employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    // if (lumber.employee_rate !== 800 && lumber.employee_rate !== 300) {\r\n    //   if (moreThan10) {\r\n    //     if (lumber.wood_species === 'pine') rate = 650\r\n    //     if (lumber.wood_species === 'larch') rate = 700\r\n    //   } else {\r\n    //     if (lumber.wood_species === 'pine') rate = 600\r\n    //     if (lumber.wood_species === 'larch') rate = 650\r\n    //   }\r\n    // }\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      if (lumber.employee_rate !== 300)\r\n        totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalCash: 0,\r\n      totalVolume: 0,\r\n      calcType: calcType,\r\n      activeEmployees: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave, \r\n      calcType}  = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                  <h2>Смена </h2>\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight' : 'btn btn-s border'}\r\n                        onClick={() => this.switchCalc('mixed')}\r\n                        >доска перемешку</button>\r\n                      {/* <button className={calcType === 'larch_only' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.setState({calcType: 'larch_only'})}>\r\n                        все листвяк</button> */}\r\n                      <button className={calcType === 'sorted' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.switchCalc('sorted')}>\r\n                        доска по сортам</button>\r\n                    </div>\r\n                    {lumbers.length > 0 &&\r\n                      <LumberTableMixed\r\n                        calcType={this.state.calcType}\r\n                        lumbers={lumbers}\r\n                        calcRowAndTotal={this.calcRowAndTotal}\r\n\r\n                        totalCash={totalCash}\r\n                        totalVolume={totalVolume}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShiftCreateComponent);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftList } from '../../components/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ShiftList shiftList={this.state.shiftList} />\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nfunction ShiftListButton () {\r\n  let history = useHistory();\r\n\r\n  const redirect = () => {\r\n    history.push('/ramshik/shift/list/')\r\n  }\r\n  return (\r\n    <div className='card card-style mb-2'>\r\n      <div className='content'>\r\n        <h4 className='text-center' onClick={redirect}>\r\n          Список смен\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport class RamshikOverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <ShiftListButton />\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='text-center'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, label } = props\r\n  return (\r\n    <div className='my-2'>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.price > 0 && lumber.price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.total_cash > 0 && lumber.total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calcType === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calcType === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calcType === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calcType === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />\r\n          }\r\n          {lumber.calcType === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n          {lumber.calcType === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale } from '../../components/kladman/SaleCalc';\r\n\r\n\r\nexport class SaleCalcContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      lumberToSale: null,\r\n      lumbersToSale: [],\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALE_CALC_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, calcType: 'exact' }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.price = 0\r\n    }\r\n\r\n    lumber.calcType = calcType\r\n    lumber.total_cash = lumber.volume_total * lumber.price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash } = this.state\r\n    return (\r\n      <div className=''>\r\n        <div className='content'>\r\n          <h3>Калькулятор</h3> \r\n          {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n            <LumbersToSale \r\n              lumber={lumber} \r\n              setLumberID={this.setLumberID} \r\n\r\n              calcRowQnty={this.calcRowQnty}\r\n              calcRowCash={this.calcRowCash}\r\n              calcRowVolume={this.calcRowVolume}\r\n\r\n              calcRoundRowQnty={this.calcRoundRowQnty}\r\n              calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n              calcChinaRowQnty={this.calcChinaRowQnty}\r\n              calcChinaRowVolume={this.calcChinaRowVolume}\r\n              \r\n              turnCalc={this.turnCalc}\r\n              delLumber={this.delLumber}\r\n              pineBrus={this.state.pineBrus}\r\n              pineDoska={this.state.pineDoska}\r\n            />\r\n          )}\r\n          <div className='d-flex justify-content-center'>\r\n            <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n              Добавить пиломатериал\r\n            </button>\r\n          </div>\r\n          {totalCash > 0 &&\r\n            <div className='card card-style mt-2'>\r\n              <div className='content d-flex justify-content-between mb-2 '>\r\n                <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-3'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Цена за 1м3 опт'\r\n          type='number'\r\n          onChange={(e) => setRamaPrice(e, lumber.id)}\r\n          value={lumber.rama_price > 0 && lumber.rama_price}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber, larchBrus,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice,\r\n     stockType, larchDoska } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        {stockType === 'mixed' &&\r\n          <optgroup label=\"Доска\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>\r\n        }\r\n        {stockType === 'sorted' && [\r\n          <optgroup label=\"Доска сосна\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>,\r\n          <optgroup label=\"Доска лиственница\">\r\n            {larchDoska.map(ld =>\r\n              <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n              )}\r\n          </optgroup>]\r\n        }\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { loader, setAddParams, seller, bonus_kladman_label, sellers, client, delivery_fee, china_vira,\r\n    setChinaVira, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            defaultValue={null}\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={loader}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='loader'\r\n            />\r\n          }\r\n          label=\"Грузчик\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={bonus_kladman_label}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='bonus_kladman_label'\r\n            />\r\n          }\r\n          label=\"Склад бонус\"\r\n        />\r\n      </div>  \r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n        {/* <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Вира(китай)'\r\n            type='number'\r\n            name='china_vira'\r\n            onChange={setChinaVira}\r\n            value={china_vira > 0 && china_vira}/> */}\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-2'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            {/* {sale.china_vira && <p className={rowClass}>Вира(китай): {sale.china_vira + 'рублей'}</p>} */}\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/kladman/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.setRamaPrice = this.setRamaPrice.bind(this);\r\n\r\n    this.setAddParams = this.setAddParams.bind(this);\r\n    this.setChinaVira = this.setChinaVira.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n\r\n    this.saveData = this.saveData.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({stock_type: this.props.user.rama_type});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRamaPrice (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = lumber.volume_total * lumber.selling_price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams(e) {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira (e) {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale\r\n                      stockType={this.props.user.rama_type}\r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setRamaPrice={this.setRamaPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleCreateCommonContainer);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport { parseErrorData, createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals, deleteSale, rama } = props\r\n  console.log(rama)\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        <th>Сумма/Объем</th>\r\n        <th style={{lineHeight: '13px'}}>\r\n        {rama.sale_type === 'seller_kladman_same' \r\n          ? 'Продавeц (комиссия кладмэна из вознаграждения продавца)'\r\n          : 'Продавeц'\r\n        }\r\n        </th>\r\n        <th>грузчик</th>\r\n        <th>кладмэн</th>\r\n        <th>Доставка</th>\r\n        <th className='text-nowrap'>Удалить</th>\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  <span className='d-block font-italic'>{lumber.wood_species}</span>\r\n                  <span className='d-block font-italic'>розница общ <span className='font-500'>\r\n                    {lumber.selling_total_cash}</span></span>\r\n                  <span className='d-block font-italic'>розница 1м3 <span className='font-500'>\r\n                    {lumber.selling_price}</span></span>\r\n                  <span className='d-block font-italic'>опт общ <span className='font-500'>\r\n                    {lumber.rama_total_cash}</span></span>\r\n                  <span className='d-block font-italic'>опт 1м3 <span className='font-500'>\r\n                    {lumber.rama_price}</span></span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td >\r\n              <span>{sale.selling_total_cash}р</span>\r\n              <span className='d-block'>{sale.volume} м3</span>\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {rama.sale_type === 'seller_kladman_same' \r\n                ? <span className='d-block'>\r\n                    <span className='d-block'>{sale.seller_fee - sale.kladman_fee}</span>\r\n                    {`(${sale.seller_fee}  - ${sale.kladman_fee})`}\r\n                  </span>\r\n                : <span className='d-block'>{sale.seller_fee}</span>\r\n              }\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              <button className='btn btn-xs bg-red1-light' value={sale.id} onClick={deleteSale}>Удалить</button>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>\r\n            {rama.sale_type === 'seller_kladman_same' \r\n             ? <span>\r\n                  <span className='d-block'>{totals.total_seller_fee - totals.total_kladman_fee}</span>\r\n                  {`(${totals.total_seller_fee}  - ${totals.total_kladman_fee})`}\r\n               </span>\r\n             : totals.total_seller_fee\r\n            }\r\n          </td>\r\n\r\n          <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td>\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.deleteSale = this.deleteSale.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    // yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals,\r\n        startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  deleteSale (e) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_sale(e.target.value),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals} deleteSale={this.deleteSale}\r\n                  rama={this.props.ramaToSee} />\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleList);","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          <th>Клад/груз</th>\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td>\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'rama_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday, jsDateTimeToStrDate } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/kladman/DailyRep';\r\nimport { DayFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n\r\n      date: ''\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date: getToday(), rama: this.props.ramaToSee.id});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee,\r\n        date: getToday()\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total, });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, date: this.state.date});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0 '>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <DayFilter date={this.state.date} setData={this.setData} showResults={this.showResults} />\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyRepContainer);","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses, user, deleteExpense } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n            {user.is_manager && \r\n              <td>\r\n                <button className='btn btn-s bg-red1-light' onClick={() => deleteExpense(expense.id)}>\r\n                  Удалить\r\n                </button>\r\n              </td>\r\n            }\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/kladman/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n    this.deleteExpense = this.deleteExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_CASH_RECORDS_LIST,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.records,\r\n        total: initData.total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_CASH_RECORDS_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  deleteExpense (id) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_expense(id),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ ...this.state, \r\n        expenses: res.data.records,\r\n        total: res.data.totals,\r\n        amount: 0 });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses} user={this.props.user} deleteExpense={this.deleteExpense}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpensesContainer);","import React, { } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nexport function ResawInput (props) {\r\n  const { lumber, quantity, setLumber, pineBrus, pineDoska, larchBrus, larchDoska, label, lumber_input_label } = props\r\n  let lumber_input_quantity_label = lumber_input_label + \"_quantity\"\r\n\r\n  return (\r\n    <div className=''>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        {label}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber} \r\n        onChange={setLumber}\r\n        name={lumber_input_label}\r\n        defaultValue={null}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска сосна\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска лиственница\">\r\n          {larchDoska.map(ld =>\r\n            <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n      </Select>\r\n      <TextField \r\n        className='mt-3'\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='Количество'\r\n        type='number'\r\n        name={lumber_input_quantity_label}\r\n        onChange={setLumber}\r\n        value={quantity}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport function CreatedResaw (props) {\r\n  const { resaw, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {resaw &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {resaw.created_at}</p>\r\n            \r\n            <p className={rowClass}>Перепелили: {resaw.lumber_in_quantity}шт {resaw.lumber_in} </p>\r\n            <p className={rowClass}>Получили: {resaw.lumber_out_quantity}шт {resaw.lumber_out} </p>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawToCreate (props) {\r\n  const { resaw, saveData, back, lumbers } = props\r\n  let lumberIn = getObjectbyId(lumbers, resaw.lumber_in)\r\n  let lumberOut = getObjectbyId(lumbers, resaw.lumber_out)\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {resaw &&\r\n          <div className=''>\r\n            <p className={rowClass}>Перепиливаем : {lumberIn.name} {resaw.lumber_in_quantity} шт</p>\r\n            <p className={rowClass}>Получаем : {lumberOut.name} {resaw.lumber_out_quantity} шт</p>\r\n            {/* <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p> */}\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawList (props) {\r\n  const { list, deleteResaw, user } = props\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <table className='table table-sm' style={{lineHeight: '15px'}}>\r\n          <thead>\r\n            <th>\r\n              дата\\кто записал\r\n            </th>\r\n            <th>\r\n              что перепиливали\r\n            </th>\r\n            <th>\r\n              во что перепилили\r\n            </th>\r\n          </thead>\r\n          <tbody>\r\n            {list.length > 0 && list.map(rsw => \r\n              <tr>\r\n                <td>\r\n                  <span className='d-block'>{rsw.created_at}</span>\r\n                  <span className='font-600'>{rsw.who}</span>\r\n                </td>\r\n                <td>\r\n                  <span className='d-block'>{rsw.lumber_in_quantity}шт {rsw.lumber_in}</span>\r\n                  <span className='font-italic'>{rsw.lumber_in_wood_species}</span>\r\n                </td>\r\n                <td>\r\n                  <span className='d-block'>{rsw.lumber_out_quantity}шт {rsw.lumber_out}</span>\r\n                  <span className='font-italic'>{rsw.lumber_out_wood_species}</span>\r\n                </td>\r\n                {(user.is_boss || user.is_capo) &&\r\n                  <td className='mr-3'>\r\n                    <button className='btn btn-s bg-red1-light mr-2 text-uppercase' \r\n                    onClick={() => deleteResaw(rsw.id)}>\r\n                      удалить</button>\r\n                  </td>\r\n                }\r\n              </tr>\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport {  ResawToCreate, CreatedResaw, ResawInput, ResawList }  from '../../components/kladman/Resaw';\r\n\r\n\r\nexport class ResawContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      \r\n      lumber_in: null,\r\n      lumber_in_quantity: null,\r\n      lumber_out: null,\r\n      lumber_out_quantity: null,\r\n\r\n      createdResaw: null,\r\n      dataToSave: null,\r\n\r\n      resawsList: []\r\n    }\r\n\r\n    this.setLumber = this.setLumber.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.deleteResaw = this.deleteResaw.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RESAWS,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: createUrlParamsFromFilters({rama: this.props.ramaToSee.id})\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        resawsList: initData.results,\r\n        });\r\n    })\r\n  }\r\n\r\n  setLumber (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumber_in, lumber_in_quantity, lumber_out, lumber_out_quantity } = this.state\r\n    \r\n    let data = {\r\n      lumber_in: lumber_in,\r\n      lumber_in_quantity: lumber_in_quantity,\r\n      lumber_out: lumber_out,\r\n      lumber_out_quantity: lumber_out_quantity,\r\n      rama: this.props.ramaToSee.id\r\n    }\r\n\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_RESAW_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdResaw: response.data.created, \r\n        resawsList: response.data.resaws });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  deleteResaw (id) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_resaw(id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ resawsList: response.data.resaws });\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { createdResaw, dataToSave, message, resawsList } = this.state\r\n    const { user, ramaToSee } = this.props\r\n    return (\r\n      <div className=''>\r\n        {createdResaw\r\n          ? <CreatedResaw resaw={createdResaw} message={message}/>\r\n          : dataToSave\r\n            ? <ResawToCreate resaw={dataToSave} saveData={this.saveData} back={this.back} \r\n                lumbers={this.state.lumbers}/>\r\n            : (user.is_boss || user.is_capo ) &&\r\n              <div className='card card-style mt-3'>\r\n                <div className='content'>\r\n                  <ResawInput \r\n                    lumber={this.state.lumber_in}\r\n                    quantity={this.state.lumber_in_quantity}\r\n                    setLumber={this.setLumber}\r\n                    pineBrus={this.state.pineBrus}\r\n                    pineDoska={this.state.pineDoska}\r\n                    larchBrus={this.state.larchBrus}\r\n                    larchDoska={this.state.larchDoska}\r\n\r\n                    label={'Что перепиливаем?'}\r\n                    lumber_input_label={'lumber_in'}\r\n                  />\r\n                  <div className='mt-3'>\r\n                    <ResawInput \r\n                      lumber={this.state.lumber_out}\r\n                      quantity={this.state.lumber_out_quantity}\r\n                      setLumber={this.setLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchBrus={this.state.larchBrus}\r\n                      larchDoska={this.state.larchDoska}\r\n\r\n                      label={'Что получаем?'}\r\n                      lumber_input_label={'lumber_out'}\r\n                    />\r\n                  </div>\r\n                  <button className='btn btn-l bg-highlight mt-3' onClick={this.preSave}>\r\n                    Далее\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          }\r\n        <ResawList list={resawsList} deleteResaw={this.deleteResaw} user={user}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResawContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function requireAuthentication(Component, groups) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n          \r\n          if (this.props.isLoggedIn) {\r\n            if (groups.includes('manager') && user.is_manager)\r\n              access = true\r\n\r\n            if (groups.includes('boss') && user.is_boss)\r\n              access = true\r\n\r\n            if (groups.includes('capo') && user.is_capo)\r\n              access = true\r\n\r\n            if (groups.includes('seller') && user.is_seller)\r\n              access = true\r\n            \r\n            if (groups.includes('is_ramshik') && user.is_ramshik)\r\n              access = true\r\n          }\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? access\r\n                  ? <Component {...this.props} />\r\n                  : <h4 className='text-center my-5'>Нет прав</h4>\r\n                : <Redirect to={'/'}/>\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport ManagerStock from './containers/manager/Stock';\r\nimport { IncomeTimberCreateContainer } from './containers/manager/CreateIncome';\r\nimport ManagerIncomeTimbersList from './containers/manager/IncomeTimbers';\r\nimport QuotaOverview from './containers/manager/Quotas';\r\n\r\nimport ShiftCreateComponent from './containers/manager/CreateShift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikOverView } from './containers/ramshik/OverView';\r\n\r\nimport { SaleCalcContainer } from './containers/manager/SaleCalc';\r\nimport  SaleCreateCommonContainer from './containers/manager/SaleCreateCommon';\r\nimport SaleList from './containers/manager/SaleList';\r\nimport DailyRepContainer from './containers/manager/DailyRep';\r\nimport { ExpensesContainer } from './containers/manager/Expenses';\r\nimport ResawContainer from './containers/manager/Resaw';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager and kladman views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, ['manager', 'boss', 'capo'])} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, ['manager', 'boss', 'capo'])} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['manager'])} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, ['manager'])} />\r\n              <Route exact path=\"/manager/sales/calc/\" \r\n                component={requireAuthentication(SaleCalcContainer, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/expenses/\" \r\n                component={requireAuthentication(ExpensesContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/daily_report/\" \r\n                component={requireAuthentication(DailyRepContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/resaws/create/\" \r\n                component={requireAuthentication(ResawContainer, ['manager', 'boss', 'capo',])} />\r\n\r\n              {/* manager only */}\r\n              <Route exact path=\"/manager/rawstock/create_income/\" \r\n                component={requireAuthentication(IncomeTimberCreateContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/rawstock/income_timbers/\" \r\n              component={requireAuthentication(ManagerIncomeTimbersList, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/quotas/overview/\" \r\n                component={requireAuthentication(QuotaOverview, ['manager', 'boss', 'capo',])} />\r\n\r\n              {/* ramshik views */}\r\n              {/* <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['is_senior_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, ['is_ramshik'])} />\r\n              {/* <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, ['is_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/main/\" \r\n              component={requireAuthentication(RamshikOverView, ['is_ramshik'])} />\r\n\r\n              {/* kladman views */}\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}