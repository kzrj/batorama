{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","containers/manager/RamshikPayments.js","containers/manager/Shifts.js","components/utils.js","containers/manager/Stock.js","components/ShiftCreateComponent.js","containers/ramshik/Shift.js","containers/ramshik/ShiftList.js","containers/ramshik/Payouts.js","components/kladman/SaleCalc.js","containers/kladman/SaleCalc.js","components/kladman/SaleCommon.js","containers/kladman/SaleCreateCommon.js","containers/manager/SaleList.js","components/kladman/DailyRep.js","containers/kladman/DailyRep.js","components/kladman/Expenses.js","containers/kladman/Expenses.js","components/kladman/Resaw.js","containers/kladman/Resaw.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","RAMSHIK_SHIFT_CREATE_DATA","RAMSHIK_SHIFT_CREATE","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_STOCK_SET_LUMBER_PRICE","MANAGER_SALE_LIST","KLADMAN_SALE_INIT_DATA","KLADMAN_SALE_INIT_DATA_CHINA","KLADMAN_SALE_CREATE","KLADMAN_SALE_CALC_DATA","KLADMAN_EXPENSE_CREATE","KLADMAN_EXPENSE_LIST","KLADMAN_DAYLY_REPORT_DATA","kladman_delete_sale","id","KLADMAN_RESAW_CREATE","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","MenuItem","history","useHistory","onClick","push","to","style","title","AfterLogin","logout","is_ramshik","is_senior_ramshik","is_manager","is_kladman","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","rama","nickname","Header","modalOpen","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","map","value","LastOperations","lastOperations","length","lineHeight","op","created_at","record_type","employee","amount","RamshikPayments","employees","activeEmployee","last_payouts","payout","method","url","headers","res","initData","setState","formData","FormData","errorObj","statusText","JSON","stringify","property","parseErrorData","cash","onChange","e","target","ShiftsTable","shiftList","shift","date","emp","volume","employee_cash","toFixed","cash_per_employee","lumber_records","lumber","quantity","rate","ManagerShiftList","results","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","TrRow","showNull","changeMarketCost","show","current_stock_quantity","wood_species","woodSpeciesClass","current_stock_volume","market_cost","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","FilteredLumberTr","calcType","calcRowAndTotal","tr","volume_total","employee_rate","lumber_type","LumberTableMixed","LumberTable","console","log","lumber_record","total_cash","ShiftToSave","saveData","back","rowClass","note","raw_records","employeesData","CreatedShift","back_calc_volume","back_calc_cash","back_calc_cash_per_employee","EmployeesBlock","activeEmployees","addEmployee","includes","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","dataToSave","calcRow","calcTotalVolume","calcTotalCash","preSave","switchCalc","qnty","moreThan10","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","eIds","shift_type","RamshikShiftList","RamshikPayouts","ramshik","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","variant","price","LumbersToSale","setLumberID","pineBrus","pineDoska","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","lumberRef","useRef","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","pb","pd","china_volume","SaleCalcContainer","lumberToSale","lumbersToSale","addLumberToSale","calcTotal","pine_brus_lumbers","pine_doska_lumbers","lumberData","parseFloat","round_volume","setRamaPrice","selling_price","selling_total_cash","rama_price","larchBrus","stockType","larchDoska","lb","ld","calc_type","SaleCheckList","loader","setAddParams","seller","bonus_kladman_label","sellers","client","delivery_fee","china_vira","setChinaVira","FormControl","s","FormControlLabel","control","Checkbox","color","LumbersTable","CreatedSale","sale","seller_fee","loader_fee","kladman_fee","SaleCommonToCreate","bonus_kladman","deliveryFee","sale_cash","SaleCreateCommonContainer","createdSale","stock_type","rama_type","larch_brus_lumbers","larch_doska_lumbers","kladman_id","SalesTable","sales","totals","deleteSale","sale_type","rama_total_cash","seller_name","total_selling_cash","total_seller_fee","total_loader_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","date_after","SalesList","sales_totals","sellers_fee","total","CashRecordsList","records","record","DailyRepContainer","createdExpense","expenses","incomes","allRecords","total_expenses","total_incomes","createExpense","created_at_after","expense_records","expense_records_total","income_records","income_records_total","records_total","sales_sellers_fee","expense","ExpensesList","CreateExpense","useState","setCount","setNote","ExpensesContainer","ResawInput","setLumber","lumber_input_label","lumber_input_quantity_label","CreatedResaw","resaw","lumber_in_quantity","lumber_in","lumber_out_quantity","lumber_out","ResawToCreate","lumberIn","lumberOut","ResawContainer","createdResaw","created","requireAuthentication","groups","AuthenticatedComponent","access","senior_ramshik","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.11d770cd.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    // ramshik api\r\n    RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_STOCK_SET_LUMBER_PRICE: `${apiUrl}/manager/stock/set_price/`,\r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n\r\n    // kladman api\r\n    KLADMAN_SALE_INIT_DATA: `${apiUrl}/kladman/sales/create/init_data/`,\r\n    KLADMAN_SALE_INIT_DATA_CHINA: `${apiUrl}/kladman/sales/create/init_data_china/`,\r\n    KLADMAN_SALE_CREATE: `${apiUrl}/kladman/sales/create/`,\r\n    KLADMAN_SALE_CALC_DATA: `${apiUrl}/kladman/sales/calc_data/`,\r\n\r\n    KLADMAN_EXPENSE_CREATE: `${apiUrl}/kladman/cash_records/create_expense/`,\r\n    KLADMAN_EXPENSE_LIST: `${apiUrl}/kladman/cash_records/list/`,\r\n    KLADMAN_DAYLY_REPORT_DATA: `${apiUrl}/kladman/daily_report/`,\r\n    kladman_delete_sale: (id) => `${apiUrl}/kladman/sales/${id}/`,\r\n    KLADMAN_RESAW_CREATE: `${apiUrl}/kladman/resaws/create/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n"," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nfunction MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        // 'height': '0px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, logout } = props\r\n  return (\r\n    user.is_ramshik &&\r\n      <div className=' '>\r\n        {/* <MenuItem title={'Смены список'} to={'/ramshik/shift/list/'}/> */}\r\n        {user.is_senior_ramshik &&\r\n          <MenuItem title={'Сдать смену'} to={'/ramshik/shift/create_shift/'}/>}\r\n        <MenuItem title={'Баланс и расчеты'} to={'/ramshik/payouts/'}/>\r\n      </div>,\r\n    (user.is_manager || user.is_kladman) &&\r\n      <div className=' '>\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Склад</h3>\r\n          <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n          <MenuItem title={'Перепил'} to={'/manager/resaws/create/'}/>\r\n        </div>\r\n\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Смены, перепил</h3>\r\n          <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/>\r\n          <MenuItem title={'Создать смену'} to={'/manager/shift/create_shift/'}/>\r\n        </div>\r\n        \r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Продажи</h3>\r\n          <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n          <MenuItem title={'Калькулятор продавца'} to={'/manager/sales/calc/'}/>\r\n          <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        </div>\r\n        \r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Отчеты и расходы</h3>\r\n          <MenuItem title={'Расходы'} to={'/manager/expenses/'}/>\r\n          <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>\r\n          <MenuItem title={'Итоги за день'} to={'/manager/daily_report/'}/>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>{props.user.rama}</h4>\r\n      <h6 >{props.user.nickname}</h6>\r\n      <button className='btn btn-sx bg-red1-light' onClick={handleClickLogout}>\r\n        выйти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout} user={user}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className='d-flex justify-content-start'>\r\n              {employees.length > 0 &&\r\n                <table className='table table-sm table-responsive w-75 mr-2'>\r\n                  <thead>\r\n                    <th>рамщик</th>\r\n                    <th>баланс</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {employees.map(employee => \r\n                      <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                        onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                        <td>{employee.nickname}</td>\r\n                        <td>{employee.cash} р</td>\r\n                      </tr>\r\n                      )}\r\n                  </tbody>\r\n                </table>\r\n              }\r\n              {activeEmployee && \r\n                <div>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <TextField type='number' className='my-1' value={amount}\r\n                    onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                  <button className='d-block btn btn-m bg-green2-light mt-2'\r\n                    onClick={this.payout}>\r\n                    Выдать\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function ShiftsTable (props) {\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата</th>\r\n        <th>Рамщики</th>\r\n        <th>Обьем</th>\r\n        <th>$ за работу</th>\r\n        <th>Пиломат</th>\r\n      </thead>\r\n      <tbody>\r\n        {props.shiftList.map(shift => \r\n          <tr>\r\n            <td>{shift.date}</td>\r\n            <td>\r\n              {/* <span className='d-block'>{shift.initiator}</span> */}\r\n              {shift.employees.length > 0 && shift.employees.map(emp =>\r\n                <span className='d-block'>{emp}</span>\r\n                )}\r\n            </td>\r\n            <td>{shift.volume}м3</td>\r\n            <td>\r\n              <span className='d-block'>{shift.employee_cash.toFixed(0)}р </span>\r\n              <span> {shift.cash_per_employee.toFixed(0)}р</span>\r\n            </td>\r\n            <td>\r\n              {shift.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '16px'}}>\r\n                  <span className='mr-1 d-block'>{lumber.lumber}</span>\r\n                  <span className='mr-1'>{lumber.quantity}шт</span>\r\n                  <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=''>{lumber.rate}р</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.getList = this.getList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.user.rama});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SHIFT_LIST,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results });\r\n    })\r\n  }\r\n\r\n  // getList () {\r\n  //   const { activeEmployee, amount } = this.state\r\n  //   const token = localStorage.getItem('token');\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"employee\", activeEmployee.id);\r\n  //   formData.append(\"amount\", amount);\r\n        \r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: endpoints.EMPLOYEE_PAYOUT,\r\n  //     data: formData,\r\n  //     headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n  //   })\r\n  //   .then(response => {\r\n  //     this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n  //       activeEmployee: null, last_payouts: response.data.last_payouts\r\n  //     });\r\n  //   })\r\n  //   .catch(err => {\r\n  //       const error = new Error(err);\r\n  //       error.data = parseErrorData(err);\r\n  //       this.setState({ message: 'Ошибка' });\r\n  //       throw error;\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerShiftList);","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost, user } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(3)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          {user.is_manager &&\r\n            <TextField type='number' \r\n              className=''\r\n              value={lumber.market_cost > 0 && lumber.market_cost} \r\n              onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n          }\r\n          {user.is_kladman && <span className='font-16'>{lumber.market_cost}</span>}\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_STOCK,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n   \r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_STOCK_SET_LUMBER_PRICE,\r\n      data: {\r\n        lumber: lumberId,\r\n        market_cost: parseInt(e.target.value) || 0\r\n      },\r\n      headers: {'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      lumber = res.data;\r\n    })\r\n\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}\r\n                        user={this.props.user}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerStock);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredLumberTr (props) {\r\n  const { lumber, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr key={key}>\r\n      <td>\r\n        {lumber.name} \r\n        {lumber.wood_species === 'pine' \r\n          ? <span className='d-block color-brown1-light'>сосна</span> \r\n          : <span className='d-block color-green2-light'>лиственница</span>}\r\n      </td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n        type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n        value={lumber.quantity > 0 && lumber.quantity}/>\r\n      </td>\r\n      <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n      <td>{lumber.employee_rate} руб</td>\r\n      <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((lumber.lumber_type !== 'doska' & lumber.wood_species === 'larch') | ( lumber.wood_species === 'pine'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'sorted' ) {\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\n\r\nexport function LumberTableMixed (props) {\r\n  const { lumbers, calcRowAndTotal, totalVolume, totalCash, calcType } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive text-center' \r\n      style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n      <thead>\r\n        <th>Изделие</th>\r\n        <th>Кол-во</th>\r\n        <th>Обьем</th>\r\n        <th>Ставка</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n      {lumbers.map((lumber, key) => \r\n        <FilteredLumberTr lumber={lumber} calcType={calcType} calcRowAndTotal={calcRowAndTotal} key={key}/>\r\n        )}\r\n        <tr>\r\n          <td>Итого</td>\r\n          <td className='w-25'>\r\n            -\r\n          </td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n            </span>\r\n          </td>\r\n          <td>-</td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  console.log(lumbers)\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2 flex-wrap'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) \r\n              ? 'bg-green2-light mx-1 my-1' + empClass : 'bg-dark1-dark mx-1 my-1' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock, LumberTableMixed } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      calcType: 'mixed',\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n    this.switchCalc = this.switchCalc.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_CREATE_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, \r\n          employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    if (lumber.employee_rate !== 800 && lumber.employee_rate !== 300) {\r\n      if (moreThan10) {\r\n        if (lumber.wood_species === 'pine') rate = 650\r\n        if (lumber.wood_species === 'larch') rate = 700\r\n      } else {\r\n        if (lumber.wood_species === 'pine') rate = 600\r\n        if (lumber.wood_species === 'larch') rate = 650\r\n      }\r\n    }\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      if (lumber.employee_rate !== 300)\r\n        totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.RAMSHIK_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalCash: 0,\r\n      totalVolume: 0,\r\n      calcType: calcType,\r\n      activeEmployees: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave, \r\n      calcType}  = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                  <h2>Смена </h2>\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight' : 'btn btn-s border'}\r\n                        onClick={() => this.switchCalc('mixed')}\r\n                        >доска перемешку</button>\r\n                      {/* <button className={calcType === 'larch_only' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.setState({calcType: 'larch_only'})}>\r\n                        все листвяк</button> */}\r\n                      <button className={calcType === 'sorted' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.switchCalc('sorted')}>\r\n                        доска по сортам</button>\r\n                    </div>\r\n                    {lumbers.length > 0 &&\r\n                      <LumberTableMixed\r\n                        calcType={this.state.calcType}\r\n                        lumbers={lumbers}\r\n                        calcRowAndTotal={this.calcRowAndTotal}\r\n\r\n                        totalCash={totalCash}\r\n                        totalVolume={totalVolume}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftsTable } from '../manager/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены  ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nexport class RamshikPayouts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n            \r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, label } = props\r\n  return (\r\n    <div className='my-2'>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.price > 0 && lumber.price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.total_cash > 0 && lumber.total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calcType === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              Точный счет\r\n            </button>\r\n            <button className={lumber.calcType === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              Округленный счет\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calcType === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calcType === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Точный счет'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />\r\n          }\r\n          {lumber.calcType === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Округленный счет'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n          {lumber.calcType === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale } from '../../components/kladman/SaleCalc';\r\n\r\n\r\nexport class SaleCalcContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      lumberToSale: null,\r\n      lumbersToSale: [],\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_CALC_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, calcType: 'exact' }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.price = 0\r\n    }\r\n\r\n    lumber.calcType = calcType\r\n    lumber.total_cash = lumber.volume_total * lumber.price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash } = this.state\r\n    return (\r\n      <div className=''>\r\n        <div className='content'>\r\n          <h3>Калькулятор</h3> \r\n          {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n            <LumbersToSale \r\n              lumber={lumber} \r\n              setLumberID={this.setLumberID} \r\n\r\n              calcRowQnty={this.calcRowQnty}\r\n              calcRowCash={this.calcRowCash}\r\n              calcRowVolume={this.calcRowVolume}\r\n\r\n              calcRoundRowQnty={this.calcRoundRowQnty}\r\n              calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n              calcChinaRowQnty={this.calcChinaRowQnty}\r\n              calcChinaRowVolume={this.calcChinaRowVolume}\r\n              \r\n              turnCalc={this.turnCalc}\r\n              delLumber={this.delLumber}\r\n              pineBrus={this.state.pineBrus}\r\n              pineDoska={this.state.pineDoska}\r\n            />\r\n          )}\r\n          <div className='d-flex justify-content-center'>\r\n            <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n              Добавить пиломатериал\r\n            </button>\r\n          </div>\r\n          {totalCash > 0 &&\r\n            <div className='card card-style mt-2'>\r\n              <div className='content d-flex justify-content-between mb-2 '>\r\n                <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-3'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Цена за 1м3 опт'\r\n          type='number'\r\n          onChange={(e) => setRamaPrice(e, lumber.id)}\r\n          value={lumber.rama_price > 0 && lumber.rama_price}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber, larchBrus,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice,\r\n     stockType, larchDoska } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        {stockType === 'mixed' &&\r\n          <optgroup label=\"Доска\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>\r\n        }\r\n        {stockType === 'sorted' && [\r\n          <optgroup label=\"Доска сосна\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>,\r\n          <optgroup label=\"Доска лиственница\">\r\n            {larchDoska.map(ld =>\r\n              <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n              )}\r\n          </optgroup>]\r\n        }\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              Точный счет\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              Округленный счет\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Точный счет'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Округленный счет'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { loader, setAddParams, seller, bonus_kladman_label, sellers, client, delivery_fee, china_vira,\r\n    setChinaVira, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            defaultValue={null}\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={loader}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='loader'\r\n            />\r\n          }\r\n          label=\"Грузчик\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={bonus_kladman_label}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='bonus_kladman_label'\r\n            />\r\n          }\r\n          label=\"Склад бонус\"\r\n        />\r\n      </div>  \r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n        {/* <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Вира(китай)'\r\n            type='number'\r\n            name='china_vira'\r\n            onChange={setChinaVira}\r\n            value={china_vira > 0 && china_vira}/> */}\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-2'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            {/* {sale.china_vira && <p className={rowClass}>Вира(китай): {sale.china_vira + 'рублей'}</p>} */}\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/kladman/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.setRamaPrice = this.setRamaPrice.bind(this);\r\n\r\n    this.setAddParams = this.setAddParams.bind(this);\r\n    this.setChinaVira = this.setChinaVira.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n\r\n    this.saveData = this.saveData.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({stock_type: this.props.user.rama_type});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRamaPrice (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = lumber.volume_total * lumber.selling_price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams(e) {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira (e) {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale\r\n                      stockType={this.props.user.rama_type}\r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setRamaPrice={this.setRamaPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleCreateCommonContainer);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { parseErrorData, createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals, deleteSale } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        {/* <th>Обьем</th> */}\r\n        <th>Сумма</th>\r\n        <th>Продавeц</th>\r\n        {/* <th>Сумма рамы</th> */}\r\n        <th>грузчик</th>\r\n        <th>кладмэн</th>\r\n        <th>Доставка</th>\r\n        {/* <th className='text-nowrap'>Доп. расходы</th> */}\r\n        <th className='text-nowrap'>Удалить</th>\r\n        {/* <th>Чистая прибыль</th> */}\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  <span className='d-block font-italic'>{lumber.wood_species}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_price}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_price}</span>\r\n                  {/* <span className='mr-1'>{lumber.quantity}шт</span> */}\r\n                  {/* <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=' d-block'>{lumber.selling_price}р</span> */}\r\n                </span>\r\n                )}\r\n            </td>\r\n            {/* <td>{sale.volume}</td> */}\r\n            <td>\r\n              {sale.selling_total_cash}\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              <span className='d-block'>{sale.seller_fee}</span>\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            {/* <td>\r\n              {sale.rama_total_cash}\r\n            </td> */}\r\n            <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              <button className='btn btn-xs bg-red1-light' value={sale.id} onClick={deleteSale}>Удалить</button>\r\n            </td>\r\n            {/* <td>\r\n              {sale.add_expenses}\r\n            </td> */}\r\n            {/* <td>\r\n              {sale.net_rama_cash}\r\n            </td> */}\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          {/* <td>{totals.total_volume} </td> */}\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>{totals.total_seller_fee}</td>\r\n          {/* <td>{totals.total_rama_cash}</td> */}\r\n          <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td>\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n          {/* <td>{totals.total_net_rama_cash}</td> */}\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.deleteSale = this.deleteSale.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date_after: getToday()});\r\n    // const params = {}\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_LIST,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  deleteSale (e) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.kladman_delete_sale(e.target.value),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals} deleteSale={this.deleteSale}/>\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          <th>Клад/груз</th>\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td>\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'rama_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/kladman/DailyRep';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_DAYLY_REPORT_DATA,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/kladman/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_DAYLY_REPORT_DATA,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total: initData.expense_records_total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nexport function ResawInput (props) {\r\n  const { lumber, quantity, setLumber, pineBrus, pineDoska, larchBrus, label, lumber_input_label } = props\r\n  let lumber_input_quantity_label = lumber_input_label + \"_quantity\"\r\n\r\n  return (\r\n    <div className=''>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        {label}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber} \r\n        onChange={setLumber}\r\n        name={lumber_input_label}\r\n        defaultValue={null}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n      </Select>\r\n      <TextField \r\n        className='mt-3'\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='Количество'\r\n        type='number'\r\n        name={lumber_input_quantity_label}\r\n        onChange={setLumber}\r\n        value={quantity}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport function CreatedResaw (props) {\r\n  const { resaw, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {resaw &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {resaw.created_at}</p>\r\n            \r\n            <p className={rowClass}>Перепелили: {resaw.lumber_in_quantity}шт {resaw.lumber_in} </p>\r\n            <p className={rowClass}>Получили: {resaw.lumber_out_quantity}шт {resaw.lumber_out} </p>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawToCreate (props) {\r\n  const { resaw, saveData, back, lumbers } = props\r\n  let lumberIn = getObjectbyId(lumbers, resaw.lumber_in)\r\n  let lumberOut = getObjectbyId(lumbers, resaw.lumber_out)\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {resaw &&\r\n          <div className=''>\r\n            <p className={rowClass}>Перепиливаем : {lumberIn.name} {resaw.lumber_in_quantity} шт</p>\r\n            <p className={rowClass}>Получаем : {lumberOut.name} {resaw.lumber_out_quantity} шт</p>\r\n            {/* <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p> */}\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport {  ResawToCreate, CreatedResaw, ResawInput }  from '../../components/kladman/Resaw';\r\n\r\n\r\nexport class ResawContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      \r\n      lumber_in: null,\r\n      lumber_in_quantity: null,\r\n      lumber_out: null,\r\n      lumber_out_quantity: null,\r\n\r\n      createdResaw: null,\r\n      dataToSave: null,\r\n    }\r\n\r\n    this.setLumber = this.setLumber.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  setLumber (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  preSave () {\r\n    const { lumber_in, lumber_in_quantity, lumber_out, lumber_out_quantity } = this.state\r\n    \r\n    let data = {\r\n      lumber_in: lumber_in,\r\n      lumber_in_quantity: lumber_in_quantity,\r\n      lumber_out: lumber_out,\r\n      lumber_out_quantity: lumber_out_quantity,\r\n    }\r\n    console.log(data)\r\n\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    console.log(dataToSave)\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_RESAW_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdResaw: response.data.created });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { createdResaw, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdResaw \r\n          ? <CreatedResaw resaw={createdResaw} message={message}/>\r\n          : dataToSave\r\n            ? <ResawToCreate resaw={dataToSave} saveData={this.saveData} back={this.back} \r\n                lumbers={this.state.lumbers}/>\r\n            : <div className='card card-style mt-3'>\r\n                <div className='content'>\r\n                  <ResawInput \r\n                    lumber={this.state.lumber_in}\r\n                    quantity={this.state.lumber_in_quantity}\r\n                    setLumber={this.setLumber}\r\n                    pineBrus={this.state.pineBrus}\r\n                    pineDoska={this.state.pineDoska}\r\n                    larchBrus={this.state.larchBrus}\r\n\r\n                    label={'Что перепиливаем?'}\r\n                    lumber_input_label={'lumber_in'}\r\n                  />\r\n                  <div className='mt-3'>\r\n                    <ResawInput \r\n                      lumber={this.state.lumber_out}\r\n                      quantity={this.state.lumber_out_quantity}\r\n                      setLumber={this.setLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchBrus={this.state.larchBrus}\r\n\r\n                      label={'Что получаем?'}\r\n                      lumber_input_label={'lumber_out'}\r\n                    />\r\n                  </div>\r\n                  <button className='btn btn-l bg-highlight mt-3' onClick={this.preSave}>\r\n                    Далее\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function requireAuthentication(Component, groups) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n          \r\n          if (this.props.isLoggedIn) {\r\n            if (groups.includes('manager') && user.is_manager)\r\n              access = true\r\n\r\n            if (groups.includes('kladman') && user.is_kladman)\r\n              access = true\r\n            \r\n            if (groups.includes('senior_ramshik') && user.senior_ramshik)\r\n              access = true\r\n          }\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? access\r\n                  ? <Component {...this.props} />\r\n                  : <h4 className='text-center my-5'>Нет прав</h4>\r\n                : <Redirect to={'/'}/>\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport ManagerStock from './containers/manager/Stock';\r\n\r\nimport { ShiftCreateComponent } from './containers/ramshik/Shift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikPayouts } from './containers/ramshik/Payouts';\r\n\r\nimport { SaleCalcContainer } from './containers/kladman/SaleCalc';\r\nimport  SaleCreateCommonContainer from './containers/kladman/SaleCreateCommon';\r\nimport { SaleList } from './containers/manager/SaleList';\r\nimport { DailyRepContainer } from './containers/kladman/DailyRep';\r\nimport { ExpensesContainer } from './containers/kladman/Expenses';\r\nimport { ResawContainer } from './containers/kladman/Resaw';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager and kladman views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/sales/calc/\" \r\n                component={requireAuthentication(SaleCalcContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/expenses/\" \r\n                component={requireAuthentication(ExpensesContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/daily_report/\" \r\n                component={requireAuthentication(DailyRepContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/resaws/create/\" \r\n                component={requireAuthentication(ResawContainer, ['manager', 'kladman'])} />\r\n\r\n              {/* ramshik views */}\r\n              <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['is_senior_ramshik'])} />\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, ['is_ramshik'])} />\r\n              <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, ['is_ramshik'])} />     \r\n\r\n              {/* kladman views */}\r\n              \r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}