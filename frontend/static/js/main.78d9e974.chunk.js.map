{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","containers/manager/RamshikPayments.js","containers/manager/Shifts.js","components/utils.js","containers/manager/Stock.js","components/ShiftCreateComponent.js","containers/ramshik/Shift.js","containers/ramshik/ShiftList.js","containers/ramshik/Payouts.js","components/kladman/SaleCalc.js","containers/kladman/SaleCalc.js","components/kladman/SaleCommon.js","containers/kladman/SaleCreateCommon.js","containers/manager/SaleList.js","components/kladman/DailyRep.js","containers/kladman/DailyRep.js","components/kladman/Expenses.js","containers/kladman/Expenses.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","RAMSHIK_SHIFT_CREATE_DATA","RAMSHIK_SHIFT_CREATE","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_SALE_LIST","KLADMAN_SALE_INIT_DATA","KLADMAN_SALE_INIT_DATA_CHINA","KLADMAN_SALE_CREATE","KLADMAN_SALE_CALC_DATA","KLADMAN_EXPENSE_CREATE","KLADMAN_EXPENSE_LIST","KLADMAN_DAYLY_REPORT_DATA","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","MenuItem","history","useHistory","onClick","push","to","style","title","AfterLogin","logout","is_ramshik","is_senior_ramshik","is_manager","is_kladman","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","Header","modalOpen","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","map","value","LastOperations","lastOperations","length","lineHeight","op","created_at","record_type","employee","amount","RamshikPayments","employees","activeEmployee","last_payouts","payout","method","url","headers","res","initData","setState","formData","FormData","id","errorObj","statusText","JSON","stringify","property","parseErrorData","nickname","cash","onChange","e","target","ShiftsTable","shiftList","shift","date","emp","volume","employee_cash","toFixed","cash_per_employee","lumber_records","lumber","quantity","rate","ManagerShiftList","results","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","TrRow","showNull","changeMarketCost","show","current_stock_quantity","wood_species","woodSpeciesClass","current_stock_volume","market_cost","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","LumberTable","console","log","lumber_record","volume_total","employee_rate","total_cash","ShiftToSave","saveData","back","rowClass","note","raw_records","employeesData","CreatedShift","back_calc_volume","back_calc_cash","back_calc_cash_per_employee","EmployeesBlock","activeEmployees","addEmployee","includes","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","dataToSave","calcRow","calcRowAndTotal","calcTotalVolume","calcTotalCash","preSave","qnty","moreThan10","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","eIds","shift_type","RamshikShiftList","RamshikPayouts","ramshik","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","variant","price","LumbersToSale","setLumberID","pineBrus","pineDoska","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","lumberRef","useRef","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","pb","pd","calcType","china_volume","SaleCalcContainer","lumberToSale","lumbersToSale","addLumberToSale","calcTotal","pine_brus_lumbers","pine_doska_lumbers","lumberData","parseFloat","round_volume","setRamaPrice","selling_price","selling_total_cash","rama_price","calc_type","SaleCheckList","loader","setAddParams","seller","bonus_kladman_label","sellers","client","delivery_fee","china_vira","setChinaVira","FormControl","s","FormControlLabel","control","Checkbox","color","LumbersTable","CreatedSale","sale","seller_fee","loader_fee","kladman_fee","SaleCommonToCreate","bonus_kladman","deliveryFee","sale_cash","SaleCreateCommonContainer","larchBrus","createdSale","larch_brus_lumbers","kladman_id","SalesTable","sales","totals","sale_type","seller_name","add_expenses","total_selling_cash","total_seller_fee","total_loader_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","date_after","SalesList","sales_totals","sellers_fee","total","CashRecordsList","records","record","DailyRepContainer","createdExpense","expenses","incomes","allRecords","total_expenses","total_incomes","createExpense","created_at_after","expense_records","expense_records_total","income_records","income_records_total","records_total","sales_sellers_fee","expense","ExpensesList","CreateExpense","useState","setCount","setNote","ExpensesContainer","requireAuthentication","AuthenticatedComponent","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.78d9e974.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    // ramshik api\r\n    RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n\r\n    // kladman api\r\n    KLADMAN_SALE_INIT_DATA: `${apiUrl}/kladman/sales/create/init_data/`,\r\n    KLADMAN_SALE_INIT_DATA_CHINA: `${apiUrl}/kladman/sales/create/init_data_china/`,\r\n    KLADMAN_SALE_CREATE: `${apiUrl}/kladman/sales/create/`,\r\n    KLADMAN_SALE_CALC_DATA: `${apiUrl}/kladman/sales/calc_data/`,\r\n\r\n    KLADMAN_EXPENSE_CREATE: `${apiUrl}/kladman/cash_records/create_expense/`,\r\n    KLADMAN_EXPENSE_LIST: `${apiUrl}/kladman/cash_records/list/`,\r\n    KLADMAN_DAYLY_REPORT_DATA: `${apiUrl}/kladman/daily_report/`,\r\n    // MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n"," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nfunction MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        // 'height': '0px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, logout } = props\r\n  return (\r\n    user.is_ramshik ? \r\n      <div className=' '>\r\n        {/* <MenuItem title={'Смены список'} to={'/ramshik/shift/list/'}/> */}\r\n        {user.is_senior_ramshik &&\r\n          <MenuItem title={'Сдать смену'} to={'/ramshik/shift/create_shift/'}/>}\r\n        <MenuItem title={'Баланс и расчеты'} to={'/ramshik/payouts/'}/>\r\n      </div>\r\n    : user.is_manager ?\r\n      <div className=' '>\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Склад</h3>\r\n          <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n        </div>\r\n\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Смены</h3>\r\n          <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/>\r\n          <MenuItem title={'Сдать смену'} to={'/manager/shift/create_shift/'}/>\r\n        </div>\r\n        \r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Продажи</h3>\r\n          <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n          <MenuItem title={'Калькулятор продавца'} to={'/manager/sales/calc/'}/>\r\n          <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        </div>\r\n        \r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Отчеты и расходы</h3>\r\n          <MenuItem title={'Расходы'} to={'/kladman/expenses/'}/>\r\n          <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>\r\n          <MenuItem title={'Итоги за день'} to={'/kladman/daily_report/'}/>\r\n        </div>\r\n      </div>\r\n    : user.is_kladman && \r\n      <div className=' '>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/kladman/stock/'}/>\r\n        <MenuItem title={'Создать продажу'} to={'/kladman/sales/create_sale/'}/>\r\n        <MenuItem title={'Продажи список'} to={'/kladman/sale_list/'}/>\r\n        <MenuItem title={'Смены список'} to={'/kladman/shift_list/'}/>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>Рама</h4>\r\n      <button className='btn btn-sx bg-red1-light' onClick={handleClickLogout}>\r\n        выйти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className='d-flex justify-content-start'>\r\n              {employees.length > 0 &&\r\n                <table className='table table-sm table-responsive w-75 mr-2'>\r\n                  <thead>\r\n                    <th>рамщик</th>\r\n                    <th>баланс</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {employees.map(employee => \r\n                      <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                        onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                        <td>{employee.nickname}</td>\r\n                        <td>{employee.cash} р</td>\r\n                      </tr>\r\n                      )}\r\n                  </tbody>\r\n                </table>\r\n              }\r\n              {activeEmployee && \r\n                <div>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <TextField type='number' className='my-1' value={amount}\r\n                    onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                  <button className='d-block btn btn-m bg-green2-light mt-2'\r\n                    onClick={this.payout}>\r\n                    Выдать\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function ShiftsTable (props) {\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата</th>\r\n        <th>Рамщики</th>\r\n        <th>Обьем</th>\r\n        <th>$ за работу</th>\r\n        <th>Пиломат</th>\r\n      </thead>\r\n      <tbody>\r\n        {props.shiftList.map(shift => \r\n          <tr>\r\n            <td>{shift.date}</td>\r\n            <td>\r\n              {/* <span className='d-block'>{shift.initiator}</span> */}\r\n              {shift.employees.length > 0 && shift.employees.map(emp =>\r\n                <span className='d-block'>{emp}</span>\r\n                )}\r\n            </td>\r\n            <td>{shift.volume}м3</td>\r\n            <td>\r\n              <span className='d-block'>{shift.employee_cash.toFixed(0)}р </span>\r\n              <span> {shift.cash_per_employee.toFixed(0)}р</span>\r\n            </td>\r\n            <td>\r\n              {shift.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '16px'}}>\r\n                  <span className='mr-1 d-block'>{lumber.lumber}</span>\r\n                  <span className='mr-1'>{lumber.quantity}шт</span>\r\n                  <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=''>{lumber.rate}р</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport default class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.getList = this.getList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SHIFT_LIST,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results });\r\n    })\r\n  }\r\n\r\n  // getList () {\r\n  //   const { activeEmployee, amount } = this.state\r\n  //   const token = localStorage.getItem('token');\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"employee\", activeEmployee.id);\r\n  //   formData.append(\"amount\", amount);\r\n        \r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: endpoints.EMPLOYEE_PAYOUT,\r\n  //     data: formData,\r\n  //     headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n  //   })\r\n  //   .then(response => {\r\n  //     this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n  //       activeEmployee: null, last_payouts: response.data.last_payouts\r\n  //     });\r\n  //   })\r\n  //   .catch(err => {\r\n  //       const error = new Error(err);\r\n  //       error.data = parseErrorData(err);\r\n  //       this.setState({ message: 'Ошибка' });\r\n  //       throw error;\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(3)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          <TextField type='number' \r\n            className=''\r\n            value={lumber.market_cost > 0 && lumber.market_cost} \r\n            onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_STOCK,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  console.log(lumbers)\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) ? 'bg-green2-light' + empClass : 'bg-dark1-dark' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_CREATE_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    if (moreThan10 && lumber.employee_rate == 600) rate = 650\r\n    if (!moreThan10 && lumber.employee_rate == 650) rate = 600\r\n    if (!moreThan10 && lumber.employee_rate == 600) rate = lumber.employee_rate\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.RAMSHIK_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave} \r\n      = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                    <h2>Смена</h2>\r\n                    {lumbers.length > 0 &&\r\n                      <table className='table table-sm table-responsive text-center' \r\n                        style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n                        <thead>\r\n                          <th>Изделие</th>\r\n                          <th>Кол-во</th>\r\n                          <th>Обьем</th>\r\n                          <th>Ставка</th>\r\n                          <th>Сумма</th>\r\n                        </thead>\r\n                        <tbody>\r\n                        {lumbers.map((lumber, key) => \r\n                          <tr key={key}>\r\n                            <td>\r\n                              {lumber.name} \r\n                              {lumber.wood_species === 'pine' \r\n                                ? <span className='d-block color-brown1-light'>сосна</span> \r\n                                : <span className='d-block color-green2-light'>лиственница</span>}\r\n                            </td>\r\n                            <td className='w-25'>\r\n                              <input style={{'color': '#6c6c6c'}}\r\n                              type='number' className='w-75' onChange={(e) => this.calcRowAndTotal(e, lumber)} \r\n                              value={lumber.quantity > 0 && lumber.quantity}/>\r\n                            </td>\r\n                            <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n                            <td>{lumber.employee_rate} руб</td>\r\n                            <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n                          </tr>\r\n                          )}\r\n                          <tr>\r\n                            <td>Итого</td>\r\n                            <td className='w-25'>\r\n                              -\r\n                            </td>\r\n                            <td>\r\n                              <span className='font-17 font-600'>\r\n                                {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n                              </span>\r\n                            </td>\r\n                            <td>-</td>\r\n                            <td>\r\n                              <span className='font-17 font-600'>\r\n                                {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftsTable } from '../manager/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены  ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nexport class RamshikPayouts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n            \r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, label } = props\r\n  return (\r\n    <div className='my-2'>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.price > 0 && lumber.price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.total_cash > 0 && lumber.total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calcType === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              Точный счет\r\n            </button>\r\n            <button className={lumber.calcType === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              Округленный счет\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calcType === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calcType === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Точный счет'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />\r\n          }\r\n          {lumber.calcType === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Округленный счет'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n          {lumber.calcType === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale } from '../../components/kladman/SaleCalc';\r\n\r\n\r\nexport class SaleCalcContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      lumberToSale: null,\r\n      lumbersToSale: [],\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_CALC_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, calcType: 'exact' }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.price = 0\r\n    }\r\n\r\n    lumber.calcType = calcType\r\n    lumber.total_cash = lumber.volume_total * lumber.price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash } = this.state\r\n    return (\r\n      <div className=''>\r\n        <div className='content'>\r\n          <h3>Калькулятор</h3> \r\n          {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n            <LumbersToSale \r\n              lumber={lumber} \r\n              setLumberID={this.setLumberID} \r\n\r\n              calcRowQnty={this.calcRowQnty}\r\n              calcRowCash={this.calcRowCash}\r\n              calcRowVolume={this.calcRowVolume}\r\n\r\n              calcRoundRowQnty={this.calcRoundRowQnty}\r\n              calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n              calcChinaRowQnty={this.calcChinaRowQnty}\r\n              calcChinaRowVolume={this.calcChinaRowVolume}\r\n              \r\n              turnCalc={this.turnCalc}\r\n              delLumber={this.delLumber}\r\n              pineBrus={this.state.pineBrus}\r\n              pineDoska={this.state.pineDoska}\r\n            />\r\n          )}\r\n          <div className='d-flex justify-content-center'>\r\n            <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n              Добавить пиломатериал\r\n            </button>\r\n          </div>\r\n          {totalCash > 0 &&\r\n            <div className='card card-style mt-2'>\r\n              <div className='content d-flex justify-content-between mb-2 '>\r\n                <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-3'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3 опт'\r\n          type='number'\r\n          onChange={(e) => setRamaPrice(e, lumber.id)}\r\n          value={lumber.rama_price > 0 && lumber.rama_price}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice }\r\n     = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              Точный счет\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              Округленный счет\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Точный счет'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Округленный счет'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { loader, setAddParams, seller, bonus_kladman_label, sellers, client, delivery_fee, china_vira,\r\n    setChinaVira, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            defaultValue={null}\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={loader}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='loader'\r\n            />\r\n          }\r\n          label=\"Грузчик\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={bonus_kladman_label}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='bonus_kladman_label'\r\n            />\r\n          }\r\n          label=\"Склад бонус\"\r\n        />\r\n      </div>  \r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n        {/* <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Вира(китай)'\r\n            type='number'\r\n            name='china_vira'\r\n            onChange={setChinaVira}\r\n            value={china_vira > 0 && china_vira}/> */}\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-2'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            {/* {sale.china_vira && <p className={rowClass}>Вира(китай): {sale.china_vira + 'рублей'}</p>} */}\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/kladman/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.setRamaPrice = this.setRamaPrice.bind(this);\r\n\r\n    this.setAddParams = this.setAddParams.bind(this);\r\n    this.setChinaVira = this.setChinaVira.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n\r\n    this.saveData = this.saveData.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRamaPrice (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = lumber.volume_total * lumber.selling_price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams(e) {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira (e) {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale \r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setRamaPrice={this.setRamaPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { parseErrorData, createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        {/* <th>Обьем</th> */}\r\n        <th>Сумма</th>\r\n        <th>Продавeц</th>\r\n        {/* <th>Сумма рамы</th> */}\r\n        <th>грузчик</th>\r\n        <th>кладмэн</th>\r\n        <th>Доставка</th>\r\n        <th className='text-nowrap'>Доп. расходы</th>\r\n        {/* <th>Чистая прибыль</th> */}\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  {/* <span className='mr-1'>{lumber.quantity}шт</span> */}\r\n                  {/* <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=' d-block'>{lumber.selling_price}р</span> */}\r\n                </span>\r\n                )}\r\n            </td>\r\n            {/* <td>{sale.volume}</td> */}\r\n            <td>\r\n              {sale.selling_total_cash}\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              <span className='d-block'>{sale.seller_fee}</span>\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            {/* <td>\r\n              {sale.rama_total_cash}\r\n            </td> */}\r\n            <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              {sale.add_expenses}\r\n            </td>\r\n            {/* <td>\r\n              {sale.net_rama_cash}\r\n            </td> */}\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          {/* <td>{totals.total_volume} </td> */}\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>{totals.total_seller_fee}</td>\r\n          {/* <td>{totals.total_rama_cash}</td> */}\r\n          <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td>\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n          {/* <td>{totals.total_net_rama_cash}</td> */}\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date_after: getToday()});\r\n    // const params = {}\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_LIST,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals}/>\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          <th>Клад/груз</th>\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td>\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'rama_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/kladman/DailyRep';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_DAYLY_REPORT_DATA,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/kladman/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_DAYLY_REPORT_DATA,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total: initData.expense_records_total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\n\r\nexport default function requireAuthentication(Component, group) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n        //   if (this.props.isLoggedIn === true && (ws_numbers.includes(this.props.user.workshop_number) || \r\n        //     this.props.user.is_officer)) access = true\r\n        \r\n          if (this.props.isLoggedIn === true && !group) access = true\r\n          if (this.props.isLoggedIn && group === 'manager' && user.is_manager) access = true\r\n          if (this.props.isLoggedIn && group === 'senior_ramshik' && user.is_senior_ramshik) access = true\r\n          if (this.props.isLoggedIn && group === 'kladman' && user.is_kladman) access = true\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? <Component {...this.props} />\r\n                : null\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport { ManagerStock } from './containers/manager/Stock';\r\n\r\nimport { ShiftCreateComponent } from './containers/ramshik/Shift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikPayouts } from './containers/ramshik/Payouts';\r\n\r\nimport { SaleCalcContainer } from './containers/kladman/SaleCalc';\r\nimport { SaleCreateCommonContainer } from './containers/kladman/SaleCreateCommon';\r\nimport { SaleList } from './containers/manager/SaleList';\r\nimport { DailyRepContainer } from './containers/kladman/DailyRep';\r\nimport { ExpensesContainer } from './containers/kladman/Expenses';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, 'manager')} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'manager')} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, 'manager')} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, 'manager')} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, 'manager')} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, 'manager')} />\r\n              <Route exact path=\"/manager/sales/calc/\" \r\n                component={requireAuthentication(SaleCalcContainer, 'manager')} />\r\n              \r\n\r\n              {/* ramshik views */}\r\n              <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, 'is_senior_ramshik')} />\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, 'is_ramshik')} />\r\n              <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, 'is_ramshik')} />     \r\n\r\n              {/* kladman views */}\r\n              <Route exact path=\"/kladman/stock/\" \r\n                component={requireAuthentication(ManagerStock, 'kladman')} />\r\n              <Route exact path=\"/kladman/sale_list/\" \r\n                component={requireAuthentication(SaleList, 'kladman')} />\r\n              <Route exact path=\"/kladman/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'kladman')} />\r\n              <Route exact path=\"/kladman/expenses/\" \r\n                component={requireAuthentication(ExpensesContainer, 'manager')} />\r\n              <Route exact path=\"/kladman/daily_report/\" \r\n                component={requireAuthentication(DailyRepContainer, 'manager')} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}