{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","containers/manager/RamshikPayments.js","components/Shifts.js","containers/manager/Shifts.js","components/utils.js","containers/manager/Stock.js","components/CreateIncomeTimberComponent.js","containers/manager/CreateIncome.js","containers/manager/Quotas.js","components/ShiftCreateComponent.js","containers/ramshik/Shift.js","containers/ramshik/ShiftList.js","containers/ramshik/OverView.js","components/kladman/SaleCalc.js","containers/kladman/SaleCalc.js","components/kladman/SaleCommon.js","containers/kladman/SaleCreateCommon.js","containers/manager/SaleList.js","components/kladman/DailyRep.js","containers/kladman/DailyRep.js","components/kladman/Expenses.js","containers/kladman/Expenses.js","components/kladman/Resaw.js","containers/kladman/Resaw.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","RAMSHIK_SHIFT_CREATE_DATA","RAMSHIK_SHIFT_CREATE","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_STOCK_SET_LUMBER_PRICE","MANAGER_SALE_LIST","MANAGER_RAWSTOCK_INCOME_INIT_DATA","MANAGER_RAWSTOCK_INCOME_CREATE","MANAGER_QUOTA_OVERVIEW","KLADMAN_SALE_INIT_DATA","KLADMAN_SALE_INIT_DATA_CHINA","KLADMAN_SALE_CREATE","KLADMAN_SALE_CALC_DATA","KLADMAN_EXPENSE_CREATE","KLADMAN_EXPENSE_LIST","KLADMAN_DAYLY_REPORT_DATA","kladman_delete_sale","id","KLADMAN_RESAW_CREATE","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","MenuItem","history","useHistory","onClick","push","to","style","title","AfterLogin","logout","is_ramshik","is_manager","is_kladman","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","rama","nickname","Header","modalOpen","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","map","value","LastOperations","lastOperations","length","lineHeight","op","created_at","record_type","employee","amount","RamshikPayments","employees","activeEmployee","last_payouts","payout","method","url","headers","res","initData","setState","formData","FormData","errorObj","statusText","JSON","stringify","property","parseErrorData","cash","onChange","e","target","ShiftLumberTr","record","wood_species","lumber","includes","quantity","volume","rate","total_cash","ShiftComponent","shift","date","shift_type","emp","back_calc_cash_per_employee","back_calc_cash","lumber_records","ShiftList","shiftList","ManagerShiftList","results","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","TrRow","showNull","changeMarketCost","show","current_stock_quantity","woodSpeciesClass","current_stock_volume","toFixed","market_cost","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","FilteredTimberTr","timber_record","calcType","calcRowAndTotal","tr","diameter","TimberTable","timbers","totalQnty","colSpan","TimberTableRead","IncomeToSave","incomeTimber","saveData","back","raw_timber_records","CreatedIncome","createdIncome","rowClass","note","timber_records","IncomeTimberCreateContainer","initTimbers","dataToSave","preSave","switchCalc","timber","tmb","income_timber","QuotaOverview","total_volume_quota_brus","total_volume_quota_doska","total_volume_sold_brus","total_volume_sold_doska","brus_balance","doska_balance","rama_id","FilteredLumberTr","volume_total","employee_rate","lumber_type","LumberTableMixed","LumberTable","lumber_record","ShiftToSave","employee_cash","cash_per_employee","raw_records","employeesData","CreatedShift","back_calc_volume","EmployeesBlock","activeEmployees","addEmployee","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","calcRow","calcTotalVolume","calcTotalCash","qnty","moreThan10","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","eIds","RamshikShiftList","ShiftListButton","RamshikOverView","ramshik","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","variant","price","LumbersToSale","setLumberID","pineBrus","pineDoska","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","lumberRef","useRef","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","pb","pd","china_volume","SaleCalcContainer","lumberToSale","lumbersToSale","addLumberToSale","calcTotal","pine_brus_lumbers","pine_doska_lumbers","lumberData","parseFloat","round_volume","setRamaPrice","selling_price","selling_total_cash","rama_price","larchBrus","stockType","larchDoska","lb","ld","calc_type","SaleCheckList","loader","setAddParams","seller","bonus_kladman_label","sellers","client","delivery_fee","china_vira","setChinaVira","FormControl","s","FormControlLabel","control","Checkbox","color","LumbersTable","CreatedSale","sale","seller_fee","loader_fee","kladman_fee","SaleCommonToCreate","bonus_kladman","deliveryFee","sale_cash","SaleCreateCommonContainer","createdSale","stock_type","rama_type","larch_brus_lumbers","larch_doska_lumbers","kladman_id","SalesTable","sales","totals","deleteSale","sale_type","rama_total_cash","seller_name","total_selling_cash","total_seller_fee","total_loader_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","date_after","console","log","SalesList","sales_totals","sellers_fee","total","CashRecordsList","records","DailyRepContainer","createdExpense","expenses","incomes","allRecords","total_expenses","total_incomes","createExpense","created_at_after","expense_records","expense_records_total","income_records","income_records_total","records_total","sales_sellers_fee","expense","ExpensesList","CreateExpense","useState","setCount","setNote","ExpensesContainer","ResawInput","setLumber","lumber_input_label","lumber_input_quantity_label","CreatedResaw","resaw","lumber_in_quantity","lumber_in","lumber_out_quantity","lumber_out","ResawToCreate","lumberIn","lumberOut","ResawContainer","createdResaw","created","requireAuthentication","groups","AuthenticatedComponent","access","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.0e0cbf15.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    // ramshik api\r\n    RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_STOCK_SET_LUMBER_PRICE: `${apiUrl}/manager/stock/set_price/`,\r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n    MANAGER_RAWSTOCK_INCOME_INIT_DATA: `${apiUrl}/manager/rawstock/timber/create_income/init_data/`,\r\n    MANAGER_RAWSTOCK_INCOME_CREATE: `${apiUrl}/manager/rawstock/timber/create_income/`,\r\n    MANAGER_QUOTA_OVERVIEW: `${apiUrl}/manager/quota/overview/`,\r\n\r\n    // kladman api\r\n    KLADMAN_SALE_INIT_DATA: `${apiUrl}/kladman/sales/create/init_data/`,\r\n    KLADMAN_SALE_INIT_DATA_CHINA: `${apiUrl}/kladman/sales/create/init_data_china/`,\r\n    KLADMAN_SALE_CREATE: `${apiUrl}/kladman/sales/create/`,\r\n    KLADMAN_SALE_CALC_DATA: `${apiUrl}/kladman/sales/calc_data/`,\r\n\r\n    KLADMAN_EXPENSE_CREATE: `${apiUrl}/kladman/cash_records/create_expense/`,\r\n    KLADMAN_EXPENSE_LIST: `${apiUrl}/kladman/cash_records/list/`,\r\n    KLADMAN_DAYLY_REPORT_DATA: `${apiUrl}/kladman/daily_report/`,\r\n    kladman_delete_sale: (id) => `${apiUrl}/kladman/sales/${id}/`,\r\n    KLADMAN_RESAW_CREATE: `${apiUrl}/kladman/resaws/create/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n"," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nexport function MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        // 'height': '0px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, logout } = props\r\n\r\n  if (user.is_ramshik) \r\n    return <Redirect to=\"/ramshik/main\" />\r\n  \r\n    // return (\r\n    //   <div className=' '>\r\n    //     <div className='my-4'>\r\n    //       {/* <MenuItem title={'Сдать смену'} to={'/ramshik/shift/create_shift/'}/> */}\r\n    //       <MenuItem title={'Баланс и расчеты'} to={'/ramshik/payouts/'}/>\r\n    //       <MenuItem title={'Смены список'} to={'/ramshik/shift/list/'}/>\r\n    //     </div>\r\n    //   </div>)\r\n\r\n  if (user.is_manager || user.is_kladman) \r\n    return (\r\n      <div className=' '>\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Склад</h3>\r\n          <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n          <MenuItem title={'Перепил'} to={'/manager/resaws/create/'}/>\r\n        </div>\r\n\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Круглый лес и план</h3>\r\n          <MenuItem title={'Приход круглого леса'} to={'/manager/rawstock/create_income/'}/>\r\n          <MenuItem title={'План'} to={'/manager/quotas/overview/'}/>\r\n        </div>\r\n\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Смены, перепил</h3>\r\n          <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/>\r\n          <MenuItem title={'Создать смену'} to={'/manager/shift/create_shift/'}/>\r\n        </div>\r\n        \r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Продажи</h3>\r\n          <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n          <MenuItem title={'Калькулятор продавца'} to={'/manager/sales/calc/'}/>\r\n          <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        </div>\r\n        \r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Отчеты и расходы</h3>\r\n          <MenuItem title={'Расходы'} to={'/manager/expenses/'}/>\r\n          <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>\r\n          <MenuItem title={'Итоги за день'} to={'/manager/daily_report/'}/>\r\n        </div>\r\n      </div>)\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>{props.user.rama}</h4>\r\n      <h6 >{props.user.nickname}</h6>\r\n      <button className='btn btn-sx bg-red1-light' onClick={handleClickLogout}>\r\n        выйти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout} user={user}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className='d-flex justify-content-start'>\r\n              {employees.length > 0 &&\r\n                <table className='table table-sm table-responsive w-75 mr-2'>\r\n                  <thead>\r\n                    <th>рамщик</th>\r\n                    <th>баланс</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {employees.map(employee => \r\n                      <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                        onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                        <td>{employee.nickname}</td>\r\n                        <td>{employee.cash} р</td>\r\n                      </tr>\r\n                      )}\r\n                  </tbody>\r\n                </table>\r\n              }\r\n              {activeEmployee && \r\n                <div>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <TextField type='number' className='my-1' value={amount}\r\n                    onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                  <button className='d-block btn btn-m bg-green2-light mt-2'\r\n                    onClick={this.payout}>\r\n                    Выдать\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nfunction ShiftLumberTr (props) {\r\n  const { record } = props\r\n  const measureClass = 'font-10'\r\n  return (\r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {record.wood_species === 'larch'  \r\n          ? <span className='d-block color-brown1-light'>листв</span>\r\n          : <span className='d-block color-green1-light'>сосна</span>\r\n        }\r\n        {record.lumber.includes('доска') \r\n          ? <span className='font-italic'>{record.lumber}</span>\r\n          : <span className=''>{record.lumber}</span>\r\n        }\r\n      </td>\r\n      <td>\r\n        {record.quantity}\r\n        <span className={measureClass}> шт</span>\r\n      </td>\r\n      <td>{record.volume}<span className={measureClass}> м3</span></td>\r\n      <td>{record.rate}<span className={measureClass}> р</span></td>\r\n      <td>{record.total_cash}<span className={measureClass}> р</span></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport function ShiftComponent (props) {\r\n  const { shift } = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content mb-1'>\r\n        <p className='color-black mb-0 font-16'>Дата: {shift.date} {shift.shift_type}</p>\r\n        <p className='mb-0 color-black'>\r\n          Работали: \r\n          {shift.employees.map(emp => <span className='mx-1'>{emp}</span>)}\r\n        </p>\r\n        <p className='color-black mb-0 font-13 d-flex justify-content-between'>\r\n          <span>На одного: {shift.back_calc_cash_per_employee} р</span>\r\n          <span>Общая сумма: {shift.back_calc_cash} р</span>\r\n        </p>\r\n      </div>\r\n      <div className='content mt-0'>\r\n        <table className='table table-sm'>\r\n          <thead>\r\n            <th>Пиломат</th>\r\n            <th>кол-во</th>\r\n            <th>объем</th>\r\n            <th>ставка</th>\r\n            <th>сумма</th>\r\n          </thead>\r\n          <tbody>\r\n            {shift.lumber_records.map(record => \r\n              <ShiftLumberTr record={record}/>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShiftList (props) {\r\n  const { shiftList } = props\r\n  return (\r\n    <div className='mt-2'>\r\n      <h4 className='my-3 text-center'>Смены  ({shiftList.length})</h4>\r\n      {shiftList.length > 0 && shiftList.map(shift => \r\n          <ShiftComponent shift={shift} />\r\n      )}\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftList } from '../../components/Shifts';\r\n\r\n\r\nexport class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.getList = this.getList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.user.rama});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SHIFT_LIST,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results });\r\n    })\r\n  }\r\n\r\n  // getList () {\r\n  //   const { activeEmployee, amount } = this.state\r\n  //   const token = localStorage.getItem('token');\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"employee\", activeEmployee.id);\r\n  //   formData.append(\"amount\", amount);\r\n        \r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: endpoints.EMPLOYEE_PAYOUT,\r\n  //     data: formData,\r\n  //     headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n  //   })\r\n  //   .then(response => {\r\n  //     this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n  //       activeEmployee: null, last_payouts: response.data.last_payouts\r\n  //     });\r\n  //   })\r\n  //   .catch(err => {\r\n  //       const error = new Error(err);\r\n  //       error.data = parseErrorData(err);\r\n  //       this.setState({ message: 'Ошибка' });\r\n  //       throw error;\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <ShiftList shiftList={this.state.shiftList} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerShiftList);","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost, user } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(3)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          {user.is_manager &&\r\n            <TextField type='number' \r\n              className=''\r\n              value={lumber.market_cost > 0 && lumber.market_cost} \r\n              onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n          }\r\n          {user.is_kladman && <span className='font-16'>{lumber.market_cost}</span>}\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_STOCK,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n   \r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_STOCK_SET_LUMBER_PRICE,\r\n      data: {\r\n        lumber: lumberId,\r\n        market_cost: parseInt(e.target.value) || 0\r\n      },\r\n      headers: {'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      lumber = res.data;\r\n    })\r\n\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}\r\n                        user={this.props.user}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerStock);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredTimberTr (props) {\r\n  const { timber_record, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {timber_record.diameter }\r\n        {timber_record.wood_species === 'Сосна' \r\n          ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n          : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n        }\r\n      </td>\r\n      <td className=''>\r\n          <input style={{'color': '#6c6c6c'}}\r\n            type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, timber_record)} \r\n            value={timber_record.quantity > 0 && timber_record.quantity}/>\r\n      </td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((timber_record.wood_species === 'Лиственница') | ( timber_record.wood_species === 'Сосна'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'pine' ) {\r\n    if (timber_record.wood_species === 'Сосна')\r\n      return tr\r\n    }\r\n\r\n  if (calcType === 'larch' ) {\r\n    if (timber_record.wood_species === 'Лиственница')\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\nexport function TimberTable (props) {\r\n  const { timbers, calcRowAndTotal, totalQnty, calcType } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) =>\r\n          <FilteredTimberTr timber_record={timber_record} calcRowAndTotal={calcRowAndTotal} \r\n            calcType={calcType} key={key}/>\r\n          )}\r\n        <tr>\r\n          <td colSpan='2'>\r\n            <span className='font-17'>Общее количество: {totalQnty}</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function TimberTableRead (props) {\r\n  const { timbers } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) => timber_record.quantity > 0 &&\r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {timber_record.diameter}\r\n              {timber_record.wood_species === 'Сосна' \r\n                ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n                : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n              }\r\n            </td>\r\n            <td>{timber_record.quantity}</td>\r\n          </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function IncomeToSave (props) {\r\n  const { incomeTimber, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {incomeTimber &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Общее количество: {incomeTimber.totalQnty}</p>\r\n            <TimberTableRead timbers={incomeTimber.raw_timber_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedIncome (props) {\r\n  const { createdIncome, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Приход сохранен</h4>\r\n        {createdIncome &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {createdIncome.created_at}</p>\r\n            <p className={rowClass}>\r\n              Общее количество: {createdIncome.quantity} шт</p>\r\n            <p className={rowClass}>\r\n              Общий объем: {createdIncome.volume} м3</p>              \r\n            <p className={rowClass}>Примечание: {createdIncome.note}</p>\r\n\r\n            <TimberTableRead timbers={createdIncome.timber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\n\r\nimport { TimberTable, CreatedIncome, IncomeToSave } from '../../components/CreateIncomeTimberComponent';\r\n\r\n\r\nexport class IncomeTimberCreateContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timbers: [],\r\n      initTimbers: [],\r\n      calcType: 'pine',\r\n      totalQnty: 0,\r\n      dataToSave: null,\r\n      createdIncome: null\r\n    }\r\n\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.switchCalc = this.switchCalc.bind(this);\r\n    this.saveData = this.saveData.bind(this)\r\n    this.back = this.back.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_RAWSTOCK_INCOME_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ timbers: initData.timbers, initTimbers: initData.timbers });\r\n      })\r\n  }\r\n\r\n  calcRowAndTotal (e, timber) {\r\n    let { timbers } = this.state\r\n    timber.quantity = parseInt(e.target.value)\r\n\r\n    timbers = replaceItemInDictArrayById(timbers, timber)\r\n    let totalQnty = 0\r\n\r\n    timbers.map(tmb => {\r\n      totalQnty = totalQnty + parseInt(tmb.quantity)\r\n    })\r\n\r\n    this.setState({ \r\n      ...this.state,\r\n      timbers: timbers,\r\n      totalQnty: totalQnty,\r\n      message: null\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { timbers, totalQnty } = this.state\r\n    let data = {\r\n      raw_timber_records: timbers,\r\n      totalQnty: totalQnty\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_RAWSTOCK_INCOME_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdIncome: response.data.income_timber });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      timbers: this.state.initTimbers,\r\n      totalQnty: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      timbers: this.state.timbers,\r\n      totalQnty: 0,\r\n      calcType: calcType,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { timbers, totalQnty, calcType, createdIncome, dataToSave, message }  = this.state\r\n    return (\r\n      <div>\r\n        {createdIncome \r\n          ? <CreatedIncome createdIncome={createdIncome} message={message}/>\r\n          : dataToSave\r\n            ? <IncomeToSave incomeTimber={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : timbers.length > 0 &&\r\n              <div className='card card-style mb-1 mt-2'>\r\n                <div className='content mb-1'>\r\n                  <h3>Приход круглого</h3>\r\n                  <div className='d-flex justify-content-between my-2'>\r\n                    <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'}\r\n                      onClick={() => this.switchCalc('mixed')}\r\n                      >Пересорт</button>\r\n                    <button className={calcType === 'larch' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('larch')}>\r\n                      все листвяк</button>\r\n                    <button className={calcType === 'pine' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('pine')}>\r\n                      все сосна</button>\r\n                  </div>\r\n                  <TimberTable timbers={timbers} calcRowAndTotal={this.calcRowAndTotal} totalQnty={totalQnty}\r\n                    calcType={calcType}/>\r\n                </div>\r\n                {totalQnty > 0 && \r\n                  <div className='content mt-0'>\r\n                    <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                  </div>\r\n                }\r\n              </div>\r\n            }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nexport class QuotaOverview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      total_volume_quota_brus: null,\r\n      total_volume_quota_doska: null,\r\n      total_volume_sold_brus: null,\r\n      total_volume_sold_doska: null,\r\n      brus_balance: null,\r\n      doska_balance: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.user.rama_id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_QUOTA_OVERVIEW,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      this.setState({ \r\n        total_volume_quota_brus: res.data.total_volume_quota_brus,\r\n        total_volume_quota_doska: res.data.total_volume_quota_doska,\r\n        total_volume_sold_brus: res.data.total_volume_sold_brus,\r\n        total_volume_sold_doska: res.data.total_volume_sold_doska,\r\n        brus_balance: res.data.brus_balance,\r\n        doska_balance: res.data.doska_balance,\r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { } = this.state\r\n    let brusBalance = \r\n      (this.state.total_volume_quota_brus - this.state.total_volume_sold_brus).toFixed()\r\n    return (\r\n      <div className='card card-style my-2'>\r\n        <div className='content'>\r\n          <h4 className='mb-2'>План пилорамы</h4>\r\n          <table className='table table-sm'>\r\n            <thead>\r\n              <th>-</th>\r\n              <th>План</th>\r\n              <th>Отгружено</th>\r\n              <th>Баланс</th>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Брус</td>\r\n                <td>{this.state.total_volume_quota_brus}</td>\r\n                <td>{this.state.total_volume_sold_brus}</td>\r\n                <td>{this.state.brus_balance && this.state.brus_balance.toFixed(4)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Доска</td>\r\n                <td>{this.state.total_volume_quota_doska}</td>\r\n                <td>{this.state.total_volume_sold_doska}</td>\r\n                <td>{this.state.doska_balance && this.state.doska_balance.toFixed(4)}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuotaOverview);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredLumberTr (props) {\r\n  const { lumber, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr key={key}>\r\n      <td>\r\n        {lumber.name} \r\n        {lumber.wood_species === 'pine' \r\n          ? <span className='d-block color-brown1-light'>сосна</span> \r\n          : <span className='d-block color-green2-light'>лиственница</span>}\r\n      </td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n        type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n        value={lumber.quantity > 0 && lumber.quantity}/>\r\n      </td>\r\n      <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n      <td>{lumber.employee_rate} руб</td>\r\n      <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((lumber.lumber_type !== 'doska' & lumber.wood_species === 'larch') | ( lumber.wood_species === 'pine'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'sorted' ) {\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\n\r\nexport function LumberTableMixed (props) {\r\n  const { lumbers, calcRowAndTotal, totalVolume, totalCash, calcType } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive text-center' \r\n      style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n      <thead>\r\n        <th>Изделие</th>\r\n        <th>Кол-во</th>\r\n        <th>Обьем</th>\r\n        <th>Ставка</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n      {lumbers.map((lumber, key) => \r\n        <FilteredLumberTr lumber={lumber} calcType={calcType} calcRowAndTotal={calcRowAndTotal} key={key}/>\r\n        )}\r\n        <tr>\r\n          <td>Итого</td>\r\n          <td className='w-25'>\r\n            -\r\n          </td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n            </span>\r\n          </td>\r\n          <td>-</td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2 flex-wrap'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) \r\n              ? 'bg-green2-light mx-1 my-1' + empClass : 'bg-dark1-dark mx-1 my-1' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock, LumberTableMixed } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      calcType: 'mixed',\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n    this.switchCalc = this.switchCalc.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_CREATE_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, \r\n          employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    if (lumber.employee_rate !== 800 && lumber.employee_rate !== 300) {\r\n      if (moreThan10) {\r\n        if (lumber.wood_species === 'pine') rate = 650\r\n        if (lumber.wood_species === 'larch') rate = 700\r\n      } else {\r\n        if (lumber.wood_species === 'pine') rate = 600\r\n        if (lumber.wood_species === 'larch') rate = 650\r\n      }\r\n    }\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      if (lumber.employee_rate !== 300)\r\n        totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.RAMSHIK_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalCash: 0,\r\n      totalVolume: 0,\r\n      calcType: calcType,\r\n      activeEmployees: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave, \r\n      calcType}  = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                  <h2>Смена </h2>\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight' : 'btn btn-s border'}\r\n                        onClick={() => this.switchCalc('mixed')}\r\n                        >доска перемешку</button>\r\n                      {/* <button className={calcType === 'larch_only' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.setState({calcType: 'larch_only'})}>\r\n                        все листвяк</button> */}\r\n                      <button className={calcType === 'sorted' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.switchCalc('sorted')}>\r\n                        доска по сортам</button>\r\n                    </div>\r\n                    {lumbers.length > 0 &&\r\n                      <LumberTableMixed\r\n                        calcType={this.state.calcType}\r\n                        lumbers={lumbers}\r\n                        calcRowAndTotal={this.calcRowAndTotal}\r\n\r\n                        totalCash={totalCash}\r\n                        totalVolume={totalVolume}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftList } from '../../components/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ShiftList shiftList={this.state.shiftList} />\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nfunction ShiftListButton () {\r\n  let history = useHistory();\r\n\r\n  const redirect = () => {\r\n    history.push('/ramshik/shift/list/')\r\n  }\r\n  return (\r\n    <div className='card card-style mb-2'>\r\n      <div className='content'>\r\n        <h4 className='text-center' onClick={redirect}>\r\n          Список смен\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport class RamshikOverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <ShiftListButton />\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='text-center'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, label } = props\r\n  return (\r\n    <div className='my-2'>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.price > 0 && lumber.price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.total_cash > 0 && lumber.total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calcType === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calcType === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calcType === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calcType === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />\r\n          }\r\n          {lumber.calcType === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n          {lumber.calcType === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale } from '../../components/kladman/SaleCalc';\r\n\r\n\r\nexport class SaleCalcContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      lumberToSale: null,\r\n      lumbersToSale: [],\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_CALC_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, calcType: 'exact' }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.price = 0\r\n    }\r\n\r\n    lumber.calcType = calcType\r\n    lumber.total_cash = lumber.volume_total * lumber.price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash } = this.state\r\n    return (\r\n      <div className=''>\r\n        <div className='content'>\r\n          <h3>Калькулятор</h3> \r\n          {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n            <LumbersToSale \r\n              lumber={lumber} \r\n              setLumberID={this.setLumberID} \r\n\r\n              calcRowQnty={this.calcRowQnty}\r\n              calcRowCash={this.calcRowCash}\r\n              calcRowVolume={this.calcRowVolume}\r\n\r\n              calcRoundRowQnty={this.calcRoundRowQnty}\r\n              calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n              calcChinaRowQnty={this.calcChinaRowQnty}\r\n              calcChinaRowVolume={this.calcChinaRowVolume}\r\n              \r\n              turnCalc={this.turnCalc}\r\n              delLumber={this.delLumber}\r\n              pineBrus={this.state.pineBrus}\r\n              pineDoska={this.state.pineDoska}\r\n            />\r\n          )}\r\n          <div className='d-flex justify-content-center'>\r\n            <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n              Добавить пиломатериал\r\n            </button>\r\n          </div>\r\n          {totalCash > 0 &&\r\n            <div className='card card-style mt-2'>\r\n              <div className='content d-flex justify-content-between mb-2 '>\r\n                <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-3'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Цена за 1м3 опт'\r\n          type='number'\r\n          onChange={(e) => setRamaPrice(e, lumber.id)}\r\n          value={lumber.rama_price > 0 && lumber.rama_price}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber, larchBrus,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice,\r\n     stockType, larchDoska } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        {stockType === 'mixed' &&\r\n          <optgroup label=\"Доска\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>\r\n        }\r\n        {stockType === 'sorted' && [\r\n          <optgroup label=\"Доска сосна\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>,\r\n          <optgroup label=\"Доска лиственница\">\r\n            {larchDoska.map(ld =>\r\n              <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n              )}\r\n          </optgroup>]\r\n        }\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { loader, setAddParams, seller, bonus_kladman_label, sellers, client, delivery_fee, china_vira,\r\n    setChinaVira, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            defaultValue={null}\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={loader}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='loader'\r\n            />\r\n          }\r\n          label=\"Грузчик\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={bonus_kladman_label}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='bonus_kladman_label'\r\n            />\r\n          }\r\n          label=\"Склад бонус\"\r\n        />\r\n      </div>  \r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n        {/* <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Вира(китай)'\r\n            type='number'\r\n            name='china_vira'\r\n            onChange={setChinaVira}\r\n            value={china_vira > 0 && china_vira}/> */}\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-2'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            {/* {sale.china_vira && <p className={rowClass}>Вира(китай): {sale.china_vira + 'рублей'}</p>} */}\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/kladman/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.setRamaPrice = this.setRamaPrice.bind(this);\r\n\r\n    this.setAddParams = this.setAddParams.bind(this);\r\n    this.setChinaVira = this.setChinaVira.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n\r\n    this.saveData = this.saveData.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({stock_type: this.props.user.rama_type});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRamaPrice (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = lumber.volume_total * lumber.selling_price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams(e) {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira (e) {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale\r\n                      stockType={this.props.user.rama_type}\r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setRamaPrice={this.setRamaPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleCreateCommonContainer);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { parseErrorData, createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals, deleteSale } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        {/* <th>Обьем</th> */}\r\n        <th>Сумма</th>\r\n        <th>Продавeц</th>\r\n        {/* <th>Сумма рамы</th> */}\r\n        <th>грузчик</th>\r\n        <th>кладмэн</th>\r\n        <th>Доставка</th>\r\n        {/* <th className='text-nowrap'>Доп. расходы</th> */}\r\n        <th className='text-nowrap'>Удалить</th>\r\n        {/* <th>Чистая прибыль</th> */}\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  <span className='d-block font-italic'>{lumber.wood_species}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_price}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_price}</span>\r\n                  {/* <span className='mr-1'>{lumber.quantity}шт</span> */}\r\n                  {/* <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=' d-block'>{lumber.selling_price}р</span> */}\r\n                </span>\r\n                )}\r\n            </td>\r\n            {/* <td>{sale.volume}</td> */}\r\n            <td>\r\n              {sale.selling_total_cash}\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              <span className='d-block'>{sale.seller_fee}</span>\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            {/* <td>\r\n              {sale.rama_total_cash}\r\n            </td> */}\r\n            <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              <button className='btn btn-xs bg-red1-light' value={sale.id} onClick={deleteSale}>Удалить</button>\r\n            </td>\r\n            {/* <td>\r\n              {sale.add_expenses}\r\n            </td> */}\r\n            {/* <td>\r\n              {sale.net_rama_cash}\r\n            </td> */}\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          {/* <td>{totals.total_volume} </td> */}\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>{totals.total_seller_fee}</td>\r\n          {/* <td>{totals.total_rama_cash}</td> */}\r\n          <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td>\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n          {/* <td>{totals.total_net_rama_cash}</td> */}\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.deleteSale = this.deleteSale.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date_after: getToday()});\r\n    // const params = {}\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_LIST,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  deleteSale (e) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.kladman_delete_sale(e.target.value),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals} deleteSale={this.deleteSale}/>\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          <th>Клад/груз</th>\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td>\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'rama_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/kladman/DailyRep';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_DAYLY_REPORT_DATA,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/kladman/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_DAYLY_REPORT_DATA,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total: initData.expense_records_total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nexport function ResawInput (props) {\r\n  const { lumber, quantity, setLumber, pineBrus, pineDoska, larchBrus, label, lumber_input_label } = props\r\n  let lumber_input_quantity_label = lumber_input_label + \"_quantity\"\r\n\r\n  return (\r\n    <div className=''>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        {label}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber} \r\n        onChange={setLumber}\r\n        name={lumber_input_label}\r\n        defaultValue={null}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n      </Select>\r\n      <TextField \r\n        className='mt-3'\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='Количество'\r\n        type='number'\r\n        name={lumber_input_quantity_label}\r\n        onChange={setLumber}\r\n        value={quantity}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport function CreatedResaw (props) {\r\n  const { resaw, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {resaw &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {resaw.created_at}</p>\r\n            \r\n            <p className={rowClass}>Перепелили: {resaw.lumber_in_quantity}шт {resaw.lumber_in} </p>\r\n            <p className={rowClass}>Получили: {resaw.lumber_out_quantity}шт {resaw.lumber_out} </p>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawToCreate (props) {\r\n  const { resaw, saveData, back, lumbers } = props\r\n  let lumberIn = getObjectbyId(lumbers, resaw.lumber_in)\r\n  let lumberOut = getObjectbyId(lumbers, resaw.lumber_out)\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {resaw &&\r\n          <div className=''>\r\n            <p className={rowClass}>Перепиливаем : {lumberIn.name} {resaw.lumber_in_quantity} шт</p>\r\n            <p className={rowClass}>Получаем : {lumberOut.name} {resaw.lumber_out_quantity} шт</p>\r\n            {/* <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p> */}\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport {  ResawToCreate, CreatedResaw, ResawInput }  from '../../components/kladman/Resaw';\r\n\r\n\r\nexport class ResawContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      \r\n      lumber_in: null,\r\n      lumber_in_quantity: null,\r\n      lumber_out: null,\r\n      lumber_out_quantity: null,\r\n\r\n      createdResaw: null,\r\n      dataToSave: null,\r\n    }\r\n\r\n    this.setLumber = this.setLumber.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  setLumber (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  preSave () {\r\n    const { lumber_in, lumber_in_quantity, lumber_out, lumber_out_quantity } = this.state\r\n    \r\n    let data = {\r\n      lumber_in: lumber_in,\r\n      lumber_in_quantity: lumber_in_quantity,\r\n      lumber_out: lumber_out,\r\n      lumber_out_quantity: lumber_out_quantity,\r\n    }\r\n    console.log(data)\r\n\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    console.log(dataToSave)\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_RESAW_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdResaw: response.data.created });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { createdResaw, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdResaw \r\n          ? <CreatedResaw resaw={createdResaw} message={message}/>\r\n          : dataToSave\r\n            ? <ResawToCreate resaw={dataToSave} saveData={this.saveData} back={this.back} \r\n                lumbers={this.state.lumbers}/>\r\n            : <div className='card card-style mt-3'>\r\n                <div className='content'>\r\n                  <ResawInput \r\n                    lumber={this.state.lumber_in}\r\n                    quantity={this.state.lumber_in_quantity}\r\n                    setLumber={this.setLumber}\r\n                    pineBrus={this.state.pineBrus}\r\n                    pineDoska={this.state.pineDoska}\r\n                    larchBrus={this.state.larchBrus}\r\n\r\n                    label={'Что перепиливаем?'}\r\n                    lumber_input_label={'lumber_in'}\r\n                  />\r\n                  <div className='mt-3'>\r\n                    <ResawInput \r\n                      lumber={this.state.lumber_out}\r\n                      quantity={this.state.lumber_out_quantity}\r\n                      setLumber={this.setLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchBrus={this.state.larchBrus}\r\n\r\n                      label={'Что получаем?'}\r\n                      lumber_input_label={'lumber_out'}\r\n                    />\r\n                  </div>\r\n                  <button className='btn btn-l bg-highlight mt-3' onClick={this.preSave}>\r\n                    Далее\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function requireAuthentication(Component, groups) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n          \r\n          if (this.props.isLoggedIn) {\r\n            if (groups.includes('manager') && user.is_manager)\r\n              access = true\r\n\r\n            if (groups.includes('kladman') && user.is_kladman)\r\n              access = true\r\n            \r\n            if (groups.includes('is_ramshik') && user.is_ramshik)\r\n              access = true\r\n          }\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? access\r\n                  ? <Component {...this.props} />\r\n                  : <h4 className='text-center my-5'>Нет прав</h4>\r\n                : <Redirect to={'/'}/>\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport ManagerStock from './containers/manager/Stock';\r\nimport { IncomeTimberCreateContainer } from './containers/manager/CreateIncome';\r\nimport { QuotaOverview } from './containers/manager/Quotas';\r\n\r\nimport { ShiftCreateComponent } from './containers/ramshik/Shift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikOverView } from './containers/ramshik/OverView';\r\n\r\nimport { SaleCalcContainer } from './containers/kladman/SaleCalc';\r\nimport  SaleCreateCommonContainer from './containers/kladman/SaleCreateCommon';\r\nimport { SaleList } from './containers/manager/SaleList';\r\nimport { DailyRepContainer } from './containers/kladman/DailyRep';\r\nimport { ExpensesContainer } from './containers/kladman/Expenses';\r\nimport { ResawContainer } from './containers/kladman/Resaw';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager and kladman views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/sales/calc/\" \r\n                component={requireAuthentication(SaleCalcContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/expenses/\" \r\n                component={requireAuthentication(ExpensesContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/daily_report/\" \r\n                component={requireAuthentication(DailyRepContainer, ['manager', 'kladman'])} />\r\n              <Route exact path=\"/manager/resaws/create/\" \r\n                component={requireAuthentication(ResawContainer, ['manager', 'kladman'])} />\r\n\r\n              {/* manager only */}\r\n              <Route exact path=\"/manager/rawstock/create_income/\" \r\n                component={requireAuthentication(IncomeTimberCreateContainer, ['manager'])} />\r\n              <Route exact path=\"/manager/quotas/overview/\" \r\n                component={requireAuthentication(QuotaOverview, ['manager'])} />\r\n\r\n              {/* ramshik views */}\r\n              {/* <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['is_senior_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, ['is_ramshik'])} />\r\n              {/* <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, ['is_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/main/\" \r\n              component={requireAuthentication(RamshikOverView, ['is_ramshik'])} />\r\n\r\n              {/* kladman views */}\r\n              \r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}