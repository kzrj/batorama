{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","containers/manager/RamshikPayments.js","redux/api/utils.js","containers/manager/Shifts.js","components/utils.js","containers/ramshik/Shift.js","containers/kladman/SaleCreate.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","RAMSHIK_SHIFT_CREATE_DATA","RAMSHIK_SHIFT_CREATE","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","MANAGER_SHIFT_LIST","KLADMAN_SALE_INIT_DATA","KLADMAN_SALE_CREATE","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","MenuItem","history","useHistory","onClick","push","to","style","title","AfterLogin","logout","is_senior_ramshik","is_manager","is_kladman","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","Header","modalOpen","LastOperations","lastOperations","length","lineHeight","map","op","created_at","record_type","employee","amount","RamshikPayments","employees","activeEmployee","last_payouts","payout","get","res","initData","setState","formData","FormData","append","id","method","url","headers","errorObj","statusText","JSON","stringify","property","parseErrorData","nickname","cash","value","onChange","e","target","ShiftsTable","shiftList","shift","date","lumber_records","lumber","quantity","volume","rate","initiator","emp","employee_cash","cash_per_employee","ManagerShiftList","results","replaceItemInDictArrayById","list","item","itemInList","obj","element","getObjectbyId","index","slice","EmployeesBlock","totalCash","activeEmployees","addEmployee","includes","aEmp","toFixed","ShiftCreateComponent","lumbers","initLumbers","totalVolume","totaCash","calcRow","calcRowAndTotal","calcTotalVolume","calcTotalCash","saveData","qnty","moreThan10","employee_rate","volume_total","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","arr","alreadyIn","i","splice","toggleArrayDictById","eIds","array","_","xor","shift_type","raw_records","key","SaleCreateComponent","calcRowQnty","calcRowVolume","calcRowCash","calcTotal","parseFloat","requireAuthentication","AuthenticatedComponent","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.dae82ea5.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    // ramshik api\r\n    RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n\r\n    // kladman api\r\n    KLADMAN_SALE_INIT_DATA: `${apiUrl}/kladman/sales/create/init_data/`,\r\n    KLADMAN_SALE_CREATE: `${apiUrl}/kladman/sales/create/`,\r\n    // MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nfunction MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-0 my-1 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        // 'width': '510px',\r\n        // 'height': '100px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1.5em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <p>{props.title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, logout } = props\r\n  return (\r\n    user.is_senior_ramshik && <Redirect\r\n      to={{pathname: \"/shift/create_shift/\"}}/>,\r\n    user.is_manager && \r\n      <div className=' '>\r\n        <MenuItem title={'Склад. Текушие остатки'} to={'/manager/ramshik_payments/'}/>\r\n        <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>\r\n        <MenuItem title={'Смены'} to={'/manager/shift_list/'}/>\r\n        <MenuItem title={'Продажи'} to={'/manager/ramshik_payments/'}/>\r\n      </div>,\r\n    user.is_kladman && \r\n      <div className=' '>\r\n        <MenuItem title={'Склад. Текушие остатки'} to={'/manager/ramshik_payments/'}/>\r\n        <MenuItem title={'Создать продажу'} to={'/kladman/sales/create_sale/'}/>\r\n        <MenuItem title={'Продажи список'} to={'/kladman/create_sales/'}/>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const token = localStorage.getItem('token');\r\n    // if (token) {\r\n    //   this.props.checkToken(token);\r\n    // }\r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>Рама</h4>\r\n      <button className='btn btn-sx bg-red1-light' onClick={handleClickLogout}>\r\n        выйти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout}/>\r\n        </div>\r\n      : ''\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nfunction LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние 10 операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.EMPLOYEE_PAYOUT_INIT_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className='d-flex justify-content-start'>\r\n              {employees.length > 0 &&\r\n                <table className='table table-sm table-responsive w-75 mr-2'>\r\n                  <thead>\r\n                    <th>рамщик</th>\r\n                    <th>баланс</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {employees.map(employee => \r\n                      <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                        onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                        <td>{employee.nickname}</td>\r\n                        <td>{employee.cash} р</td>\r\n                      </tr>\r\n                      )}\r\n                  </tbody>\r\n                </table>\r\n              }\r\n              {activeEmployee && \r\n                <div>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <TextField type='number' className='my-1' value={amount}\r\n                    onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                  <button className='d-block btn btn-m bg-green2-light mt-2'\r\n                    onClick={this.payout}>\r\n                    Выдать\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nfunction ShiftsTable (props) {\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата день/ночь</th>\r\n        <th>Пиломат</th>\r\n        <th>Общий обьем</th>\r\n        <th>Рамщики</th>\r\n        <th>за работу общ/на чела</th>\r\n      </thead>\r\n      <tbody>\r\n        {props.shiftList.map(shift => \r\n          <tr>\r\n            <td>{shift.date}</td>\r\n            <td>\r\n              {shift.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '16px'}}>\r\n                  <span className='mr-1 d-block'>{lumber.lumber}</span>\r\n                  <span className='mr-1'>{lumber.quantity}шт</span>\r\n                  <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=''>{lumber.rate}р</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td>{shift.volume}м3</td>\r\n            <td>\r\n              <span className='d-block'>{shift.initiator}</span>\r\n              {shift.employees.map(emp =>\r\n                <span className='d-block'>{emp}</span>\r\n                )}\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{shift.employee_cash}р </span>\r\n              <span> {shift.cash_per_employee}р</span>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport default class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.getList = this.getList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SHIFT_LIST,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results });\r\n    })\r\n  }\r\n\r\n  // getList () {\r\n  //   const { activeEmployee, amount } = this.state\r\n  //   const token = localStorage.getItem('token');\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"employee\", activeEmployee.id);\r\n  //   formData.append(\"amount\", amount);\r\n        \r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: endpoints.EMPLOYEE_PAYOUT,\r\n  //     data: formData,\r\n  //     headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n  //   })\r\n  //   .then(response => {\r\n  //     this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n  //       activeEmployee: null, last_payouts: response.data.last_payouts\r\n  //     });\r\n  //   })\r\n  //   .catch(err => {\r\n  //       const error = new Error(err);\r\n  //       error.data = parseErrorData(err);\r\n  //       this.setState({ message: 'Ошибка' });\r\n  //       throw error;\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nfunction EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) ? 'bg-green2-light' + empClass : 'bg-dark1-dark' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.RAMSHIK_SHIFT_CREATE_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    if (moreThan10 && lumber.employee_rate == 600) rate = 650\r\n    if (!moreThan10 && lumber.employee_rate == 650) rate = 600\r\n    if (!moreThan10 && lumber.employee_rate == 600) rate = lumber.employee_rate\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    const token = localStorage.getItem('token');\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: lumbers,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume\r\n    }\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.RAMSHIK_SHIFT_CREATE,\r\n      data: data,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.' });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message } = this.state\r\n    return (\r\n      <div>\r\n        <div className='card card-style mb-1 mt-2'>\r\n          <div className='content'>\r\n            <h2>Смена</h2>\r\n            {lumbers.length > 0 &&\r\n              <table className='table table-sm table-responsive text-center' \r\n                style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n                <thead>\r\n                  <th>Изделие</th>\r\n                  <th>Кол-во</th>\r\n                  <th>Обьем</th>\r\n                  <th>Ставка</th>\r\n                  <th>Сумма</th>\r\n                </thead>\r\n                <tbody>\r\n                {lumbers.map((lumber, key) => \r\n                  <tr key={key}>\r\n                    <td>{lumber.name}</td>\r\n                    <td className='w-25'>\r\n                      <input style={{'color': '#6c6c6c'}}\r\n                      type='number' className='w-75' onChange={(e) => this.calcRowAndTotal(e, lumber)} \r\n                      value={lumber.quantity > 0 && lumber.quantity}/>\r\n                    </td>\r\n                    <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(3) + ' м3'}</td>\r\n                    <td>{lumber.employee_rate} руб</td>\r\n                    <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n                  </tr>\r\n                  )}\r\n                  <tr>\r\n                    <td>Итого</td>\r\n                    <td className='w-25'>\r\n                      -\r\n                    </td>\r\n                    <td>\r\n                      <span className='font-17 font-600'>\r\n                        {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n                      </span>\r\n                    </td>\r\n                    <td>-</td>\r\n                    <td>\r\n                      <span className='font-17 font-600'>\r\n                        {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='card card-style mb-3'>\r\n          <EmployeesBlock \r\n            totalCash={totalCash} \r\n            employees={employees} \r\n            activeEmployees={activeEmployees} \r\n            addEmployee={this.addEmployee}/>\r\n\r\n        </div>\r\n        {(activeEmployees.length > 0 && totalCash > 0) &&\r\n          <button   \r\n              onClick={this.saveData}\r\n              className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n            </button>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nfunction EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) ? 'bg-green2-light' + empClass : 'bg-dark1-dark' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0.0,\r\n      totaCash: 0,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.KLADMAN_SALE_INIT_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers });\r\n      })\r\n  }\r\n\r\n  calcRowQnty (e, lumber) {\r\n    let { lumbers } = this.state\r\n\r\n    lumber.quantity = e.target.value\r\n    lumber.volume_total = lumber.quantity * lumber.volume\r\n    lumber.cash = lumber.volume_total * lumber.rate\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbers)\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      lumbers: lumbers,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, lumber) {\r\n    let { lumbers } = this.state\r\n\r\n    lumber.volume_total = e.target.value\r\n    lumber.quantity = lumber.volume_total / lumber.volume\r\n    lumber.cash = lumber.volume_total * lumber.rate\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbers)\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      lumbers: lumbers,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, lumber) {\r\n    let { lumbers } = this.state\r\n    lumber.rate = e.target.value\r\n    lumber.cash = lumber.volume_total * lumber.rate\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbers)\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      lumbers: lumbers,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n    lumbers.map(lumber => {\r\n      totalCash += lumber.cash\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n\r\n    return { totalCash: totalCash, totalVolume: totalVolume }\r\n  }\r\n\r\n  saveData () {\r\n    const { lumbers, totalCash, totalVolume } = this.state\r\n    const token = localStorage.getItem('token');\r\n    let data = {\r\n      raw_records: lumbers,\r\n      date: null,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    }\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_SALE_CREATE,\r\n      data: data,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.' });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, message } = this.state\r\n    return (\r\n      <div>\r\n        <div className='card card-style mb-1 mt-2'>\r\n          <div className='content'>\r\n            <h2>Что продаем?</h2>\r\n            {lumbers.length > 0 &&\r\n              <table className='table table-sm table-responsive text-center' \r\n                style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n                <thead>\r\n                  <th>Изделие</th>\r\n                  <th>Кол-во</th>\r\n                  <th>Обьем</th>\r\n                  <th>Ставка</th>\r\n                  <th>Сумма</th>\r\n                </thead>\r\n                <tbody>\r\n                {lumbers.map((lumber, key) => \r\n                  <tr key={key}>\r\n                    <td>{lumber.name}</td>\r\n                    <td className='w-25'>\r\n                     <input style={{'color': '#6c6c6c', 'width': '50px'}}\r\n                      type='number'  onChange={(e) => this.calcRowQnty(e, lumber)} \r\n                      value={lumber.quantity > 0 && lumber.quantity}/> шт\r\n                    </td>\r\n                    <td>\r\n                      <input style={{'color': '#6c6c6c', 'width': '50px'}}\r\n                        type='number'  onChange={(e) => this.calcRowVolume(e, lumber)} \r\n                        value={lumber.volume_total > 0 && lumber.volume_total}/> м3\r\n                    </td>\r\n                    <td><input style={{'color': '#6c6c6c', 'width': '50px'}}\r\n                        type='number' onChange={(e) => this.calcRowCash(e, lumber)} \r\n                        value={lumber.rate > 0 && lumber.rate}/> руб</td>\r\n                    <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' р'}</td>\r\n                  </tr>\r\n                  )}\r\n                  <tr>\r\n                    <td>Итого</td>\r\n                    <td className='w-25'>\r\n                      -\r\n                    </td>\r\n                    <td>\r\n                      <span className='font-17 font-600'>\r\n                        {totalVolume}\r\n                        {/* {totalVolume && totalVolume > 0 && totalVolume.toFixed(4) + ' м3'} */}\r\n                      </span>\r\n                    </td>\r\n                    <td>-</td>\r\n                    <td>\r\n                      <span className='font-17 font-600'>\r\n                        {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            }\r\n          </div>\r\n        </div>\r\n        {totalCash > 0 &&\r\n          <button   \r\n              onClick={this.saveData}\r\n              className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n            </button>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\n\r\nexport default function requireAuthentication(Component, group) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n        //   if (this.props.isLoggedIn === true && (ws_numbers.includes(this.props.user.workshop_number) || \r\n        //     this.props.user.is_officer)) access = true\r\n        \r\n          if (this.props.isLoggedIn === true && !group) access = true\r\n          if (this.props.isLoggedIn && group === 'manager' && user.is_manager) access = true\r\n          if (this.props.isLoggedIn && group === 'senior_ramshik' && user.is_senior_ramshik) access = true\r\n          if (this.props.isLoggedIn && group === 'kladman' && user.is_kladman) access = true\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? <Component {...this.props} />\r\n                : null\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\n\r\nimport { ShiftCreateComponent } from './containers/ramshik/Shift';\r\nimport { SaleCreateComponent } from './containers/kladman/SaleCreate';\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n              {/* manager views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, 'manager')} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'manager')} />\r\n\r\n              {/* ramshik views */}\r\n              <Route exact path=\"/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, 'is_senior_ramshik')} />\r\n\r\n              {/* kladman views */}\r\n              <Route exact path=\"/kladman/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateComponent, 'kladman')} />\r\n              {/* <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'manager')} /> */}\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}