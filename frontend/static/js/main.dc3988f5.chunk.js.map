{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","containers/manager/RamshikPayments.js","components/utils.js","components/Shifts.js","containers/manager/Shifts.js","containers/manager/Stock.js","components/CreateIncomeTimberComponent.js","containers/manager/CreateIncome.js","containers/manager/Quotas.js","components/ShiftCreateComponent.js","containers/manager/CreateShift.js","containers/ramshik/ShiftList.js","containers/ramshik/OverView.js","components/kladman/SaleCalc.js","containers/manager/SaleCalc.js","components/kladman/SaleCommon.js","containers/manager/SaleCreateCommon.js","containers/manager/SaleList.js","components/kladman/DailyRep.js","containers/manager/DailyRep.js","components/kladman/Expenses.js","containers/manager/Expenses.js","components/kladman/Resaw.js","containers/manager/Resaw.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","setRamaToSee","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","ramaToSee","AuthSelectors","getUser","state","rama","merge","data","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","SET_RAMA_TO_SEE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","STOCK","SHIFTS","SALES","RESAWS","DAILY_REP","SALE_CALC_DATA","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","EMPLOYEE_CREATE","manager_ramshiki_delete","id","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_STOCK_SET_LUMBER_PRICE","MANAGER_SALE_LIST","MANAGER_RAWSTOCK_INCOME_INIT_DATA","MANAGER_RAWSTOCK_INCOME_CREATE","MANAGER_QUOTA_OVERVIEW","MANAGER_SHIFT_CREATE_DATA","MANAGER_SHIFT_CREATE","manager_shift_delete","MANAGER_SALE_INIT_DATA","MANAGER_SALE_CREATE","manager_delete_sale","MANAGER_CASH_RECORDS_LIST","MANAGER_CASH_RECORDS_CREATE","MANAGER_RESAW_CREATE","manager_delete_resaw","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","DateFilter","startDate","endDate","setData","showResults","value","onChange","shrink","onClick","DayFilter","date","MenuItem","history","useHistory","push","to","style","title","RamaMenu","manager_access","console","log","is_manager","rama_id","can_see_rama_shift","includes","can_see_rama_resaws","can_see_rama_sales","can_see_rama_cash","AfterLogin","is_ramshik","can_see_rama_stock","map","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","logout","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","lineHeight","nickname","Header","modalOpen","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","LastOperations","lastOperations","length","op","created_at","record_type","employee","amount","CreateRamshik","newCash","newName","createRamshik","useState","open","setOpen","RamshikPayments","employees","activeEmployee","last_payouts","payout","deleteRamshik","method","url","headers","res","initData","setState","formData","FormData","errorObj","statusText","JSON","stringify","property","parseErrorData","e","target","cash","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","jsDateTimeToStrDate","jsDate","ShiftLumberTr","record","wood_species","lumber","quantity","volume","rate","total_cash","ShiftComponent","shift","deleteShift","shift_type","emp","back_calc_cash","back_calc_cash_per_employee","lumber_records","ShiftList","shiftList","ManagerShiftList","yesterday","setDate","date_before","date_after","results","shifts","TrRow","showNull","changeMarketCost","show","current_stock_quantity","woodSpeciesClass","current_stock_volume","toFixed","is_boss","market_cost","is_kladman","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","FilteredTimberTr","timber_record","calcType","calcRowAndTotal","tr","diameter","TimberTable","timbers","totalQnty","colSpan","TimberTableRead","IncomeToSave","incomeTimber","saveData","back","raw_timber_records","CreatedIncome","createdIncome","rowClass","note","timber_records","IncomeTimberCreateContainer","initTimbers","dataToSave","preSave","switchCalc","timber","tmb","income_timber","QuotaOverview","total_volume_quota_brus","total_volume_quota_doska","total_volume_sold_brus","total_volume_sold_doska","brus_balance","doska_balance","FilteredLumberTr","volume_total","employee_rate","lumber_type","LumberTableMixed","LumberTable","lumber_record","ShiftToSave","employee_cash","cash_per_employee","raw_records","employeesData","CreatedShift","back_calc_volume","EmployeesBlock","activeEmployees","addEmployee","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","calcRow","calcTotalVolume","calcTotalCash","qnty","moreThan10","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","eIds","RamshikShiftList","ShiftListButton","RamshikOverView","ramshik","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","variant","price","LumbersToSale","setLumberID","pineBrus","pineDoska","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","lumberRef","useRef","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","pb","pd","china_volume","SaleCalcContainer","lumberToSale","lumbersToSale","addLumberToSale","calcTotal","pine_brus_lumbers","pine_doska_lumbers","lumberData","parseFloat","round_volume","setRamaPrice","selling_price","selling_total_cash","rama_price","larchBrus","stockType","larchDoska","lb","ld","calc_type","SaleCheckList","loader","setAddParams","seller","bonus_kladman_label","sellers","client","delivery_fee","china_vira","setChinaVira","FormControl","s","FormControlLabel","control","Checkbox","color","LumbersTable","CreatedSale","sale","seller_fee","loader_fee","kladman_fee","SaleCommonToCreate","bonus_kladman","deliveryFee","sale_cash","SaleCreateCommonContainer","createdSale","stock_type","rama_type","larch_brus_lumbers","larch_doska_lumbers","kladman_id","SalesTable","sales","totals","deleteSale","sale_type","rama_total_cash","seller_name","total_selling_cash","total_seller_fee","total_loader_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","SalesList","sales_totals","sellers_fee","total","CashRecordsList","records","DailyRepContainer","createdExpense","expenses","incomes","allRecords","total_expenses","total_incomes","createExpense","expense_records","expense_records_total","income_records","income_records_total","records_total","sales_sellers_fee","expense","KLADMAN_EXPENSE_CREATE","ExpensesList","CreateExpense","setCount","setNote","ExpensesContainer","created_at_after","ResawInput","setLumber","lumber_input_label","lumber_input_quantity_label","CreatedResaw","resaw","lumber_in_quantity","lumber_in","lumber_out_quantity","lumber_out","ResawToCreate","lumberIn","lumberOut","ResawList","deleteResaw","rsw","who","lumber_in_wood_species","lumber_out_wood_species","ResawContainer","createdResaw","resawsList","created","resaws","requireAuthentication","groups","AuthenticatedComponent","access","is_capo","is_seller","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.dc3988f5.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null,\n\n  setRamaToSee: ['rama'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false,\n  ramaToSee: {},\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// rama to see\nexport const setRamaToSee = (state, { rama }) => {\n  return state.merge({ ramaToSee: rama })\n}\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false, ramaToSee: {} })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.SET_RAMA_TO_SEE]: setRamaToSee,\n\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    //common_api\r\n    STOCK: `${apiUrl}/common/stock/`,\r\n    SHIFTS: `${apiUrl}/common/shifts/`,\r\n    SALES: `${apiUrl}/common/sales/`,\r\n    RESAWS: `${apiUrl}/common/resaw/`,\r\n    DAILY_REP: `${apiUrl}/common/daily_report/`,\r\n    SALE_CALC_DATA: `${apiUrl}/common/sales/calc_data/`,\r\n\r\n    // ramshik api\r\n    // RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    // RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    EMPLOYEE_CREATE: `${apiUrl}/manager/ramshiki/create/`,\r\n    manager_ramshiki_delete: (id) => `${apiUrl}/manager/ramshiki/${id}/`,\r\n\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_STOCK_SET_LUMBER_PRICE: `${apiUrl}/manager/stock/set_price/`,\r\n    \r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n    \r\n    MANAGER_RAWSTOCK_INCOME_INIT_DATA: `${apiUrl}/manager/rawstock/timber/create_income/init_data/`,\r\n    MANAGER_RAWSTOCK_INCOME_CREATE: `${apiUrl}/manager/rawstock/timber/create_income/`,\r\n    MANAGER_QUOTA_OVERVIEW: `${apiUrl}/manager/quota/overview/`,\r\n\r\n    MANAGER_SHIFT_CREATE_DATA: `${apiUrl}/manager/shifts/create/init_data/`,\r\n    MANAGER_SHIFT_CREATE: `${apiUrl}/manager/shifts/create/`,\r\n    manager_shift_delete: (id) => `${apiUrl}/manager/shifts/${id}/`,\r\n\r\n    MANAGER_SALE_INIT_DATA: `${apiUrl}/manager/sales/create/init_data/`,\r\n    MANAGER_SALE_CREATE: `${apiUrl}/manager/sales/create/`,\r\n    manager_delete_sale: (id) => `${apiUrl}/manager/sales/${id}/`,\r\n\r\n    MANAGER_CASH_RECORDS_LIST: `${apiUrl}/manager/cash_records/list/`,\r\n    MANAGER_CASH_RECORDS_CREATE: `${apiUrl}/manager/cash_records/create_expense/`,\r\n\r\n    MANAGER_RESAW_CREATE: `${apiUrl}/manager/resaws/create/`,\r\n    manager_delete_resaw: (id) => `${apiUrl}/manager/resaws/${id}/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n\r\n\r\nexport function DateFilter(props) {\r\n  const { startDate, endDate, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        label={'Дата с'}\r\n        type=\"date\"\r\n        name='startDate'\r\n        className='mr-2'\r\n        value={startDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <TextField\r\n        label={'Дата до'}\r\n        type=\"date\"\r\n        name='endDate'\r\n        className='mr-2'\r\n        value={endDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport function DayFilter(props) {\r\n  const { date, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        // label={'Дата '}\r\n        type=\"date\"\r\n        name='date'\r\n        className='mr-2'\r\n        value={date}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} "," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nexport function MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        // 'height': '0px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction RamaMenu (props) {\r\n  const { user, ramaToSee } = props\r\n  let manager_access = false\r\n  console.log(user, ramaToSee)\r\n  if (user.is_manager && user.rama_id === ramaToSee.id) {\r\n    manager_access = true\r\n  }\r\n\r\n  return (\r\n    <div className=' '>\r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Склад</h3>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n      </div>\r\n\r\n      {/* <div className='my-4'>\r\n        <h3 className='text-center'>Круглый лес и план</h3>\r\n        <MenuItem title={'Приход круглого леса'} to={'/manager/rawstock/create_income/'}/>\r\n        <MenuItem title={'План'} to={'/manager/quotas/overview/'}/>\r\n      </div> */}\r\n\r\n      {user.can_see_rama_shift.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Смены</h3>\r\n            <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/>\r\n          {manager_access &&\r\n            <MenuItem title={'Создать смену'} to={'/manager/shift/create_shift/'}/>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      {user.can_see_rama_resaws.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n         <MenuItem title={'Перепил'} to={'/manager/resaws/create/'}/>\r\n        </div>\r\n      }\r\n      \r\n      {user.can_see_rama_sales.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Продажи</h3>\r\n          {manager_access &&\r\n            <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n          }\r\n          <MenuItem title={'Калькулятор продавца'} to={'/manager/sales/calc/'}/>\r\n          <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        </div>\r\n      }\r\n      {user.can_see_rama_cash.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Отчеты и расходы</h3>\r\n          {manager_access && [\r\n            <MenuItem title={'Расходы'} to={'/manager/expenses/'}/>,\r\n            <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>]\r\n          }\r\n          <MenuItem title={'Итоги за день'} to={'/manager/daily_report/'}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, setRamaToSee, ramaToSee } = props\r\n\r\n  if (user.is_ramshik) \r\n    return <Redirect to=\"/ramshik/main\" />\r\n  \r\n  if (user.can_see_rama_stock) {\r\n      return (\r\n        ramaToSee.id \r\n        ? <RamaMenu user={user} ramaToSee={ramaToSee}/>\r\n        : <div className='my-3'>\r\n          {user.can_see_rama_stock.map(rama => \r\n            <div className='card card-style' onClick={() => setRamaToSee(rama)}>\r\n              <div className='content'>\r\n                <h4 className='text-center'>{rama.name}</h4>\r\n              </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, ramaToSee } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout} setRamaToSee={this.props.setRamaToSee}\r\n                ramaToSee={ramaToSee}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  setRamaToSee: (rama) => dispatch(AuthActions.setRamaToSee(rama))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  function toMain () {\r\n    props.setRamaToSee({})\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>{props.ramaToSee.name}</h4>\r\n      {props.ramaToSee.name \r\n          ? <h6 onClick={toMain}>к списку пилорам</h6>\r\n          : <h4>Пилорамы</h4>\r\n        }\r\n      <button className='btn btn-xs bg-red1-light' style={{lineHeight: '13px'}} onClick={handleClickLogout}>\r\n        <span className='py-0 my-0'>\r\n          <span className='d-block'>{props.user.nickname}</span>\r\n          выйти\r\n        </span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, ramaToSee } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout} user={user} ramaToSee={ramaToSee} \r\n            setRamaToSee={this.props.setRamaToSee}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n  setRamaToSee: (rama) => dispatch(AuthActions.setRamaToSee(rama))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component, useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreateRamshik (props) {\r\n  const { newCash, newName, createRamshik, setData } = props\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const create = () => (\r\n    setOpen(false),\r\n    createRamshik()\r\n  )\r\n\r\n  return (\r\n    open \r\n      ? <div className='card card-style'>\r\n          <div className='content'>\r\n            <div className='  my-1'>\r\n              <TextField type='text' name='newName' value={newName} onChange={setData} label='Имя' \r\n                fullWidth className='mb-2'/>\r\n              <TextField type='number' name='newCash' value={newCash} onChange={setData} label='Баланс' fullWidth/>\r\n            </div>\r\n            <div className='d-flex justify-content-between mt-3'>\r\n              <button className='btn btn-s bg-highlight' onClick={create}>Создать</button>\r\n              <button className='btn btn-s bg-red1-light' onClick={() => setOpen(false)}>Отмена</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      : <div className='d-flex justify-content-center my-3'>\r\n          <button className='btn btn-l bg-highlight' onClick={setOpen}>\r\n            Создать нового рамщика\r\n          </button>\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      newName: '',\r\n      newCash: 0\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n    this.deleteRamshik = this.deleteRamshik.bind(this);\r\n    this.createRamshik = this.createRamshik.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  createRamshik () {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_CREATE,\r\n      data: { nickname: this.state.newName, cash: this.state.newCash },\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  deleteRamshik () {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_ramshiki_delete(this.state.activeEmployee.id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className=''>\r\n              {employees.length > 0 &&\r\n                  <table className='table table-sm'>\r\n                    <thead>\r\n                      <th>рамщик</th>\r\n                      <th>баланс</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {employees.map(employee => \r\n                        <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                          onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                          <td>{employee.nickname}</td>\r\n                          <td>{employee.cash} р</td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                  </table>\r\n              }\r\n              {activeEmployee && \r\n                <div className='w-100'>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <div className='d-flex justify-content-start mt-2 mb-4'>\r\n                    <TextField type='number' className='mr-3' value={amount}\r\n                      onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                    <button className='d-block btn btn-s bg-green2-light'\r\n                      onClick={this.payout}>\r\n                      Выдать\r\n                    </button>\r\n                  </div>\r\n                  <button className='d-block btn btn-s bg-red1-light mt-2'\r\n                    onClick={this.deleteRamshik}>\r\n                    Удалить рамщика\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CreateRamshik newName={this.state.newName} newCash={this.state.newCash} setData={this.setData}\r\n          createRamshik={this.createRamshik}\r\n          />\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}\r\n\r\nexport function jsDateTimeToStr (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  let hours = jsDate.getHours();\r\n  let minutes = jsDate.getMinutes() > 9 ? jsDate.getMinutes(): '0' + jsDate.getMinutes();\r\n  return yyyy + '-' + mm + '-' + dd + 'T' + hours + ':' + minutes\r\n  \r\n}\r\n\r\nexport function jsDateTimeToStrDate (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  return yyyy + '-' + mm + '-' + dd \r\n  \r\n}","import React, { Component } from 'react';\r\n\r\n\r\nfunction ShiftLumberTr (props) {\r\n  const { record } = props\r\n  const measureClass = 'font-10'\r\n  return (\r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {record.wood_species === 'larch'  \r\n          ? <span className='d-block color-brown1-light'>листв</span>\r\n          : <span className='d-block color-green1-light'>сосна</span>\r\n        }\r\n        {record.lumber.includes('доска') \r\n          ? <span className='font-italic'>{record.lumber}</span>\r\n          : <span className=''>{record.lumber}</span>\r\n        }\r\n      </td>\r\n      <td>\r\n        {record.quantity}\r\n        <span className={measureClass}> шт</span>\r\n      </td>\r\n      <td>{record.volume}<span className={measureClass}> м3</span></td>\r\n      <td>{record.rate}<span className={measureClass}> р</span></td>\r\n      <td>{record.total_cash}<span className={measureClass}> р</span></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport function ShiftComponent (props) {\r\n  const { shift, user, deleteShift } = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content mb-1'>\r\n        <div className='d-flex justify-content-between'>\r\n          <p className='color-black mb-0 font-16'>Дата: {shift.date} {shift.shift_type}</p>\r\n          {user.is_manager && \r\n            <button className='btn btn-s bg-red1-light mr-2 text-uppercase' \r\n            onClick={() => deleteShift(shift.id)}>\r\n              удалить</button>\r\n          }\r\n        </div>\r\n        <p className='mb-0 color-black'>\r\n          Работали: \r\n          {shift.employees.map(emp => <span className='mx-1'>{emp}</span>)}\r\n        </p>\r\n        <p className='color-black mb-0 font-13 d-flex justify-content-between' style={{lineHeight: '15px'}}>\r\n          <span>Объем: <span className='d-block font-600 font-14'>{shift.volume} m3</span></span>\r\n          <span>Общая сумма: <span className='d-block font-600 font-14'>{shift.back_calc_cash} р</span></span>\r\n          <span>На одного: <span className='d-block font-600 font-14'>\r\n            {shift.back_calc_cash_per_employee} р</span></span>\r\n        </p>\r\n      </div>\r\n      <div className='content mt-0'>\r\n        <table className='table table-sm'>\r\n          <thead>\r\n            <th>Пиломат</th>\r\n            <th>кол-во</th>\r\n            <th>объем</th>\r\n            <th>ставка</th>\r\n            <th>сумма</th>\r\n          </thead>\r\n          <tbody>\r\n            {shift.lumber_records.map(record => \r\n              <ShiftLumberTr record={record}/>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShiftList (props) {\r\n  const { shiftList, user, deleteShift } = props\r\n  return (\r\n    <div className='mt-2'>\r\n      <h4 className='my-3 text-center'>Смены  ({shiftList.length})</h4>\r\n      {shiftList.length > 0 && shiftList.map(shift => \r\n          <ShiftComponent shift={shift} user={user} deleteShift={deleteShift}/>\r\n      )}\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { ShiftList } from '../../components/Shifts';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n    this.deleteShift = this.deleteShift.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, });\r\n    })\r\n  }\r\n\r\n  deleteShift (id) {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_shift_delete(id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ shiftList: response.data.shifts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <ShiftList shiftList={this.state.shiftList} user={this.props.user} deleteShift={this.deleteShift}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerShiftList);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost, user } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(3)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          {user.is_boss &&\r\n            <TextField type='number' \r\n              className=''\r\n              value={lumber.market_cost > 0 && lumber.market_cost} \r\n              onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n          }\r\n          {user.is_kladman && <span className='font-16'>{lumber.market_cost}</span>}\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    // console.log(this.props.ramaToSee)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.STOCK,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n   \r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_STOCK_SET_LUMBER_PRICE,\r\n      data: {\r\n        lumber: lumberId,\r\n        market_cost: parseInt(e.target.value) || 0\r\n      },\r\n      headers: {'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      lumber = res.data;\r\n    })\r\n\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}\r\n                        user={this.props.user}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerStock);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredTimberTr (props) {\r\n  const { timber_record, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {timber_record.diameter }\r\n        {timber_record.wood_species === 'Сосна' \r\n          ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n          : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n        }\r\n      </td>\r\n      <td className=''>\r\n          <input style={{'color': '#6c6c6c'}}\r\n            type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, timber_record)} \r\n            value={timber_record.quantity > 0 && timber_record.quantity}/>\r\n      </td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((timber_record.wood_species === 'Лиственница') | ( timber_record.wood_species === 'Сосна'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'pine' ) {\r\n    if (timber_record.wood_species === 'Сосна')\r\n      return tr\r\n    }\r\n\r\n  if (calcType === 'larch' ) {\r\n    if (timber_record.wood_species === 'Лиственница')\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\nexport function TimberTable (props) {\r\n  const { timbers, calcRowAndTotal, totalQnty, calcType } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) =>\r\n          <FilteredTimberTr timber_record={timber_record} calcRowAndTotal={calcRowAndTotal} \r\n            calcType={calcType} key={key}/>\r\n          )}\r\n        <tr>\r\n          <td colSpan='2'>\r\n            <span className='font-17'>Общее количество: {totalQnty}</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function TimberTableRead (props) {\r\n  const { timbers } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) => timber_record.quantity > 0 &&\r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {timber_record.diameter}\r\n              {timber_record.wood_species === 'Сосна' \r\n                ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n                : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n              }\r\n            </td>\r\n            <td>{timber_record.quantity}</td>\r\n          </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function IncomeToSave (props) {\r\n  const { incomeTimber, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {incomeTimber &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Общее количество: {incomeTimber.totalQnty}</p>\r\n            <TimberTableRead timbers={incomeTimber.raw_timber_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedIncome (props) {\r\n  const { createdIncome, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Приход сохранен</h4>\r\n        {createdIncome &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {createdIncome.created_at}</p>\r\n            <p className={rowClass}>\r\n              Общее количество: {createdIncome.quantity} шт</p>\r\n            <p className={rowClass}>\r\n              Общий объем: {createdIncome.volume} м3</p>              \r\n            <p className={rowClass}>Примечание: {createdIncome.note}</p>\r\n\r\n            <TimberTableRead timbers={createdIncome.timber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\n\r\nimport { TimberTable, CreatedIncome, IncomeToSave } from '../../components/CreateIncomeTimberComponent';\r\n\r\n\r\nexport class IncomeTimberCreateContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timbers: [],\r\n      initTimbers: [],\r\n      calcType: 'pine',\r\n      totalQnty: 0,\r\n      dataToSave: null,\r\n      createdIncome: null\r\n    }\r\n\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.switchCalc = this.switchCalc.bind(this);\r\n    this.saveData = this.saveData.bind(this)\r\n    this.back = this.back.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_RAWSTOCK_INCOME_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ timbers: initData.timbers, initTimbers: initData.timbers });\r\n      })\r\n  }\r\n\r\n  calcRowAndTotal (e, timber) {\r\n    let { timbers } = this.state\r\n    timber.quantity = parseInt(e.target.value)\r\n\r\n    timbers = replaceItemInDictArrayById(timbers, timber)\r\n    let totalQnty = 0\r\n\r\n    timbers.map(tmb => {\r\n      totalQnty = totalQnty + parseInt(tmb.quantity)\r\n    })\r\n\r\n    this.setState({ \r\n      ...this.state,\r\n      timbers: timbers,\r\n      totalQnty: totalQnty,\r\n      message: null\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { timbers, totalQnty } = this.state\r\n    let data = {\r\n      raw_timber_records: timbers,\r\n      totalQnty: totalQnty\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_RAWSTOCK_INCOME_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdIncome: response.data.income_timber });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      timbers: this.state.initTimbers,\r\n      totalQnty: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      timbers: this.state.timbers,\r\n      totalQnty: 0,\r\n      calcType: calcType,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { timbers, totalQnty, calcType, createdIncome, dataToSave, message }  = this.state\r\n    return (\r\n      <div>\r\n        {createdIncome \r\n          ? <CreatedIncome createdIncome={createdIncome} message={message}/>\r\n          : dataToSave\r\n            ? <IncomeToSave incomeTimber={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : timbers.length > 0 &&\r\n              <div className='card card-style mb-1 mt-2'>\r\n                <div className='content mb-1'>\r\n                  <h3>Приход круглого</h3>\r\n                  <div className='d-flex justify-content-between my-2'>\r\n                    <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'}\r\n                      onClick={() => this.switchCalc('mixed')}\r\n                      >Пересорт</button>\r\n                    <button className={calcType === 'larch' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('larch')}>\r\n                      все листвяк</button>\r\n                    <button className={calcType === 'pine' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('pine')}>\r\n                      все сосна</button>\r\n                  </div>\r\n                  <TimberTable timbers={timbers} calcRowAndTotal={this.calcRowAndTotal} totalQnty={totalQnty}\r\n                    calcType={calcType}/>\r\n                </div>\r\n                {totalQnty > 0 && \r\n                  <div className='content mt-0'>\r\n                    <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                  </div>\r\n                }\r\n              </div>\r\n            }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nexport class QuotaOverview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      total_volume_quota_brus: null,\r\n      total_volume_quota_doska: null,\r\n      total_volume_sold_brus: null,\r\n      total_volume_sold_doska: null,\r\n      brus_balance: null,\r\n      doska_balance: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.user.rama_id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_QUOTA_OVERVIEW,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      this.setState({ \r\n        total_volume_quota_brus: res.data.total_volume_quota_brus,\r\n        total_volume_quota_doska: res.data.total_volume_quota_doska,\r\n        total_volume_sold_brus: res.data.total_volume_sold_brus,\r\n        total_volume_sold_doska: res.data.total_volume_sold_doska,\r\n        brus_balance: res.data.brus_balance,\r\n        doska_balance: res.data.doska_balance,\r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { } = this.state\r\n    let brusBalance = \r\n      (this.state.total_volume_quota_brus - this.state.total_volume_sold_brus).toFixed()\r\n    return (\r\n      <div className='card card-style my-2'>\r\n        <div className='content'>\r\n          <h4 className='mb-2'>План пилорамы</h4>\r\n          <table className='table table-sm'>\r\n            <thead>\r\n              <th>-</th>\r\n              <th>План</th>\r\n              <th>Отгружено</th>\r\n              <th>Баланс</th>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Брус</td>\r\n                <td>{this.state.total_volume_quota_brus}</td>\r\n                <td>{this.state.total_volume_sold_brus}</td>\r\n                <td>{this.state.brus_balance && this.state.brus_balance.toFixed(4)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Доска</td>\r\n                <td>{this.state.total_volume_quota_doska}</td>\r\n                <td>{this.state.total_volume_sold_doska}</td>\r\n                <td>{this.state.doska_balance && this.state.doska_balance.toFixed(4)}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuotaOverview);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredLumberTr (props) {\r\n  const { lumber, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr key={key}>\r\n      <td>\r\n        {lumber.name} \r\n        {lumber.wood_species === 'pine' \r\n          ? <span className='d-block color-brown1-light'>сосна</span> \r\n          : <span className='d-block color-green2-light'>лиственница</span>}\r\n      </td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n        type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n        value={lumber.quantity > 0 && lumber.quantity}/>\r\n      </td>\r\n      <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n      <td>{lumber.employee_rate} руб</td>\r\n      <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((lumber.lumber_type !== 'doska' & lumber.wood_species === 'larch') | ( lumber.wood_species === 'pine'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'sorted' ) {\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\n\r\nexport function LumberTableMixed (props) {\r\n  const { lumbers, calcRowAndTotal, totalVolume, totalCash, calcType } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive text-center' \r\n      style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n      <thead>\r\n        <th>Изделие</th>\r\n        <th>Кол-во</th>\r\n        <th>Обьем</th>\r\n        <th>Ставка</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n      {lumbers.map((lumber, key) => \r\n        <FilteredLumberTr lumber={lumber} calcType={calcType} calcRowAndTotal={calcRowAndTotal} key={key}/>\r\n        )}\r\n        <tr>\r\n          <td>Итого</td>\r\n          <td className='w-25'>\r\n            -\r\n          </td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n            </span>\r\n          </td>\r\n          <td>-</td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2 flex-wrap'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) \r\n              ? 'bg-green2-light mx-1 my-1' + empClass : 'bg-dark1-dark mx-1 my-1' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock, LumberTableMixed } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      calcType: 'mixed',\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n    this.switchCalc = this.switchCalc.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_SHIFT_CREATE_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, \r\n          employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    // if (lumber.employee_rate !== 800 && lumber.employee_rate !== 300) {\r\n    //   if (moreThan10) {\r\n    //     if (lumber.wood_species === 'pine') rate = 650\r\n    //     if (lumber.wood_species === 'larch') rate = 700\r\n    //   } else {\r\n    //     if (lumber.wood_species === 'pine') rate = 600\r\n    //     if (lumber.wood_species === 'larch') rate = 650\r\n    //   }\r\n    // }\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      if (lumber.employee_rate !== 300)\r\n        totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalCash: 0,\r\n      totalVolume: 0,\r\n      calcType: calcType,\r\n      activeEmployees: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave, \r\n      calcType}  = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                  <h2>Смена </h2>\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight' : 'btn btn-s border'}\r\n                        onClick={() => this.switchCalc('mixed')}\r\n                        >доска перемешку</button>\r\n                      {/* <button className={calcType === 'larch_only' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.setState({calcType: 'larch_only'})}>\r\n                        все листвяк</button> */}\r\n                      <button className={calcType === 'sorted' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.switchCalc('sorted')}>\r\n                        доска по сортам</button>\r\n                    </div>\r\n                    {lumbers.length > 0 &&\r\n                      <LumberTableMixed\r\n                        calcType={this.state.calcType}\r\n                        lumbers={lumbers}\r\n                        calcRowAndTotal={this.calcRowAndTotal}\r\n\r\n                        totalCash={totalCash}\r\n                        totalVolume={totalVolume}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftList } from '../../components/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ShiftList shiftList={this.state.shiftList} />\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nfunction ShiftListButton () {\r\n  let history = useHistory();\r\n\r\n  const redirect = () => {\r\n    history.push('/ramshik/shift/list/')\r\n  }\r\n  return (\r\n    <div className='card card-style mb-2'>\r\n      <div className='content'>\r\n        <h4 className='text-center' onClick={redirect}>\r\n          Список смен\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport class RamshikOverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <ShiftListButton />\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='text-center'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, label } = props\r\n  return (\r\n    <div className='my-2'>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.price > 0 && lumber.price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.total_cash > 0 && lumber.total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calcType === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calcType === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calcType === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calcType === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />\r\n          }\r\n          {lumber.calcType === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n          {lumber.calcType === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale } from '../../components/kladman/SaleCalc';\r\n\r\n\r\nexport class SaleCalcContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      lumberToSale: null,\r\n      lumbersToSale: [],\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALE_CALC_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, calcType: 'exact' }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.price = 0\r\n    }\r\n\r\n    lumber.calcType = calcType\r\n    lumber.total_cash = lumber.volume_total * lumber.price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash } = this.state\r\n    return (\r\n      <div className=''>\r\n        <div className='content'>\r\n          <h3>Калькулятор</h3> \r\n          {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n            <LumbersToSale \r\n              lumber={lumber} \r\n              setLumberID={this.setLumberID} \r\n\r\n              calcRowQnty={this.calcRowQnty}\r\n              calcRowCash={this.calcRowCash}\r\n              calcRowVolume={this.calcRowVolume}\r\n\r\n              calcRoundRowQnty={this.calcRoundRowQnty}\r\n              calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n              calcChinaRowQnty={this.calcChinaRowQnty}\r\n              calcChinaRowVolume={this.calcChinaRowVolume}\r\n              \r\n              turnCalc={this.turnCalc}\r\n              delLumber={this.delLumber}\r\n              pineBrus={this.state.pineBrus}\r\n              pineDoska={this.state.pineDoska}\r\n            />\r\n          )}\r\n          <div className='d-flex justify-content-center'>\r\n            <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n              Добавить пиломатериал\r\n            </button>\r\n          </div>\r\n          {totalCash > 0 &&\r\n            <div className='card card-style mt-2'>\r\n              <div className='content d-flex justify-content-between mb-2 '>\r\n                <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-3'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Цена за 1м3 опт'\r\n          type='number'\r\n          onChange={(e) => setRamaPrice(e, lumber.id)}\r\n          value={lumber.rama_price > 0 && lumber.rama_price}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber, larchBrus,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice,\r\n     stockType, larchDoska } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        {stockType === 'mixed' &&\r\n          <optgroup label=\"Доска\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>\r\n        }\r\n        {stockType === 'sorted' && [\r\n          <optgroup label=\"Доска сосна\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>,\r\n          <optgroup label=\"Доска лиственница\">\r\n            {larchDoska.map(ld =>\r\n              <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n              )}\r\n          </optgroup>]\r\n        }\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { loader, setAddParams, seller, bonus_kladman_label, sellers, client, delivery_fee, china_vira,\r\n    setChinaVira, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            defaultValue={null}\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={loader}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='loader'\r\n            />\r\n          }\r\n          label=\"Грузчик\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={bonus_kladman_label}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='bonus_kladman_label'\r\n            />\r\n          }\r\n          label=\"Склад бонус\"\r\n        />\r\n      </div>  \r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n        {/* <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Вира(китай)'\r\n            type='number'\r\n            name='china_vira'\r\n            onChange={setChinaVira}\r\n            value={china_vira > 0 && china_vira}/> */}\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-2'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            {/* {sale.china_vira && <p className={rowClass}>Вира(китай): {sale.china_vira + 'рублей'}</p>} */}\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/kladman/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.setRamaPrice = this.setRamaPrice.bind(this);\r\n\r\n    this.setAddParams = this.setAddParams.bind(this);\r\n    this.setChinaVira = this.setChinaVira.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n\r\n    this.saveData = this.saveData.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({stock_type: this.props.user.rama_type});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRamaPrice (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = lumber.volume_total * lumber.selling_price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams(e) {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira (e) {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale\r\n                      stockType={this.props.user.rama_type}\r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setRamaPrice={this.setRamaPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleCreateCommonContainer);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport { parseErrorData, createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals, deleteSale } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        <th>Сумма/Объем</th>\r\n        <th>Продавeц</th>\r\n        <th>грузчик</th>\r\n        <th>кладмэн</th>\r\n        <th>Доставка</th>\r\n        <th className='text-nowrap'>Удалить</th>\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  <span className='d-block font-italic'>{lumber.wood_species}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_price}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_price}</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td >\r\n              <span>{sale.selling_total_cash}р</span>\r\n              <span className='d-block'>{sale.volume} м3</span>\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              <span className='d-block'>{sale.seller_fee}</span>\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              <button className='btn btn-xs bg-red1-light' value={sale.id} onClick={deleteSale}>Удалить</button>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>{totals.total_seller_fee}</td>\r\n\r\n          <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td>\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.deleteSale = this.deleteSale.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    // yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals,\r\n        startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  deleteSale (e) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_sale(e.target.value),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals} deleteSale={this.deleteSale}/>\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleList);","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          <th>Клад/груз</th>\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td>\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'rama_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday, jsDateTimeToStrDate } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/kladman/DailyRep';\r\nimport { DayFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n\r\n      date: ''\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date: getToday(), rama: this.props.ramaToSee.id});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee,\r\n        date: getToday()\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total, });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, date: this.state.date});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0 '>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <DayFilter date={this.state.date} setData={this.setData} showResults={this.showResults} />\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyRepContainer);","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/kladman/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_CASH_RECORDS_LIST,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.records,\r\n        total: initData.total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_CASH_RECORDS_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nexport function ResawInput (props) {\r\n  const { lumber, quantity, setLumber, pineBrus, pineDoska, larchBrus, larchDoska, label, lumber_input_label } = props\r\n  let lumber_input_quantity_label = lumber_input_label + \"_quantity\"\r\n\r\n  return (\r\n    <div className=''>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        {label}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber} \r\n        onChange={setLumber}\r\n        name={lumber_input_label}\r\n        defaultValue={null}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска сосна\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска лиственница\">\r\n          {larchDoska.map(ld =>\r\n            <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n      </Select>\r\n      <TextField \r\n        className='mt-3'\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='Количество'\r\n        type='number'\r\n        name={lumber_input_quantity_label}\r\n        onChange={setLumber}\r\n        value={quantity}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport function CreatedResaw (props) {\r\n  const { resaw, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {resaw &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {resaw.created_at}</p>\r\n            \r\n            <p className={rowClass}>Перепелили: {resaw.lumber_in_quantity}шт {resaw.lumber_in} </p>\r\n            <p className={rowClass}>Получили: {resaw.lumber_out_quantity}шт {resaw.lumber_out} </p>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawToCreate (props) {\r\n  const { resaw, saveData, back, lumbers } = props\r\n  let lumberIn = getObjectbyId(lumbers, resaw.lumber_in)\r\n  let lumberOut = getObjectbyId(lumbers, resaw.lumber_out)\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {resaw &&\r\n          <div className=''>\r\n            <p className={rowClass}>Перепиливаем : {lumberIn.name} {resaw.lumber_in_quantity} шт</p>\r\n            <p className={rowClass}>Получаем : {lumberOut.name} {resaw.lumber_out_quantity} шт</p>\r\n            {/* <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p> */}\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawList (props) {\r\n  const { list, deleteResaw, user } = props\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <table className='table table-sm' style={{lineHeight: '15px'}}>\r\n          <thead>\r\n            <th>\r\n              дата\\кто записал\r\n            </th>\r\n            <th>\r\n              что перепиливали\r\n            </th>\r\n            <th>\r\n              во что перепилили\r\n            </th>\r\n          </thead>\r\n          <tbody>\r\n            {list.length > 0 && list.map(rsw => \r\n              <tr>\r\n                <td>\r\n                  <span className='d-block'>{rsw.created_at}</span>\r\n                  <span className='font-600'>{rsw.who}</span>\r\n                </td>\r\n                <td>\r\n                  <span className='d-block'>{rsw.lumber_in_quantity}шт {rsw.lumber_in}</span>\r\n                  <span className='font-italic'>{rsw.lumber_in_wood_species}</span>\r\n                </td>\r\n                <td>\r\n                  <span className='d-block'>{rsw.lumber_out_quantity}шт {rsw.lumber_out}</span>\r\n                  <span className='font-italic'>{rsw.lumber_out_wood_species}</span>\r\n                </td>\r\n                {user.is_manager &&\r\n                  <td className='mr-3'>\r\n                    <button className='btn btn-s bg-red1-light mr-2 text-uppercase' \r\n                    onClick={() => deleteResaw(rsw.id)}>\r\n                      удалить</button>\r\n                  </td>\r\n                }\r\n              </tr>\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport {  ResawToCreate, CreatedResaw, ResawInput, ResawList }  from '../../components/kladman/Resaw';\r\n\r\n\r\nexport class ResawContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      \r\n      lumber_in: null,\r\n      lumber_in_quantity: null,\r\n      lumber_out: null,\r\n      lumber_out_quantity: null,\r\n\r\n      createdResaw: null,\r\n      dataToSave: null,\r\n\r\n      resawsList: []\r\n    }\r\n\r\n    this.setLumber = this.setLumber.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.deleteResaw = this.deleteResaw.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RESAWS,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: createUrlParamsFromFilters({rama: this.props.ramaToSee.id})\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        resawsList: initData.results,\r\n        });\r\n    })\r\n  }\r\n\r\n  setLumber (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumber_in, lumber_in_quantity, lumber_out, lumber_out_quantity } = this.state\r\n    \r\n    let data = {\r\n      lumber_in: lumber_in,\r\n      lumber_in_quantity: lumber_in_quantity,\r\n      lumber_out: lumber_out,\r\n      lumber_out_quantity: lumber_out_quantity,\r\n    }\r\n\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_RESAW_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdResaw: response.data.created, \r\n        resawsList: response.data.resaws });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  deleteResaw (id) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_resaw(id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ resawsList: response.data.resaws });\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { createdResaw, dataToSave, message, resawsList } = this.state\r\n    const { user, ramaToSee } = this.props\r\n    return (\r\n      <div className=''>\r\n        {createdResaw\r\n          ? <CreatedResaw resaw={createdResaw} message={message}/>\r\n          : dataToSave\r\n            ? <ResawToCreate resaw={dataToSave} saveData={this.saveData} back={this.back} \r\n                lumbers={this.state.lumbers}/>\r\n            : (user.is_manager && user.rama_id === ramaToSee.id ) &&\r\n              <div className='card card-style mt-3'>\r\n                <div className='content'>\r\n                  <ResawInput \r\n                    lumber={this.state.lumber_in}\r\n                    quantity={this.state.lumber_in_quantity}\r\n                    setLumber={this.setLumber}\r\n                    pineBrus={this.state.pineBrus}\r\n                    pineDoska={this.state.pineDoska}\r\n                    larchBrus={this.state.larchBrus}\r\n                    larchDoska={this.state.larchDoska}\r\n\r\n                    label={'Что перепиливаем?'}\r\n                    lumber_input_label={'lumber_in'}\r\n                  />\r\n                  <div className='mt-3'>\r\n                    <ResawInput \r\n                      lumber={this.state.lumber_out}\r\n                      quantity={this.state.lumber_out_quantity}\r\n                      setLumber={this.setLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchBrus={this.state.larchBrus}\r\n                      larchDoska={this.state.larchDoska}\r\n\r\n                      label={'Что получаем?'}\r\n                      lumber_input_label={'lumber_out'}\r\n                    />\r\n                  </div>\r\n                  <button className='btn btn-l bg-highlight mt-3' onClick={this.preSave}>\r\n                    Далее\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          }\r\n        <ResawList list={resawsList} deleteResaw={this.deleteResaw} user={user}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResawContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function requireAuthentication(Component, groups) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n          \r\n          if (this.props.isLoggedIn) {\r\n            if (groups.includes('manager') && user.is_manager)\r\n              access = true\r\n\r\n            if (groups.includes('boss') && user.is_boss)\r\n              access = true\r\n\r\n            if (groups.includes('capo') && user.is_capo)\r\n              access = true\r\n\r\n            if (groups.includes('seller') && user.is_seller)\r\n              access = true\r\n            \r\n            if (groups.includes('is_ramshik') && user.is_ramshik)\r\n              access = true\r\n          }\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? access\r\n                  ? <Component {...this.props} />\r\n                  : <h4 className='text-center my-5'>Нет прав</h4>\r\n                : <Redirect to={'/'}/>\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport ManagerStock from './containers/manager/Stock';\r\nimport { IncomeTimberCreateContainer } from './containers/manager/CreateIncome';\r\nimport { QuotaOverview } from './containers/manager/Quotas';\r\n\r\nimport { ShiftCreateComponent } from './containers/manager/CreateShift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikOverView } from './containers/ramshik/OverView';\r\n\r\nimport { SaleCalcContainer } from './containers/manager/SaleCalc';\r\nimport  SaleCreateCommonContainer from './containers/manager/SaleCreateCommon';\r\nimport SaleList from './containers/manager/SaleList';\r\nimport DailyRepContainer from './containers/manager/DailyRep';\r\nimport { ExpensesContainer } from './containers/manager/Expenses';\r\nimport ResawContainer from './containers/manager/Resaw';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager and kladman views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, ['manager', 'boss', 'capo'])} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, ['manager', 'boss', 'capo'])} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['manager'])} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, ['manager'])} />\r\n              <Route exact path=\"/manager/sales/calc/\" \r\n                component={requireAuthentication(SaleCalcContainer, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/expenses/\" \r\n                component={requireAuthentication(ExpensesContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/daily_report/\" \r\n                component={requireAuthentication(DailyRepContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/resaws/create/\" \r\n                component={requireAuthentication(ResawContainer, ['manager', 'boss', 'capo',])} />\r\n\r\n              {/* manager only */}\r\n              <Route exact path=\"/manager/rawstock/create_income/\" \r\n                component={requireAuthentication(IncomeTimberCreateContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/quotas/overview/\" \r\n                component={requireAuthentication(QuotaOverview, ['manager', 'boss', 'capo',])} />\r\n\r\n              {/* ramshik views */}\r\n              {/* <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['is_senior_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, ['is_ramshik'])} />\r\n              {/* <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, ['is_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/main/\" \r\n              component={requireAuthentication(RamshikOverView, ['is_ramshik'])} />\r\n\r\n              {/* kladman views */}\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}