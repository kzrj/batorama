{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","containers/manager/RamshikPayments.js","components/utils.js","components/Shifts.js","containers/manager/Shifts.js","containers/manager/Stock.js","components/CreateIncomeTimberComponent.js","containers/manager/CreateIncome.js","containers/manager/Quotas.js","components/ShiftCreateComponent.js","containers/manager/CreateShift.js","containers/ramshik/ShiftList.js","containers/ramshik/OverView.js","components/kladman/SaleCalc.js","containers/manager/SaleCalc.js","components/kladman/SaleCommon.js","containers/manager/SaleCreateCommon.js","containers/manager/SaleList.js","components/kladman/DailyRep.js","containers/manager/DailyRep.js","components/kladman/Expenses.js","containers/manager/Expenses.js","components/kladman/Resaw.js","containers/manager/Resaw.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","setRamaToSee","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","ramaToSee","AuthSelectors","getUser","state","rama","merge","data","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","SET_RAMA_TO_SEE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","STOCK","SHIFTS","SALES","DAILY_REP","SALE_CALC_DATA","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_STOCK_SET_LUMBER_PRICE","MANAGER_SALE_LIST","MANAGER_RAWSTOCK_INCOME_INIT_DATA","MANAGER_RAWSTOCK_INCOME_CREATE","MANAGER_QUOTA_OVERVIEW","MANAGER_SHIFT_CREATE_DATA","MANAGER_SHIFT_CREATE","MANAGER_SALE_INIT_DATA","MANAGER_SALE_CREATE","manager_delete_sale","id","MANAGER_CASH_RECORDS_LIST","MANAGER_CASH_RECORDS_CREATE","KLADMAN_RESAW_CREATE","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","DateFilter","startDate","endDate","setData","showResults","value","onChange","shrink","onClick","DayFilter","date","MenuItem","history","useHistory","push","to","style","title","RamaMenu","manager_access","console","log","is_manager","rama_id","can_see_rama_shift","includes","can_see_rama_sales","can_see_rama_cash","AfterLogin","is_ramshik","can_see_rama_stock","map","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","logout","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","lineHeight","nickname","Header","modalOpen","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","LastOperations","lastOperations","length","op","created_at","record_type","employee","amount","RamshikPayments","employees","activeEmployee","last_payouts","payout","method","url","headers","res","initData","setState","formData","FormData","errorObj","statusText","JSON","stringify","property","parseErrorData","cash","e","target","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","jsDateTimeToStrDate","jsDate","ShiftLumberTr","record","wood_species","lumber","quantity","volume","rate","total_cash","ShiftComponent","shift","shift_type","emp","back_calc_cash","back_calc_cash_per_employee","lumber_records","ShiftList","shiftList","ManagerShiftList","yesterday","setDate","date_before","date_after","results","TrRow","showNull","changeMarketCost","show","current_stock_quantity","woodSpeciesClass","current_stock_volume","toFixed","is_boss","market_cost","is_kladman","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","FilteredTimberTr","timber_record","calcType","calcRowAndTotal","tr","diameter","TimberTable","timbers","totalQnty","colSpan","TimberTableRead","IncomeToSave","incomeTimber","saveData","back","raw_timber_records","CreatedIncome","createdIncome","rowClass","note","timber_records","IncomeTimberCreateContainer","initTimbers","dataToSave","preSave","switchCalc","timber","tmb","income_timber","QuotaOverview","total_volume_quota_brus","total_volume_quota_doska","total_volume_sold_brus","total_volume_sold_doska","brus_balance","doska_balance","FilteredLumberTr","volume_total","employee_rate","lumber_type","LumberTableMixed","LumberTable","lumber_record","ShiftToSave","employee_cash","cash_per_employee","raw_records","employeesData","CreatedShift","back_calc_volume","EmployeesBlock","activeEmployees","addEmployee","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","calcRow","calcTotalVolume","calcTotalCash","qnty","moreThan10","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","eIds","RamshikShiftList","ShiftListButton","RamshikOverView","ramshik","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","variant","price","LumbersToSale","setLumberID","pineBrus","pineDoska","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","lumberRef","useRef","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","pb","pd","china_volume","SaleCalcContainer","lumberToSale","lumbersToSale","addLumberToSale","calcTotal","pine_brus_lumbers","pine_doska_lumbers","lumberData","parseFloat","round_volume","setRamaPrice","selling_price","selling_total_cash","rama_price","larchBrus","stockType","larchDoska","lb","ld","calc_type","SaleCheckList","loader","setAddParams","seller","bonus_kladman_label","sellers","client","delivery_fee","china_vira","setChinaVira","FormControl","s","FormControlLabel","control","Checkbox","color","LumbersTable","CreatedSale","sale","seller_fee","loader_fee","kladman_fee","SaleCommonToCreate","bonus_kladman","deliveryFee","sale_cash","SaleCreateCommonContainer","createdSale","stock_type","rama_type","larch_brus_lumbers","larch_doska_lumbers","kladman_id","SalesTable","sales","totals","deleteSale","sale_type","rama_total_cash","seller_name","total_selling_cash","total_seller_fee","total_loader_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","SalesList","sales_totals","sellers_fee","total","CashRecordsList","records","DailyRepContainer","createdExpense","expenses","incomes","allRecords","total_expenses","total_incomes","createExpense","expense_records","expense_records_total","income_records","income_records_total","records_total","sales_sellers_fee","expense","KLADMAN_EXPENSE_CREATE","ExpensesList","CreateExpense","useState","setCount","setNote","ExpensesContainer","created_at_after","ResawInput","setLumber","lumber_input_label","lumber_input_quantity_label","CreatedResaw","resaw","lumber_in_quantity","lumber_in","lumber_out_quantity","lumber_out","ResawToCreate","lumberIn","lumberOut","ResawContainer","createdResaw","KLADMAN_SALE_INIT_DATA","created","requireAuthentication","groups","AuthenticatedComponent","access","is_capo","is_seller","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.9f9ddacd.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null,\n\n  setRamaToSee: ['rama'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false,\n  ramaToSee: {},\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// rama to see\nexport const setRamaToSee = (state, { rama }) => {\n  return state.merge({ ramaToSee: rama })\n}\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false, ramaToSee: {} })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.SET_RAMA_TO_SEE]: setRamaToSee,\n\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    //common_api\r\n    STOCK: `${apiUrl}/common/stock/`,\r\n    SHIFTS: `${apiUrl}/common/shifts/`,\r\n    SALES: `${apiUrl}/common/sales/`,\r\n    DAILY_REP: `${apiUrl}/common/daily_report/`,\r\n    SALE_CALC_DATA: `${apiUrl}/common/sales/calc_data/`,\r\n\r\n    // ramshik api\r\n    // RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    // RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_STOCK_SET_LUMBER_PRICE: `${apiUrl}/manager/stock/set_price/`,\r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n    MANAGER_RAWSTOCK_INCOME_INIT_DATA: `${apiUrl}/manager/rawstock/timber/create_income/init_data/`,\r\n    MANAGER_RAWSTOCK_INCOME_CREATE: `${apiUrl}/manager/rawstock/timber/create_income/`,\r\n    MANAGER_QUOTA_OVERVIEW: `${apiUrl}/manager/quota/overview/`,\r\n\r\n    MANAGER_SHIFT_CREATE_DATA: `${apiUrl}/manager/shifts/create/init_data/`,\r\n    MANAGER_SHIFT_CREATE: `${apiUrl}/manager/shifts/create/`,\r\n    MANAGER_SALE_INIT_DATA: `${apiUrl}/manager/sales/create/init_data/`,\r\n    MANAGER_SALE_CREATE: `${apiUrl}/manager/sales/create/`,\r\n    manager_delete_sale: (id) => `${apiUrl}/manager/sales/${id}/`,\r\n\r\n    MANAGER_CASH_RECORDS_LIST: `${apiUrl}/manager/cash_records/list/`,\r\n    MANAGER_CASH_RECORDS_CREATE: `${apiUrl}/manager/cash_records/create_expense/`,\r\n\r\n    KLADMAN_RESAW_CREATE: `${apiUrl}/kladman/resaws/create/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n\r\n\r\nexport function DateFilter(props) {\r\n  const { startDate, endDate, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        label={'Дата с'}\r\n        type=\"date\"\r\n        name='startDate'\r\n        className='mr-2'\r\n        value={startDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <TextField\r\n        label={'Дата до'}\r\n        type=\"date\"\r\n        name='endDate'\r\n        className='mr-2'\r\n        value={endDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport function DayFilter(props) {\r\n  const { date, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        // label={'Дата '}\r\n        type=\"date\"\r\n        name='date'\r\n        className='mr-2'\r\n        value={date}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} "," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nexport function MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        // 'height': '0px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction RamaMenu (props) {\r\n  const { user, ramaToSee } = props\r\n  let manager_access = false\r\n  console.log(user, ramaToSee)\r\n  if (user.is_manager && user.rama_id === ramaToSee.id) {\r\n    manager_access = true\r\n  }\r\n\r\n  return (\r\n    <div className=' '>\r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Склад</h3>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n      </div>\r\n\r\n      {/* <div className='my-4'>\r\n        <h3 className='text-center'>Круглый лес и план</h3>\r\n        <MenuItem title={'Приход круглого леса'} to={'/manager/rawstock/create_income/'}/>\r\n        <MenuItem title={'План'} to={'/manager/quotas/overview/'}/>\r\n      </div> */}\r\n\r\n      {user.can_see_rama_shift.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Смены, перепил</h3>\r\n            <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/>\r\n          {manager_access &&\r\n            <MenuItem title={'Создать смену'} to={'/manager/shift/create_shift/'}/>\r\n          }\r\n          {manager_access && \r\n            <MenuItem title={'Перепил'} to={'/manager/resaws/create/'}/>\r\n          }\r\n        </div>\r\n      }\r\n      \r\n      {user.can_see_rama_sales.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Продажи</h3>\r\n          {manager_access &&\r\n            <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n          }\r\n          <MenuItem title={'Калькулятор продавца'} to={'/manager/sales/calc/'}/>\r\n          <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        </div>\r\n      }\r\n      {user.can_see_rama_cash.includes(ramaToSee.id) &&\r\n        <div className='my-4'>\r\n          <h3 className='text-center'>Отчеты и расходы</h3>\r\n          {manager_access && [\r\n            <MenuItem title={'Расходы'} to={'/manager/expenses/'}/>,\r\n            <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>]\r\n          }\r\n          <MenuItem title={'Итоги за день'} to={'/manager/daily_report/'}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, setRamaToSee, ramaToSee } = props\r\n\r\n  if (user.is_ramshik) \r\n    return <Redirect to=\"/ramshik/main\" />\r\n  \r\n  if (user.can_see_rama_stock) {\r\n      return (\r\n        ramaToSee.id \r\n        ? <RamaMenu user={user} ramaToSee={ramaToSee}/>\r\n        : <div className='my-3'>\r\n          {user.can_see_rama_stock.map(rama => \r\n            <div className='card card-style' onClick={() => setRamaToSee(rama)}>\r\n              <div className='content'>\r\n                <h4 className='text-center'>{rama.name}</h4>\r\n              </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, ramaToSee } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout} setRamaToSee={this.props.setRamaToSee}\r\n                ramaToSee={ramaToSee}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  setRamaToSee: (rama) => dispatch(AuthActions.setRamaToSee(rama))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  function toMain () {\r\n    props.setRamaToSee({})\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>{props.ramaToSee.name}</h4>\r\n      {props.ramaToSee.name \r\n          ? <h6 onClick={toMain}>к списку пилорам</h6>\r\n          : <h4>Пилорамы</h4>\r\n        }\r\n      <button className='btn btn-xs bg-red1-light' style={{lineHeight: '13px'}} onClick={handleClickLogout}>\r\n        <span className='py-0 my-0'>\r\n          <span className='d-block'>{props.user.nickname}</span>\r\n          выйти\r\n        </span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, ramaToSee } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout} user={user} ramaToSee={ramaToSee} \r\n            setRamaToSee={this.props.setRamaToSee}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n  setRamaToSee: (rama) => dispatch(AuthActions.setRamaToSee(rama))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className='d-flex justify-content-start'>\r\n              {employees.length > 0 &&\r\n                <table className='table table-sm table-responsive w-75 mr-2'>\r\n                  <thead>\r\n                    <th>рамщик</th>\r\n                    <th>баланс</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {employees.map(employee => \r\n                      <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                        onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                        <td>{employee.nickname}</td>\r\n                        <td>{employee.cash} р</td>\r\n                      </tr>\r\n                      )}\r\n                  </tbody>\r\n                </table>\r\n              }\r\n              {activeEmployee && \r\n                <div>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <TextField type='number' className='my-1' value={amount}\r\n                    onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                  <button className='d-block btn btn-m bg-green2-light mt-2'\r\n                    onClick={this.payout}>\r\n                    Выдать\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}\r\n\r\nexport function jsDateTimeToStr (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  let hours = jsDate.getHours();\r\n  let minutes = jsDate.getMinutes() > 9 ? jsDate.getMinutes(): '0' + jsDate.getMinutes();\r\n  return yyyy + '-' + mm + '-' + dd + 'T' + hours + ':' + minutes\r\n  \r\n}\r\n\r\nexport function jsDateTimeToStrDate (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  return yyyy + '-' + mm + '-' + dd \r\n  \r\n}","import React, { Component } from 'react';\r\n\r\n\r\nfunction ShiftLumberTr (props) {\r\n  const { record } = props\r\n  const measureClass = 'font-10'\r\n  return (\r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {record.wood_species === 'larch'  \r\n          ? <span className='d-block color-brown1-light'>листв</span>\r\n          : <span className='d-block color-green1-light'>сосна</span>\r\n        }\r\n        {record.lumber.includes('доска') \r\n          ? <span className='font-italic'>{record.lumber}</span>\r\n          : <span className=''>{record.lumber}</span>\r\n        }\r\n      </td>\r\n      <td>\r\n        {record.quantity}\r\n        <span className={measureClass}> шт</span>\r\n      </td>\r\n      <td>{record.volume}<span className={measureClass}> м3</span></td>\r\n      <td>{record.rate}<span className={measureClass}> р</span></td>\r\n      <td>{record.total_cash}<span className={measureClass}> р</span></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport function ShiftComponent (props) {\r\n  const { shift } = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content mb-1'>\r\n        <p className='color-black mb-0 font-16'>Дата: {shift.date} {shift.shift_type}</p>\r\n        <p className='mb-0 color-black'>\r\n          Работали: \r\n          {shift.employees.map(emp => <span className='mx-1'>{emp}</span>)}\r\n        </p>\r\n        <p className='color-black mb-0 font-13 d-flex justify-content-between' style={{lineHeight: '15px'}}>\r\n          <span>Объем: <span className='d-block font-600 font-14'>{shift.volume} m3</span></span>\r\n          <span>Общая сумма: <span className='d-block font-600 font-14'>{shift.back_calc_cash} р</span></span>\r\n          <span>На одного: <span className='d-block font-600 font-14'>\r\n            {shift.back_calc_cash_per_employee} р</span></span>\r\n        </p>\r\n      </div>\r\n      <div className='content mt-0'>\r\n        <table className='table table-sm'>\r\n          <thead>\r\n            <th>Пиломат</th>\r\n            <th>кол-во</th>\r\n            <th>объем</th>\r\n            <th>ставка</th>\r\n            <th>сумма</th>\r\n          </thead>\r\n          <tbody>\r\n            {shift.lumber_records.map(record => \r\n              <ShiftLumberTr record={record}/>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShiftList (props) {\r\n  const { shiftList } = props\r\n  return (\r\n    <div className='mt-2'>\r\n      <h4 className='my-3 text-center'>Смены  ({shiftList.length})</h4>\r\n      {shiftList.length > 0 && shiftList.map(shift => \r\n          <ShiftComponent shift={shift} />\r\n      )}\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { ShiftList } from '../../components/Shifts';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <ShiftList shiftList={this.state.shiftList} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerShiftList);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost, user } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(3)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          {user.is_boss &&\r\n            <TextField type='number' \r\n              className=''\r\n              value={lumber.market_cost > 0 && lumber.market_cost} \r\n              onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n          }\r\n          {user.is_kladman && <span className='font-16'>{lumber.market_cost}</span>}\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    // console.log(this.props.ramaToSee)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.STOCK,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n   \r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_STOCK_SET_LUMBER_PRICE,\r\n      data: {\r\n        lumber: lumberId,\r\n        market_cost: parseInt(e.target.value) || 0\r\n      },\r\n      headers: {'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      lumber = res.data;\r\n    })\r\n\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}\r\n                        user={this.props.user}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerStock);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredTimberTr (props) {\r\n  const { timber_record, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {timber_record.diameter }\r\n        {timber_record.wood_species === 'Сосна' \r\n          ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n          : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n        }\r\n      </td>\r\n      <td className=''>\r\n          <input style={{'color': '#6c6c6c'}}\r\n            type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, timber_record)} \r\n            value={timber_record.quantity > 0 && timber_record.quantity}/>\r\n      </td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((timber_record.wood_species === 'Лиственница') | ( timber_record.wood_species === 'Сосна'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'pine' ) {\r\n    if (timber_record.wood_species === 'Сосна')\r\n      return tr\r\n    }\r\n\r\n  if (calcType === 'larch' ) {\r\n    if (timber_record.wood_species === 'Лиственница')\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\nexport function TimberTable (props) {\r\n  const { timbers, calcRowAndTotal, totalQnty, calcType } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) =>\r\n          <FilteredTimberTr timber_record={timber_record} calcRowAndTotal={calcRowAndTotal} \r\n            calcType={calcType} key={key}/>\r\n          )}\r\n        <tr>\r\n          <td colSpan='2'>\r\n            <span className='font-17'>Общее количество: {totalQnty}</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function TimberTableRead (props) {\r\n  const { timbers } = props\r\n  return(\r\n    <table className='table table-sm mt-2'>\r\n      <thead>\r\n        <th>\r\n          D\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {timbers.map((timber_record, key) => timber_record.quantity > 0 &&\r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {timber_record.diameter}\r\n              {timber_record.wood_species === 'Сосна' \r\n                ? <span className='font-12 font-italic color-green1-light d-block'>{timber_record.wood_species}</span>\r\n                : <span className='font-12 font-italic color-brown1-light d-block'>{timber_record.wood_species}</span>\r\n              }\r\n            </td>\r\n            <td>{timber_record.quantity}</td>\r\n          </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function IncomeToSave (props) {\r\n  const { incomeTimber, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {incomeTimber &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Общее количество: {incomeTimber.totalQnty}</p>\r\n            <TimberTableRead timbers={incomeTimber.raw_timber_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedIncome (props) {\r\n  const { createdIncome, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Приход сохранен</h4>\r\n        {createdIncome &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {createdIncome.created_at}</p>\r\n            <p className={rowClass}>\r\n              Общее количество: {createdIncome.quantity} шт</p>\r\n            <p className={rowClass}>\r\n              Общий объем: {createdIncome.volume} м3</p>              \r\n            <p className={rowClass}>Примечание: {createdIncome.note}</p>\r\n\r\n            <TimberTableRead timbers={createdIncome.timber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\n\r\nimport { TimberTable, CreatedIncome, IncomeToSave } from '../../components/CreateIncomeTimberComponent';\r\n\r\n\r\nexport class IncomeTimberCreateContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timbers: [],\r\n      initTimbers: [],\r\n      calcType: 'pine',\r\n      totalQnty: 0,\r\n      dataToSave: null,\r\n      createdIncome: null\r\n    }\r\n\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.switchCalc = this.switchCalc.bind(this);\r\n    this.saveData = this.saveData.bind(this)\r\n    this.back = this.back.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_RAWSTOCK_INCOME_INIT_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ timbers: initData.timbers, initTimbers: initData.timbers });\r\n      })\r\n  }\r\n\r\n  calcRowAndTotal (e, timber) {\r\n    let { timbers } = this.state\r\n    timber.quantity = parseInt(e.target.value)\r\n\r\n    timbers = replaceItemInDictArrayById(timbers, timber)\r\n    let totalQnty = 0\r\n\r\n    timbers.map(tmb => {\r\n      totalQnty = totalQnty + parseInt(tmb.quantity)\r\n    })\r\n\r\n    this.setState({ \r\n      ...this.state,\r\n      timbers: timbers,\r\n      totalQnty: totalQnty,\r\n      message: null\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { timbers, totalQnty } = this.state\r\n    let data = {\r\n      raw_timber_records: timbers,\r\n      totalQnty: totalQnty\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_RAWSTOCK_INCOME_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdIncome: response.data.income_timber });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      timbers: this.state.initTimbers,\r\n      totalQnty: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      timbers: this.state.timbers,\r\n      totalQnty: 0,\r\n      calcType: calcType,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { timbers, totalQnty, calcType, createdIncome, dataToSave, message }  = this.state\r\n    return (\r\n      <div>\r\n        {createdIncome \r\n          ? <CreatedIncome createdIncome={createdIncome} message={message}/>\r\n          : dataToSave\r\n            ? <IncomeToSave incomeTimber={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : timbers.length > 0 &&\r\n              <div className='card card-style mb-1 mt-2'>\r\n                <div className='content mb-1'>\r\n                  <h3>Приход круглого</h3>\r\n                  <div className='d-flex justify-content-between my-2'>\r\n                    <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'}\r\n                      onClick={() => this.switchCalc('mixed')}\r\n                      >Пересорт</button>\r\n                    <button className={calcType === 'larch' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('larch')}>\r\n                      все листвяк</button>\r\n                    <button className={calcType === 'pine' ? 'btn btn-s bg-highlight mx-2' : ' mx-2 btn btn-s border'} \r\n                      onClick={() => this.switchCalc('pine')}>\r\n                      все сосна</button>\r\n                  </div>\r\n                  <TimberTable timbers={timbers} calcRowAndTotal={this.calcRowAndTotal} totalQnty={totalQnty}\r\n                    calcType={calcType}/>\r\n                </div>\r\n                {totalQnty > 0 && \r\n                  <div className='content mt-0'>\r\n                    <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                  </div>\r\n                }\r\n              </div>\r\n            }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nexport class QuotaOverview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      total_volume_quota_brus: null,\r\n      total_volume_quota_doska: null,\r\n      total_volume_sold_brus: null,\r\n      total_volume_sold_doska: null,\r\n      brus_balance: null,\r\n      doska_balance: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.user.rama_id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_QUOTA_OVERVIEW,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      this.setState({ \r\n        total_volume_quota_brus: res.data.total_volume_quota_brus,\r\n        total_volume_quota_doska: res.data.total_volume_quota_doska,\r\n        total_volume_sold_brus: res.data.total_volume_sold_brus,\r\n        total_volume_sold_doska: res.data.total_volume_sold_doska,\r\n        brus_balance: res.data.brus_balance,\r\n        doska_balance: res.data.doska_balance,\r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { } = this.state\r\n    let brusBalance = \r\n      (this.state.total_volume_quota_brus - this.state.total_volume_sold_brus).toFixed()\r\n    return (\r\n      <div className='card card-style my-2'>\r\n        <div className='content'>\r\n          <h4 className='mb-2'>План пилорамы</h4>\r\n          <table className='table table-sm'>\r\n            <thead>\r\n              <th>-</th>\r\n              <th>План</th>\r\n              <th>Отгружено</th>\r\n              <th>Баланс</th>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Брус</td>\r\n                <td>{this.state.total_volume_quota_brus}</td>\r\n                <td>{this.state.total_volume_sold_brus}</td>\r\n                <td>{this.state.brus_balance && this.state.brus_balance.toFixed(4)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Доска</td>\r\n                <td>{this.state.total_volume_quota_doska}</td>\r\n                <td>{this.state.total_volume_sold_doska}</td>\r\n                <td>{this.state.doska_balance && this.state.doska_balance.toFixed(4)}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuotaOverview);","import React, { Component } from 'react';\r\n\r\n\r\nfunction FilteredLumberTr (props) {\r\n  const { lumber, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr key={key}>\r\n      <td>\r\n        {lumber.name} \r\n        {lumber.wood_species === 'pine' \r\n          ? <span className='d-block color-brown1-light'>сосна</span> \r\n          : <span className='d-block color-green2-light'>лиственница</span>}\r\n      </td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n        type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n        value={lumber.quantity > 0 && lumber.quantity}/>\r\n      </td>\r\n      <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n      <td>{lumber.employee_rate} руб</td>\r\n      <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((lumber.lumber_type !== 'doska' & lumber.wood_species === 'larch') | ( lumber.wood_species === 'pine'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'sorted' ) {\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\n\r\nexport function LumberTableMixed (props) {\r\n  const { lumbers, calcRowAndTotal, totalVolume, totalCash, calcType } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive text-center' \r\n      style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n      <thead>\r\n        <th>Изделие</th>\r\n        <th>Кол-во</th>\r\n        <th>Обьем</th>\r\n        <th>Ставка</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n      {lumbers.map((lumber, key) => \r\n        <FilteredLumberTr lumber={lumber} calcType={calcType} calcRowAndTotal={calcRowAndTotal} key={key}/>\r\n        )}\r\n        <tr>\r\n          <td>Итого</td>\r\n          <td className='w-25'>\r\n            -\r\n          </td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n            </span>\r\n          </td>\r\n          <td>-</td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2 flex-wrap'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) \r\n              ? 'bg-green2-light mx-1 my-1' + empClass : 'bg-dark1-dark mx-1 my-1' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock, LumberTableMixed } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      calcType: 'mixed',\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n    this.switchCalc = this.switchCalc.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_SHIFT_CREATE_DATA,\r\n        // params: params,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, \r\n          employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    // if (lumber.employee_rate !== 800 && lumber.employee_rate !== 300) {\r\n    //   if (moreThan10) {\r\n    //     if (lumber.wood_species === 'pine') rate = 650\r\n    //     if (lumber.wood_species === 'larch') rate = 700\r\n    //   } else {\r\n    //     if (lumber.wood_species === 'pine') rate = 600\r\n    //     if (lumber.wood_species === 'larch') rate = 650\r\n    //   }\r\n    // }\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      if (lumber.employee_rate !== 300)\r\n        totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc (calcType) {\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalCash: 0,\r\n      totalVolume: 0,\r\n      calcType: calcType,\r\n      activeEmployees: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave, \r\n      calcType}  = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                  <h2>Смена </h2>\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight' : 'btn btn-s border'}\r\n                        onClick={() => this.switchCalc('mixed')}\r\n                        >доска перемешку</button>\r\n                      {/* <button className={calcType === 'larch_only' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.setState({calcType: 'larch_only'})}>\r\n                        все листвяк</button> */}\r\n                      <button className={calcType === 'sorted' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.switchCalc('sorted')}>\r\n                        доска по сортам</button>\r\n                    </div>\r\n                    {lumbers.length > 0 &&\r\n                      <LumberTableMixed\r\n                        calcType={this.state.calcType}\r\n                        lumbers={lumbers}\r\n                        calcRowAndTotal={this.calcRowAndTotal}\r\n\r\n                        totalCash={totalCash}\r\n                        totalVolume={totalVolume}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftList } from '../../components/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ShiftList shiftList={this.state.shiftList} />\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nfunction ShiftListButton () {\r\n  let history = useHistory();\r\n\r\n  const redirect = () => {\r\n    history.push('/ramshik/shift/list/')\r\n  }\r\n  return (\r\n    <div className='card card-style mb-2'>\r\n      <div className='content'>\r\n        <h4 className='text-center' onClick={redirect}>\r\n          Список смен\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport class RamshikOverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <ShiftListButton />\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='text-center'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, label } = props\r\n  return (\r\n    <div className='my-2'>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.price > 0 && lumber.price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.total_cash > 0 && lumber.total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calcType === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calcType === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calcType === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calcType === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />\r\n          }\r\n          {lumber.calcType === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n          {lumber.calcType === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale } from '../../components/kladman/SaleCalc';\r\n\r\n\r\nexport class SaleCalcContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      lumberToSale: null,\r\n      lumbersToSale: [],\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALE_CALC_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, calcType: 'exact' }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.price = 0\r\n    }\r\n\r\n    lumber.calcType = calcType\r\n    lumber.total_cash = lumber.volume_total * lumber.price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash } = this.state\r\n    return (\r\n      <div className=''>\r\n        <div className='content'>\r\n          <h3>Калькулятор</h3> \r\n          {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n            <LumbersToSale \r\n              lumber={lumber} \r\n              setLumberID={this.setLumberID} \r\n\r\n              calcRowQnty={this.calcRowQnty}\r\n              calcRowCash={this.calcRowCash}\r\n              calcRowVolume={this.calcRowVolume}\r\n\r\n              calcRoundRowQnty={this.calcRoundRowQnty}\r\n              calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n              calcChinaRowQnty={this.calcChinaRowQnty}\r\n              calcChinaRowVolume={this.calcChinaRowVolume}\r\n              \r\n              turnCalc={this.turnCalc}\r\n              delLumber={this.delLumber}\r\n              pineBrus={this.state.pineBrus}\r\n              pineDoska={this.state.pineDoska}\r\n            />\r\n          )}\r\n          <div className='d-flex justify-content-center'>\r\n            <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n              Добавить пиломатериал\r\n            </button>\r\n          </div>\r\n          {totalCash > 0 &&\r\n            <div className='card card-style mt-2'>\r\n              <div className='content d-flex justify-content-between mb-2 '>\r\n                <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-3'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Цена за 1м3 опт'\r\n          type='number'\r\n          onChange={(e) => setRamaPrice(e, lumber.id)}\r\n          value={lumber.rama_price > 0 && lumber.rama_price}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber, larchBrus,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice,\r\n     stockType, larchDoska } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        {stockType === 'mixed' &&\r\n          <optgroup label=\"Доска\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>\r\n        }\r\n        {stockType === 'sorted' && [\r\n          <optgroup label=\"Доска сосна\">\r\n            {pineDoska.map(pd =>\r\n              <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n              )}\r\n          </optgroup>,\r\n          <optgroup label=\"Доска лиственница\">\r\n            {larchDoska.map(ld =>\r\n              <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n              )}\r\n          </optgroup>]\r\n        }\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { loader, setAddParams, seller, bonus_kladman_label, sellers, client, delivery_fee, china_vira,\r\n    setChinaVira, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            defaultValue={null}\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={loader}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='loader'\r\n            />\r\n          }\r\n          label=\"Грузчик\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={bonus_kladman_label}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='bonus_kladman_label'\r\n            />\r\n          }\r\n          label=\"Склад бонус\"\r\n        />\r\n      </div>  \r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n        {/* <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Вира(китай)'\r\n            type='number'\r\n            name='china_vira'\r\n            onChange={setChinaVira}\r\n            value={china_vira > 0 && china_vira}/> */}\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-2'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            {/* {sale.china_vira && <p className={rowClass}>Вира(китай): {sale.china_vira + 'рублей'}</p>} */}\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/kladman/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.setRamaPrice = this.setRamaPrice.bind(this);\r\n\r\n    this.setAddParams = this.setAddParams.bind(this);\r\n    this.setChinaVira = this.setChinaVira.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n\r\n    this.saveData = this.saveData.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({stock_type: this.props.user.rama_type});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRamaPrice (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = lumber.volume_total * lumber.selling_price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams(e) {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira (e) {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale\r\n                      stockType={this.props.user.rama_type}\r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setRamaPrice={this.setRamaPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleCreateCommonContainer);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport { parseErrorData, createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals, deleteSale } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        <th>Сумма/Объем</th>\r\n        <th>Продавeц</th>\r\n        <th>грузчик</th>\r\n        <th>кладмэн</th>\r\n        <th>Доставка</th>\r\n        <th className='text-nowrap'>Удалить</th>\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  <span className='d-block font-italic'>{lumber.wood_species}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.selling_price}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_total_cash}</span>\r\n                  <span className='d-block font-italic'>{lumber.rama_price}</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td >\r\n              <span>{sale.selling_total_cash}р</span>\r\n              <span className='d-block'>{sale.volume} м3</span>\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              <span className='d-block'>{sale.seller_fee}</span>\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              <button className='btn btn-xs bg-red1-light' value={sale.id} onClick={deleteSale}>Удалить</button>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>{totals.total_seller_fee}</td>\r\n\r\n          <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td>\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.deleteSale = this.deleteSale.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    // yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals,\r\n        startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  deleteSale (e) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_sale(e.target.value),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals} deleteSale={this.deleteSale}/>\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n  // auth\r\n  // checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleList);","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          <th>Клад/груз</th>\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td>\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td>\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'rama_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday, jsDateTimeToStrDate } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/kladman/DailyRep';\r\nimport { DayFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n\r\n      date: ''\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date: getToday(), rama: this.props.ramaToSee.id});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee,\r\n        date: getToday()\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total, });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({rama: this.props.ramaToSee.id, date: this.state.date});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0 '>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <DayFilter date={this.state.date} setData={this.setData} showResults={this.showResults} />\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  ramaToSee: state.auth.ramaToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyRepContainer);","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/kladman/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_CASH_RECORDS_LIST,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.records,\r\n        total: initData.total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_CASH_RECORDS_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.records, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nexport function ResawInput (props) {\r\n  const { lumber, quantity, setLumber, pineBrus, pineDoska, larchBrus, larchDoska, label, lumber_input_label } = props\r\n  let lumber_input_quantity_label = lumber_input_label + \"_quantity\"\r\n\r\n  return (\r\n    <div className=''>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        {label}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber} \r\n        onChange={setLumber}\r\n        name={lumber_input_label}\r\n        defaultValue={null}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска сосна\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска лиственница\">\r\n          {larchDoska.map(ld =>\r\n            <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n      </Select>\r\n      <TextField \r\n        className='mt-3'\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='Количество'\r\n        type='number'\r\n        name={lumber_input_quantity_label}\r\n        onChange={setLumber}\r\n        value={quantity}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport function CreatedResaw (props) {\r\n  const { resaw, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {resaw &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {resaw.created_at}</p>\r\n            \r\n            <p className={rowClass}>Перепелили: {resaw.lumber_in_quantity}шт {resaw.lumber_in} </p>\r\n            <p className={rowClass}>Получили: {resaw.lumber_out_quantity}шт {resaw.lumber_out} </p>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawToCreate (props) {\r\n  const { resaw, saveData, back, lumbers } = props\r\n  let lumberIn = getObjectbyId(lumbers, resaw.lumber_in)\r\n  let lumberOut = getObjectbyId(lumbers, resaw.lumber_out)\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {resaw &&\r\n          <div className=''>\r\n            <p className={rowClass}>Перепиливаем : {lumberIn.name} {resaw.lumber_in_quantity} шт</p>\r\n            <p className={rowClass}>Получаем : {lumberOut.name} {resaw.lumber_out_quantity} шт</p>\r\n            {/* <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p> */}\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport {  ResawToCreate, CreatedResaw, ResawInput }  from '../../components/kladman/Resaw';\r\n\r\n\r\nexport class ResawContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      \r\n      lumber_in: null,\r\n      lumber_in_quantity: null,\r\n      lumber_out: null,\r\n      lumber_out_quantity: null,\r\n\r\n      createdResaw: null,\r\n      dataToSave: null,\r\n    }\r\n\r\n    this.setLumber = this.setLumber.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  setLumber (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  preSave () {\r\n    const { lumber_in, lumber_in_quantity, lumber_out, lumber_out_quantity } = this.state\r\n    \r\n    let data = {\r\n      lumber_in: lumber_in,\r\n      lumber_in_quantity: lumber_in_quantity,\r\n      lumber_out: lumber_out,\r\n      lumber_out_quantity: lumber_out_quantity,\r\n    }\r\n    console.log(data)\r\n\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_RESAW_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdResaw: response.data.created });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { createdResaw, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdResaw \r\n          ? <CreatedResaw resaw={createdResaw} message={message}/>\r\n          : dataToSave\r\n            ? <ResawToCreate resaw={dataToSave} saveData={this.saveData} back={this.back} \r\n                lumbers={this.state.lumbers}/>\r\n            : <div className='card card-style mt-3'>\r\n                <div className='content'>\r\n                  <ResawInput \r\n                    lumber={this.state.lumber_in}\r\n                    quantity={this.state.lumber_in_quantity}\r\n                    setLumber={this.setLumber}\r\n                    pineBrus={this.state.pineBrus}\r\n                    pineDoska={this.state.pineDoska}\r\n                    larchBrus={this.state.larchBrus}\r\n                    larchDoska={this.state.larchDoska}\r\n\r\n                    label={'Что перепиливаем?'}\r\n                    lumber_input_label={'lumber_in'}\r\n                  />\r\n                  <div className='mt-3'>\r\n                    <ResawInput \r\n                      lumber={this.state.lumber_out}\r\n                      quantity={this.state.lumber_out_quantity}\r\n                      setLumber={this.setLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchBrus={this.state.larchBrus}\r\n                      larchDoska={this.state.larchDoska}\r\n\r\n                      label={'Что получаем?'}\r\n                      lumber_input_label={'lumber_out'}\r\n                    />\r\n                  </div>\r\n                  <button className='btn btn-l bg-highlight mt-3' onClick={this.preSave}>\r\n                    Далее\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function requireAuthentication(Component, groups) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n          \r\n          if (this.props.isLoggedIn) {\r\n            if (groups.includes('manager') && user.is_manager)\r\n              access = true\r\n\r\n            if (groups.includes('boss') && user.is_boss)\r\n              access = true\r\n\r\n            if (groups.includes('capo') && user.is_capo)\r\n              access = true\r\n\r\n            if (groups.includes('seller') && user.is_seller)\r\n              access = true\r\n            \r\n            if (groups.includes('is_ramshik') && user.is_ramshik)\r\n              access = true\r\n          }\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? access\r\n                  ? <Component {...this.props} />\r\n                  : <h4 className='text-center my-5'>Нет прав</h4>\r\n                : <Redirect to={'/'}/>\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport ManagerStock from './containers/manager/Stock';\r\nimport { IncomeTimberCreateContainer } from './containers/manager/CreateIncome';\r\nimport { QuotaOverview } from './containers/manager/Quotas';\r\n\r\nimport { ShiftCreateComponent } from './containers/manager/CreateShift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikOverView } from './containers/ramshik/OverView';\r\n\r\nimport { SaleCalcContainer } from './containers/manager/SaleCalc';\r\nimport  SaleCreateCommonContainer from './containers/manager/SaleCreateCommon';\r\nimport SaleList from './containers/manager/SaleList';\r\nimport DailyRepContainer from './containers/manager/DailyRep';\r\nimport { ExpensesContainer } from './containers/manager/Expenses';\r\nimport { ResawContainer } from './containers/manager/Resaw';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager and kladman views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, ['manager', 'boss', 'capo'])} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, ['manager', 'boss', 'capo'])} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['manager'])} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, ['manager'])} />\r\n              <Route exact path=\"/manager/sales/calc/\" \r\n                component={requireAuthentication(SaleCalcContainer, ['manager', 'boss', 'capo', 'seller'])} />\r\n              <Route exact path=\"/manager/expenses/\" \r\n                component={requireAuthentication(ExpensesContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/daily_report/\" \r\n                component={requireAuthentication(DailyRepContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/resaws/create/\" \r\n                component={requireAuthentication(ResawContainer, ['manager', 'boss', 'capo',])} />\r\n\r\n              {/* manager only */}\r\n              <Route exact path=\"/manager/rawstock/create_income/\" \r\n                component={requireAuthentication(IncomeTimberCreateContainer, ['manager', 'boss', 'capo',])} />\r\n              <Route exact path=\"/manager/quotas/overview/\" \r\n                component={requireAuthentication(QuotaOverview, ['manager', 'boss', 'capo',])} />\r\n\r\n              {/* ramshik views */}\r\n              {/* <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['is_senior_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, ['is_ramshik'])} />\r\n              {/* <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, ['is_ramshik'])} /> */}\r\n              <Route exact path=\"/ramshik/main/\" \r\n              component={requireAuthentication(RamshikOverView, ['is_ramshik'])} />\r\n\r\n              {/* kladman views */}\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}