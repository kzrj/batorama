{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","containers/manager/RamshikPayments.js","containers/manager/Shifts.js","components/utils.js","containers/manager/Stock.js","components/ShiftCreateComponent.js","containers/ramshik/Shift.js","containers/ramshik/ShiftList.js","containers/ramshik/Payouts.js","components/kladman/SaleCalc.js","containers/kladman/SaleCalc.js","components/kladman/SaleCommon.js","containers/kladman/SaleCreateCommon.js","containers/manager/SaleList.js","components/kladman/Expenses.js","containers/kladman/Expenses.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","RAMSHIK_SHIFT_CREATE_DATA","RAMSHIK_SHIFT_CREATE","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_SALE_LIST","KLADMAN_SALE_INIT_DATA","KLADMAN_SALE_INIT_DATA_CHINA","KLADMAN_SALE_CREATE","KLADMAN_SALE_CALC_DATA","KLADMAN_EXPENSE_CREATE","KLADMAN_EXPENSE_LIST","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","MenuItem","history","useHistory","onClick","push","to","style","title","AfterLogin","logout","is_ramshik","is_senior_ramshik","is_manager","is_kladman","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","Header","modalOpen","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","map","value","LastOperations","lastOperations","length","lineHeight","op","created_at","record_type","employee","amount","RamshikPayments","employees","activeEmployee","last_payouts","payout","get","res","initData","setState","formData","FormData","id","method","url","headers","errorObj","statusText","JSON","stringify","property","parseErrorData","nickname","cash","onChange","e","target","ShiftsTable","shiftList","shift","date","lumber_records","lumber","quantity","volume","rate","emp","employee_cash","toFixed","cash_per_employee","ManagerShiftList","results","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","TrRow","showNull","changeMarketCost","show","current_stock_quantity","wood_species","woodSpeciesClass","current_stock_volume","market_cost","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","LumberTable","lumber_record","employee_rate","total_cash","ShiftToSave","saveData","back","rowClass","note","raw_records","employeesData","CreatedShift","back_calc_volume","back_calc_cash","back_calc_cash_per_employee","EmployeesBlock","activeEmployees","addEmployee","includes","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","dataToSave","calcRow","calcRowAndTotal","calcTotalVolume","calcTotalCash","preSave","qnty","moreThan10","volume_total","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","eIds","shift_type","RamshikShiftList","RamshikPayouts","ramshik","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","variant","price","LumbersToSale","setLumberID","pineBrus","pineDoska","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","lumberRef","useRef","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","pb","pd","calcType","china_volume","SaleCalcContainer","lumberToSale","lumbersToSale","addLumberToSale","calcTotal","pine_brus_lumbers","pine_doska_lumbers","lumberData","parseFloat","round_volume","setRamaPrice","selling_price","selling_total_cash","rama_price","calc_type","SaleCheckList","loader","setAddParams","seller","bonus_kladman_label","sellers","client","delivery_fee","china_vira","setChinaVira","FormControl","s","FormControlLabel","control","Checkbox","color","LumbersTable","CreatedSale","sale","seller_fee","loader_fee","kladman_fee","SaleCommonToCreate","bonus_kladman","deliveryFee","sale_cash","SaleCreateCommonContainer","larchBrus","createdSale","larch_brus_lumbers","kladman_id","SalesTable","sales","totals","sale_type","seller_name","add_expenses","total_selling_cash","total_seller_fee","total_loader_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","date_after","ExpensesList","expenses","expense","CreateExpense","useState","setCount","setNote","createExpense","ExpensesContainer","total","created_at_after","createdExpense","requireAuthentication","AuthenticatedComponent","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.e10a04a0.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    // ramshik api\r\n    RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n\r\n    // kladman api\r\n    KLADMAN_SALE_INIT_DATA: `${apiUrl}/kladman/sales/create/init_data/`,\r\n    KLADMAN_SALE_INIT_DATA_CHINA: `${apiUrl}/kladman/sales/create/init_data_china/`,\r\n    KLADMAN_SALE_CREATE: `${apiUrl}/kladman/sales/create/`,\r\n    KLADMAN_SALE_CALC_DATA: `${apiUrl}/kladman/sales/calc_data/`,\r\n\r\n    KLADMAN_EXPENSE_CREATE: `${apiUrl}/kladman/cash_records/create_expense/`,\r\n    KLADMAN_EXPENSE_LIST: `${apiUrl}/kladman/cash_records/list/`,\r\n    // MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n"," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nfunction MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-0 my-1 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        // 'width': '510px',\r\n        // 'height': '100px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1.5em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <p>{props.title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, logout } = props\r\n  return (\r\n    user.is_ramshik ? \r\n      <div className=' '>\r\n        {/* <MenuItem title={'Смены список'} to={'/ramshik/shift/list/'}/> */}\r\n        {user.is_senior_ramshik &&\r\n          <MenuItem title={'Сдать смену'} to={'/ramshik/shift/create_shift/'}/>}\r\n        <MenuItem title={'Баланс и расчеты'} to={'/ramshik/payouts/'}/>\r\n      </div>\r\n    : user.is_manager ?\r\n      <div className=' '>\r\n        {/* <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n        <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>\r\n        <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/> */}\r\n        <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        {/* <MenuItem title={'Сдать смену'} to={'/manager/shift/create_shift/'}/> */}\r\n        <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n        <MenuItem title={'Калькулятор продавца'} to={'/manager/sales/calc/'}/>\r\n        <MenuItem title={'Расходы'} to={'/kladman/carh_records/create_expense/'}/>\r\n      </div>\r\n    : user.is_kladman && \r\n      <div className=' '>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/kladman/stock/'}/>\r\n        <MenuItem title={'Создать продажу'} to={'/kladman/sales/create_sale/'}/>\r\n        <MenuItem title={'Продажи список'} to={'/kladman/sale_list/'}/>\r\n        <MenuItem title={'Смены список'} to={'/kladman/shift_list/'}/>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>Рама</h4>\r\n      <button className='btn btn-sx bg-red1-light' onClick={handleClickLogout}>\r\n        выйти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.EMPLOYEE_PAYOUT_INIT_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className='d-flex justify-content-start'>\r\n              {employees.length > 0 &&\r\n                <table className='table table-sm table-responsive w-75 mr-2'>\r\n                  <thead>\r\n                    <th>рамщик</th>\r\n                    <th>баланс</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {employees.map(employee => \r\n                      <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                        onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                        <td>{employee.nickname}</td>\r\n                        <td>{employee.cash} р</td>\r\n                      </tr>\r\n                      )}\r\n                  </tbody>\r\n                </table>\r\n              }\r\n              {activeEmployee && \r\n                <div>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <TextField type='number' className='my-1' value={amount}\r\n                    onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                  <button className='d-block btn btn-m bg-green2-light mt-2'\r\n                    onClick={this.payout}>\r\n                    Выдать\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function ShiftsTable (props) {\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата</th>\r\n        <th>Пиломат</th>\r\n        <th>Общий обьем</th>\r\n        <th>Рамщики</th>\r\n        <th>за работу общ/на чела</th>\r\n      </thead>\r\n      <tbody>\r\n        {props.shiftList.map(shift => \r\n          <tr>\r\n            <td>{shift.date}</td>\r\n            <td>\r\n              {shift.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '16px'}}>\r\n                  <span className='mr-1 d-block'>{lumber.lumber}</span>\r\n                  <span className='mr-1'>{lumber.quantity}шт</span>\r\n                  <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=''>{lumber.rate}р</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td>{shift.volume}м3</td>\r\n            <td>\r\n              {/* <span className='d-block'>{shift.initiator}</span> */}\r\n              {shift.employees.length > 0 && shift.employees.map(emp =>\r\n                <span className='d-block'>{emp}</span>\r\n                )}\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{shift.employee_cash.toFixed(0)}р </span>\r\n              <span> {shift.cash_per_employee.toFixed(0)}р</span>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport default class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.getList = this.getList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SHIFT_LIST,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results });\r\n    })\r\n  }\r\n\r\n  // getList () {\r\n  //   const { activeEmployee, amount } = this.state\r\n  //   const token = localStorage.getItem('token');\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"employee\", activeEmployee.id);\r\n  //   formData.append(\"amount\", amount);\r\n        \r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: endpoints.EMPLOYEE_PAYOUT,\r\n  //     data: formData,\r\n  //     headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n  //   })\r\n  //   .then(response => {\r\n  //     this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n  //       activeEmployee: null, last_payouts: response.data.last_payouts\r\n  //     });\r\n  //   })\r\n  //   .catch(err => {\r\n  //       const error = new Error(err);\r\n  //       error.data = parseErrorData(err);\r\n  //       this.setState({ message: 'Ошибка' });\r\n  //       throw error;\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(3)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          <TextField type='number' \r\n            className=''\r\n            value={lumber.market_cost > 0 && lumber.market_cost} \r\n            onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_STOCK,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.lumber}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume} м3</td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) ? 'bg-green2-light' + empClass : 'bg-dark1-dark' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.RAMSHIK_SHIFT_CREATE_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    if (moreThan10 && lumber.employee_rate == 600) rate = 650\r\n    if (!moreThan10 && lumber.employee_rate == 650) rate = 600\r\n    if (!moreThan10 && lumber.employee_rate == 600) rate = lumber.employee_rate\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.RAMSHIK_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave} \r\n      = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                    <h2>Смена</h2>\r\n                    {lumbers.length > 0 &&\r\n                      <table className='table table-sm table-responsive text-center' \r\n                        style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n                        <thead>\r\n                          <th>Изделие</th>\r\n                          <th>Кол-во</th>\r\n                          <th>Обьем</th>\r\n                          <th>Ставка</th>\r\n                          <th>Сумма</th>\r\n                        </thead>\r\n                        <tbody>\r\n                        {lumbers.map((lumber, key) => \r\n                          <tr key={key}>\r\n                            <td>{lumber.name} {lumber.wood_species}</td>\r\n                            <td className='w-25'>\r\n                              <input style={{'color': '#6c6c6c'}}\r\n                              type='number' className='w-75' onChange={(e) => this.calcRowAndTotal(e, lumber)} \r\n                              value={lumber.quantity > 0 && lumber.quantity}/>\r\n                            </td>\r\n                            <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n                            <td>{lumber.employee_rate} руб</td>\r\n                            <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n                          </tr>\r\n                          )}\r\n                          <tr>\r\n                            <td>Итого</td>\r\n                            <td className='w-25'>\r\n                              -\r\n                            </td>\r\n                            <td>\r\n                              <span className='font-17 font-600'>\r\n                                {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n                              </span>\r\n                            </td>\r\n                            <td>-</td>\r\n                            <td>\r\n                              <span className='font-17 font-600'>\r\n                                {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftsTable } from '../manager/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены  ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nexport class RamshikPayouts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n            \r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, label } = props\r\n  return (\r\n    <div className='my-2'>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.price > 0 && lumber.price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.total_cash > 0 && lumber.total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calcType === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              Точный счет\r\n            </button>\r\n            <button className={lumber.calcType === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              Округленный счет\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calcType === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calcType === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Точный счет'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />\r\n          }\r\n          {lumber.calcType === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Округленный счет'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n          {lumber.calcType === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale } from '../../components/kladman/SaleCalc';\r\n\r\n\r\nexport class SaleCalcContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      lumberToSale: null,\r\n      lumbersToSale: [],\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_CALC_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, calcType: 'exact' }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.total_cash = (lumber.volume_total * lumber.price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.price = 0\r\n    }\r\n\r\n    lumber.calcType = calcType\r\n    lumber.total_cash = lumber.volume_total * lumber.price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash } = this.state\r\n    return (\r\n      <div className=''>\r\n        <div className='content'>\r\n          <h3>Калькулятор</h3> \r\n          {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n            <LumbersToSale \r\n              lumber={lumber} \r\n              setLumberID={this.setLumberID} \r\n\r\n              calcRowQnty={this.calcRowQnty}\r\n              calcRowCash={this.calcRowCash}\r\n              calcRowVolume={this.calcRowVolume}\r\n\r\n              calcRoundRowQnty={this.calcRoundRowQnty}\r\n              calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n              calcChinaRowQnty={this.calcChinaRowQnty}\r\n              calcChinaRowVolume={this.calcChinaRowVolume}\r\n              \r\n              turnCalc={this.turnCalc}\r\n              delLumber={this.delLumber}\r\n              pineBrus={this.state.pineBrus}\r\n              pineDoska={this.state.pineDoska}\r\n            />\r\n          )}\r\n          <div className='d-flex justify-content-center'>\r\n            <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n              Добавить пиломатериал\r\n            </button>\r\n          </div>\r\n          {totalCash > 0 &&\r\n            <div className='card card-style mt-2'>\r\n              <div className='content d-flex justify-content-between mb-2 '>\r\n                <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-3'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3 опт'\r\n          type='number'\r\n          onChange={(e) => setRamaPrice(e, lumber.id)}\r\n          value={lumber.rama_price > 0 && lumber.rama_price}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice }\r\n     = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              Точный счет\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              Округленный счет\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Точный счет'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Округленный счет'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { loader, setAddParams, seller, bonus_kladman_label, sellers, client, delivery_fee, china_vira,\r\n    setChinaVira, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            defaultValue={null}\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={loader}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='loader'\r\n            />\r\n          }\r\n          label=\"Грузчик\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={bonus_kladman_label}\r\n              onChange={setAddParams}\r\n              color=\"blue2\"\r\n              name='bonus_kladman_label'\r\n            />\r\n          }\r\n          label=\"Склад бонус\"\r\n        />\r\n      </div>  \r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n        {/* <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Вира(китай)'\r\n            type='number'\r\n            name='china_vira'\r\n            onChange={setChinaVira}\r\n            value={china_vira > 0 && china_vira}/> */}\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-2'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            {/* {sale.china_vira && <p className={rowClass}>Вира(китай): {sale.china_vira + 'рублей'}</p>} */}\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/kladman/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.turnCalc = this.turnCalc.bind(this);\r\n\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowVolume = this.calcRowVolume.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    \r\n    this.calcRoundRowQnty = this.calcRoundRowQnty.bind(this);\r\n    this.calcRoundRowVolume = this.calcRoundRowVolume.bind(this);\r\n\r\n    this.calcChinaRowQnty = this.calcChinaRowQnty.bind(this);\r\n    this.calcChinaRowVolume = this.calcChinaRowVolume.bind(this);\r\n\r\n    this.setRamaPrice = this.setRamaPrice.bind(this);\r\n\r\n    this.setAddParams = this.setAddParams.bind(this);\r\n    this.setChinaVira = this.setChinaVira.bind(this);\r\n\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.delLumber = this.delLumber.bind(this);\r\n\r\n    this.saveData = this.saveData.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRamaPrice (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc (id, calcType) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = lumber.volume_total * lumber.selling_price\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber (id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams(e) {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira (e) {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale \r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setRamaPrice={this.setRamaPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { parseErrorData, createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        {/* <th>Обьем</th> */}\r\n        <th>Сумма</th>\r\n        <th>Продавeц</th>\r\n        {/* <th>Сумма рамы</th> */}\r\n        <th>грузчик</th>\r\n        <th>кладмэн</th>\r\n        <th>Доставка</th>\r\n        <th className='text-nowrap'>Доп. расходы</th>\r\n        {/* <th>Чистая прибыль</th> */}\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  {/* <span className='mr-1'>{lumber.quantity}шт</span> */}\r\n                  {/* <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=' d-block'>{lumber.selling_price}р</span> */}\r\n                </span>\r\n                )}\r\n            </td>\r\n            {/* <td>{sale.volume}</td> */}\r\n            <td>\r\n              {sale.selling_total_cash}\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              <span className='d-block'>{sale.seller_fee}</span>\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            {/* <td>\r\n              {sale.rama_total_cash}\r\n            </td> */}\r\n            <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              {sale.add_expenses}\r\n            </td>\r\n            {/* <td>\r\n              {sale.net_rama_cash}\r\n            </td> */}\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          {/* <td>{totals.total_volume} </td> */}\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>{totals.total_seller_fee}</td>\r\n          {/* <td>{totals.total_rama_cash}</td> */}\r\n          <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td>\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n          {/* <td>{totals.total_net_rama_cash}</td> */}\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date_after: getToday()});\r\n    // const params = {}\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_LIST,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals}/>\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/kladman/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n    this.createExpense = this.createExpense.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_EXPENSE_LIST,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.results,\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense (expense) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.expenses, total: response.data.total });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\n\r\nexport default function requireAuthentication(Component, group) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n        //   if (this.props.isLoggedIn === true && (ws_numbers.includes(this.props.user.workshop_number) || \r\n        //     this.props.user.is_officer)) access = true\r\n        \r\n          if (this.props.isLoggedIn === true && !group) access = true\r\n          if (this.props.isLoggedIn && group === 'manager' && user.is_manager) access = true\r\n          if (this.props.isLoggedIn && group === 'senior_ramshik' && user.is_senior_ramshik) access = true\r\n          if (this.props.isLoggedIn && group === 'kladman' && user.is_kladman) access = true\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? <Component {...this.props} />\r\n                : null\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport { ManagerStock } from './containers/manager/Stock';\r\n\r\nimport { ShiftCreateComponent } from './containers/ramshik/Shift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikPayouts } from './containers/ramshik/Payouts';\r\n\r\nimport { SaleCalcContainer } from './containers/kladman/SaleCalc';\r\nimport { SaleCreateCommonContainer } from './containers/kladman/SaleCreateCommon';\r\nimport { SaleList } from './containers/manager/SaleList';\r\nimport { ExpensesContainer } from './containers/kladman/Expenses';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, 'manager')} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'manager')} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, 'manager')} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, 'manager')} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, 'manager')} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, 'manager')} />\r\n              <Route exact path=\"/manager/sales/calc/\" \r\n                component={requireAuthentication(SaleCalcContainer, 'manager')} />\r\n              \r\n\r\n              {/* ramshik views */}\r\n              <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, 'is_senior_ramshik')} />\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, 'is_ramshik')} />\r\n              <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, 'is_ramshik')} />     \r\n\r\n              {/* kladman views */}\r\n              <Route exact path=\"/kladman/stock/\" \r\n                component={requireAuthentication(ManagerStock, 'kladman')} />\r\n              <Route exact path=\"/kladman/sale_list/\" \r\n                component={requireAuthentication(SaleList, 'kladman')} />\r\n              <Route exact path=\"/kladman/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'kladman')} />\r\n              <Route exact path=\"/kladman/carh_records/create_expense/\" \r\n                component={requireAuthentication(ExpensesContainer, 'manager')} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}