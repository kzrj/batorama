{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","containers/manager/RamshikPayments.js","redux/api/utils.js","containers/manager/Shifts.js","components/utils.js","containers/manager/Stock.js","components/ShiftCreateComponent.js","containers/ramshik/Shift.js","containers/ramshik/ShiftList.js","containers/ramshik/Payouts.js","components/kladman/SaleCreate.js","containers/kladman/SaleCreate.js","components/kladman/SaleCreateSchema1.js","containers/kladman/SaleCreateSchema1.js","containers/manager/SaleList.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","RAMSHIK_SHIFT_CREATE_DATA","RAMSHIK_SHIFT_CREATE","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_SALE_LIST","KLADMAN_SALE_INIT_DATA","KLADMAN_SALE_CREATE","KLADMAN_SALE_SCHEMA1_CREATE","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","MenuItem","history","useHistory","onClick","push","to","style","title","AfterLogin","logout","is_ramshik","is_senior_ramshik","is_manager","is_kladman","reduxForm","validate","values","errors","forEach","field","Main","login","bind","this","CircularProgress","Component","connect","routing","loginForm","dispatch","HeaderComp","histoty","Header","modalOpen","LastOperations","lastOperations","length","lineHeight","map","op","created_at","record_type","employee","amount","RamshikPayments","employees","activeEmployee","last_payouts","payout","get","res","initData","setState","formData","FormData","append","id","method","url","headers","errorObj","statusText","JSON","stringify","property","parseErrorData","nickname","cash","value","onChange","e","target","ShiftsTable","shiftList","shift","date","lumber_records","lumber","quantity","volume","rate","emp","employee_cash","toFixed","cash_per_employee","ManagerShiftList","results","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","replaceItemInDictArrayById","itemInList","index","slice","TrRow","showNull","changeMarketCost","show","current_stock_quantity","wood_species","woodSpeciesClass","current_stock_volume","market_cost","stock_total_cash","ManagerStock","lumbers","lumberId","parseInt","totalVolume","totalCash","Switch","checked","LumberTable","lumber_record","employee_rate","total_cash","ShiftToSave","saveData","back","rowClass","note","raw_records","employeesData","CreatedShift","back_calc_volume","back_calc_cash","back_calc_cash_per_employee","EmployeesBlock","activeEmployees","addEmployee","includes","aEmp","ShiftCreateComponent","initLumbers","totaCash","createdShift","dataToSave","calcRow","calcRowAndTotal","calcTotalVolume","calcTotalCash","preSave","qnty","moreThan10","volume_total","totalVolumeVar","totalCashVar","calcLumber","lmbr","idx","arr","alreadyIn","i","splice","toggleArrayDictById","eIds","shift_type","key","RamshikShiftList","RamshikPayouts","ramshik","LumbersTable","SaleToCreate","sale","console","log","add_expenses","CreatedSale","AddNote","useState","open","setOpen","setNote","rowsMax","variant","LumberToSale","setLumberID","calcRowQnty","calcRowCash","setRowCash","pineBrus","larchBrus","pineDoska","larchDoska","InputLabel","htmlFor","Select","native","defaultValue","data-id","aria-label","pb","lb","pd","ld","AddExpensesComp","setAddExpenses","addExpenses","SaleCreateComponent","lumbersToSale","createdSale","setData","addLumberToSale","calcTotal","pine_brus_lumbers","larch_brus_lumbers","pine_doska_lumbers","larch_doska_lumbers","lumberData","parseFloat","clear","selling_price","selling_total_cash","SaleSchema1ToCreate","sellers","seller","sale_cash","loader","bonus_kladman","deliveryFee","seller_fee","rama_total_cash","loader_fee","kladman_fee","delivery_fee","net_rama_cash","calcRowRamaCash","rama_price","market_place","DeliveryFeeComp","setDeliveryFee","createMuiTheme","palette","blue1","light","main","dark","contrastText","blue2","Schema1CheckList","checkLoader","bonusKladman","FormControlLabel","control","Checkbox","color","FormControl","s","SaleCreateSchema1Container","kladmanId","kladman_id","SalesTable","sales","SaleList","saleList","requireAuthentication","AuthenticatedComponent","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.5de3a202.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  signupRequest: ['data'],\n  signupSuccess: ['user'],\n  signupFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  resetAuthErrors: null,\n\n  restorePasswordRequest: ['data'],\n  restorePasswordSuccess: null,\n  restorePasswordFailure: ['error'],\n\n  toggleModal: ['isAuthModalOpen'],\n  \n  checkAuthRequest: ['payload'],\n  checkAuthSuccess: ['payload'],\n  checkAuthFail: null\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// register request\nexport const signUpRequest = (state, { data }) =>\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\n\n// register success\nexport const signUpSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\n}\n\n// register fail\nexport const signUpFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n  \n\n// logout success\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\n// logout fail\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\nexport const resetAuthErrors = (state) => {\n  return state.merge({ fetching: false, error: null })\n}\n\n// auth modal toggle \n\nexport const toggleModal = (state, { isAuthModalOpen }) => {\n  return state.merge({ isAuthModalOpen, error: null })\n}\n  \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\nexport const checkAuthSuccess = (state, { payload }) => {\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  [Types.SIGNUP_REQUEST]: signUpRequest,\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\n  [Types.SIGNUP_FAILURE]: signUpFailure,\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  [Types.TOGGLE_MODAL]: toggleModal,\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\n})\n","export const url = 'http://35.222.169.29';\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    // ramshik api\r\n    RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n\r\n    // kladman api\r\n    KLADMAN_SALE_INIT_DATA: `${apiUrl}/kladman/sales/create/init_data/`,\r\n    KLADMAN_SALE_CREATE: `${apiUrl}/kladman/sales/create/`,\r\n    KLADMAN_SALE_SCHEMA1_CREATE: `${apiUrl}/kladman/sales/create_schema1/`,\r\n    // MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n}","// @flow\n\nimport axios from 'axios';\nimport endpoints from './endpoints';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        return { user: response.data.user }\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n  }\n\n  const signUp = (payload: { email: string, phone: string}) => {\n    const { email, phone } = payload;\n    return axios.post(endpoints.SIGNUP, { email, phone })\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\n      })\n  }\n\n  const checkAuth = (payload: string ) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Нет доступа')\n    }\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\n      .then(({ data }) => {\n        const { user } = data;\n        const { group } = user;\n\n        // TODO - in response group is number (id), must be a string\n        if (payload.indexOf(group) === -1) {\n          throw new Error('Нет доступа')\n        }\n        return user\n      })\n      .catch(err => {\n        throw new Error(err.message)\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    signUp,\n    checkAuth\n  }\n}\n\nexport default {\n  create\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component, useState  } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// import { getToday } from '../utils';\r\n// import { ErrorOrMessage } from '../CommonComponents';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function renderSelectField ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  menuItemClass,\r\n  ...custom\r\n}) {\r\n\r\n  return (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n      // classes={{\r\n      //   root: itemClassF(input.value),\r\n      //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n      // }}\r\n    >\r\n      {options.map(option =>\r\n          <MenuItem value={option.value} \r\n            // classes={{\r\n            //   root: itemClassF(option.value),\r\n            //   // label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            // }}\r\n            >\r\n            {option.label}\r\n          </MenuItem>\r\n          )}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n  )\r\n}\r\n\r\nexport const renderChildrenSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      {...input}\r\n      {...custom}\r\n      fullWidth={true}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderChildrenSelectFieldStandard = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  options,\r\n  ...custom\r\n}) => (\r\n  \r\n  <FormControl className={formClass}>\r\n    <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n    <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n      <option aria-label=\"None\" value=\"\" />\r\n      <optgroup label=\"Category 1\">\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n      <optgroup label=\"Category 2\">\r\n        <option value={3}>Option 3</option>\r\n        <option value={4}>Option 4</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n        <option value={1}>Option 1</option>\r\n        <option value={2}>Option 2</option>\r\n      </optgroup>\r\n    </Select>\r\n  </FormControl>\r\n  // <FormControl error={touched && error} className={formClass} fullWidth={true}>\r\n  //   <InputLabel className={labelClass}>{label}</InputLabel>\r\n  //   <input\r\n  //     type='select'\r\n  //   >\r\n  //     {children}\r\n  //   </input>\r\n  //   {renderFromHelper({ touched, error })}\r\n  // </FormControl>\r\n)\r\n\r\nexport const renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nexport const renderSocials = ({ fields, meta: { error, submitFailed } }) => (\r\n  <div className=''>\r\n    <button className='btn btn-m mb-2 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2 text-wrap' type=\"button\" onClick={() => fields.push({})}>\r\n      Добавить пиломатериал\r\n    </button>\r\n    {submitFailed && error && <span>{error}</span>}\r\n\r\n  {fields.map((lumber, index) => (\r\n    <div key={index} >\r\n      <Field\r\n        name={`${lumber}.lumber`}\r\n        type=\"text\"\r\n        // formClass='mx-1 align-middle w-25'\r\n        component={renderChildrenSelectFieldStandard}\r\n        \r\n      >\r\n        <option className='font-10' value='vk' >\r\n          vk\r\n        </option>\r\n        <option className='font-10' value='inst'>instagram</option>\r\n        <option className='font-10' value='web'>web</option>\r\n      </Field>\r\n      \r\n      <Field\r\n        name={`${lumber}.quantity`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"количество\"\r\n        // style={{'width':'60%'}}\r\n        // placeholder='https://somewebsite.com'\r\n      />\r\n      <Field\r\n        name={`${lumber}.rate`}\r\n        type=\"number\"\r\n        component={renderTextField}\r\n        label=\"цена за 1м3\"\r\n      />\r\n\r\n      <p>asdasd{`${lumber}.quantity`}</p>\r\n\r\n      <span \r\n        className='btn btn-xxs ml-2 rounded-s font-900 shadow-s border-red2-dark bg-red2-light'\r\n        type=\"button\"\r\n        title=\"Remove Member\"\r\n        onClick={() => fields.remove(index)}>\r\n          X\r\n      </span>\r\n    </div>\r\n  ))}\r\n</div>\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nfunction MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-0 my-1 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        // 'width': '510px',\r\n        // 'height': '100px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1.5em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <p>{props.title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AfterLogin (props) {\r\n  const { user, logout } = props\r\n  return (\r\n    user.is_ramshik ? \r\n      <div className=' '>\r\n        <MenuItem title={'Смены список'} to={'/ramshik/shift/list/'}/>\r\n        {user.is_senior_ramshik &&\r\n          <MenuItem title={'Сдать смену'} to={'/ramshik/shift/create_shift/'}/>}\r\n        <MenuItem title={'Баланс и расчеты'} to={'/ramshik/payouts/'}/>\r\n      </div>\r\n    : user.is_manager ?\r\n      <div className=' '>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n        <MenuItem title={'Расчет рамщиков'} to={'/manager/ramshik_payments/'}/>\r\n        <MenuItem title={'Смены список'} to={'/manager/shift_list/'}/>\r\n        <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n        <MenuItem title={'Сдать смену'} to={'/manager/shift/create_shift/'}/>\r\n        <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n        <MenuItem title={'Создать схема1 продажу'} to={'/manager/sales/create_sale_schema1/'}/>\r\n      </div>\r\n    : user.is_kladman && \r\n      <div className=' '>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/kladman/stock/'}/>\r\n        <MenuItem title={'Создать продажу'} to={'/kladman/sales/create_sale/'}/>\r\n        <MenuItem title={'Продажи список'} to={'/kladman/sale_list/'}/>\r\n        <MenuItem title={'Смены список'} to={'/kladman/shift_list/'}/>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  login () {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.state.auth\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <AfterLogin user={user} logout={this.props.logout}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between align-items-baseline px-3 py-2'>\r\n      <h4 onClick={handleClickMenu}>Рама</h4>\r\n      <button className='btn btn-sx bg-red1-light' onClick={handleClickLogout}>\r\n        выйти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Сотрудник</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Обнал рамщику' : 'Зачисление рамщику со смены'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.payout = this.payout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.EMPLOYEE_PAYOUT_INIT_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout () {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет рамщиков</h4>\r\n            <div className='d-flex justify-content-start'>\r\n              {employees.length > 0 &&\r\n                <table className='table table-sm table-responsive w-75 mr-2'>\r\n                  <thead>\r\n                    <th>рамщик</th>\r\n                    <th>баланс</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {employees.map(employee => \r\n                      <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                        onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                        <td>{employee.nickname}</td>\r\n                        <td>{employee.cash} р</td>\r\n                      </tr>\r\n                      )}\r\n                  </tbody>\r\n                </table>\r\n              }\r\n              {activeEmployee && \r\n                <div>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <TextField type='number' className='my-1' value={amount}\r\n                    onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                  <button className='d-block btn btn-m bg-green2-light mt-2'\r\n                    onClick={this.payout}>\r\n                    Выдать\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function ShiftsTable (props) {\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата</th>\r\n        <th>Пиломат</th>\r\n        <th>Общий обьем</th>\r\n        <th>Рамщики</th>\r\n        <th>за работу общ/на чела</th>\r\n      </thead>\r\n      <tbody>\r\n        {props.shiftList.map(shift => \r\n          <tr>\r\n            <td>{shift.date}</td>\r\n            <td>\r\n              {shift.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '16px'}}>\r\n                  <span className='mr-1 d-block'>{lumber.lumber}</span>\r\n                  <span className='mr-1'>{lumber.quantity}шт</span>\r\n                  <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=''>{lumber.rate}р</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td>{shift.volume}м3</td>\r\n            <td>\r\n              {/* <span className='d-block'>{shift.initiator}</span> */}\r\n              {shift.employees.length > 0 && shift.employees.map(emp =>\r\n                <span className='d-block'>{emp}</span>\r\n                )}\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{shift.employee_cash.toFixed(0)}р </span>\r\n              <span> {shift.cash_per_employee.toFixed(0)}р</span>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport default class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n    // this.getList = this.getList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SHIFT_LIST,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results });\r\n    })\r\n  }\r\n\r\n  // getList () {\r\n  //   const { activeEmployee, amount } = this.state\r\n  //   const token = localStorage.getItem('token');\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"employee\", activeEmployee.id);\r\n  //   formData.append(\"amount\", amount);\r\n        \r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: endpoints.EMPLOYEE_PAYOUT,\r\n  //     data: formData,\r\n  //     headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n  //   })\r\n  //   .then(response => {\r\n  //     this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n  //       activeEmployee: null, last_payouts: response.data.last_payouts\r\n  //     });\r\n  //   })\r\n  //   .catch(err => {\r\n  //       const error = new Error(err);\r\n  //       error.data = parseErrorData(err);\r\n  //       this.setState({ message: 'Ошибка' });\r\n  //       throw error;\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(3)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          <TextField type='number' \r\n            className=''\r\n            value={lumber.market_cost > 0 && lumber.market_cost} \r\n            onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_STOCK,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n    lumber.market_cost = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.market_cost * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          ставка\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.lumber}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume} м3</td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.raw_records}/>\r\n\r\n            {shift.employeesData && shift.employeesData.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employeesData.map(emp => \r\n                  <p className='mb-0'>{emp.nickname}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Смена сохранена</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма за работу: {shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>\r\n              Сумма на одного человека: {shift.cash_per_employee.toFixed(1)}\r\n              ({shift.back_calc_cash_per_employee.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n            {shift.employees && shift.employees.length > 0 &&\r\n              <div>\r\n                <h5>Кто работал?</h5>\r\n                {shift.employees.map(emp => \r\n                  <p className='mb-0'>{emp}</p>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто работал? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) ? 'bg-green2-light' + empClass : 'bg-dark1-dark' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, toggleArrayDictById, lodashToggle } from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\nimport { ShiftToSave, CreatedShift, EmployeesBlock } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.calcRow = this.calcRow.bind(this);\r\n    this.calcRowAndTotal = this.calcRowAndTotal.bind(this);\r\n    this.calcTotalVolume = this.calcTotalVolume.bind(this)\r\n    this.calcTotalCash = this.calcTotalCash.bind(this)\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n    this.saveData = this.saveData.bind(this)\r\n    this.preSave = this.preSave.bind(this)\r\n    this.back = this.back.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.RAMSHIK_SHIFT_CREATE_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRow (lumber, qnty, moreThan10) {\r\n    let rate = lumber.employee_rate\r\n    if (moreThan10 && lumber.employee_rate == 600) rate = 650\r\n    if (!moreThan10 && lumber.employee_rate == 650) rate = 600\r\n    if (!moreThan10 && lumber.employee_rate == 600) rate = lumber.employee_rate\r\n\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume (lumbers) {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash (lumbers) {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal (e, lumber) {\r\n    let { lumbers } = this.state\r\n    let calcLumber = this.calcRow(lumber, e.target.value, false)\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n    if (totalVolume >= 10) {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, true)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    } else {\r\n      lumbers.map((lmbr, idx) => {\r\n        lumbers[idx] = this.calcRow(lmbr, lmbr.quantity, false)\r\n      })\r\n      totalVolume = this.calcTotalVolume(lumbers)\r\n    }\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee (employee) {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees } = this.state\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.RAMSHIK_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, employees, activeEmployees, message, createdShift, dataToSave} \r\n      = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                    <h2>Смена</h2>\r\n                    {lumbers.length > 0 &&\r\n                      <table className='table table-sm table-responsive text-center' \r\n                        style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n                        <thead>\r\n                          <th>Изделие</th>\r\n                          <th>Кол-во</th>\r\n                          <th>Обьем</th>\r\n                          <th>Ставка</th>\r\n                          <th>Сумма</th>\r\n                        </thead>\r\n                        <tbody>\r\n                        {lumbers.map((lumber, key) => \r\n                          <tr key={key}>\r\n                            <td>{lumber.name} {lumber.wood_species}</td>\r\n                            <td className='w-25'>\r\n                              <input style={{'color': '#6c6c6c'}}\r\n                              type='number' className='w-75' onChange={(e) => this.calcRowAndTotal(e, lumber)} \r\n                              value={lumber.quantity > 0 && lumber.quantity}/>\r\n                            </td>\r\n                            <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n                            <td>{lumber.employee_rate} руб</td>\r\n                            <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n                          </tr>\r\n                          )}\r\n                          <tr>\r\n                            <td>Итого</td>\r\n                            <td className='w-25'>\r\n                              -\r\n                            </td>\r\n                            <td>\r\n                              <span className='font-17 font-600'>\r\n                                {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n                              </span>\r\n                            </td>\r\n                            <td>-</td>\r\n                            <td>\r\n                              <span className='font-17 font-600'>\r\n                                {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { ShiftsTable } from '../manager/Shifts';\r\n\r\n\r\nexport class RamshikShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { shiftList } = this.state\r\n    if (shiftList.length === 0) \r\n      axios({\r\n        method: 'get',\r\n        url: endpoints.RAMSHIK_SHIFT_LIST,\r\n        headers: {'Authorization': `JWT ${token}` }\r\n      })\r\n      .then(response => {\r\n        this.setState({ ...this.state, shiftList: response.data.results });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { shiftList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Смены  ({shiftList.length})</h4>\r\n            {shiftList.length > 0 \r\n              ? <ShiftsTable shiftList={shiftList} />\r\n              : <h5>Нет смен</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\n\r\nimport { LastOperations } from '../manager/RamshikPayments';\r\n\r\n\r\nexport class RamshikPayouts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last_payouts: [],\r\n      ramshik: null,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RAMSHIK_PAYOUTS,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ ...this.state, ramshik: initData.ramshik, last_payouts: initData.last_payouts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ramshik, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Текущий баланс {ramshik && ramshik.cash +  ' руб'}</h4>\r\n            \r\n          </div>\r\n        </div>\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.lumber}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume} м3</td>\r\n          <td>{lumber_record.rate ||lumber_record.market_cost} руб</td>\r\n          <td>{lumber_record.total_cash || lumber_record.cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function SaleToCreate (props) {\r\n  const { sale, saveData, back } = props\r\n  console.log(sale)\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Сумма: {sale.cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Доп. расходы: {sale.add_expenses} рублей</p>\r\n            <p className={rowClass}>Примечание: {sale.note}</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)}  ({sale.back_calc_volume}) м3</p>\r\n            <p className={rowClass}>Сумма: {sale.cash.toFixed(1)} ({sale.back_calc_cash.toFixed(1)}) рублей</p>\r\n            <p className={rowClass}>Доп. расходы: {sale.add_expenses} рублей</p>\r\n            <p className={rowClass}>Примечание: {sale.note}</p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function AddNote (props) {\r\n  const [open, setOpen] = useState(false)\r\n  const { note, setNote } = props\r\n  return (\r\n    <div >\r\n      <p className='my-2 btn btn-sm bg-teal-light' onClick={() => setOpen(!open)}>Добавить примечание</p>\r\n      {open &&\r\n        <TextField type='textarea' value={note} name='note' onChange={setNote} multiline={true} rowsMax={5}\r\n          id=\"standard\" variant=\"outlined\" className='d-block'\r\n        />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function LumberToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, setRowCash, pineBrus, larchBrus, pineDoska,\r\n     larchDoska } = props\r\n  return (\r\n    <div className='mt-2 mb-3'>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска сосна\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска лиственница\">\r\n          {larchDoska.map(ld =>\r\n            <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n      <div className='mt-3'>\r\n        <div className='d-flex'>\r\n          <TextField \r\n            className='mr-2'\r\n            id=\"outlined-margin-dense\" \r\n            variant=\"outlined\" \r\n            label='Количество штук'\r\n            onChange={(e) => calcRowQnty(e, lumber.id)} type='number'\r\n            value={lumber.quantity > 0 && lumber.quantity}/>\r\n            \r\n          <TextField \r\n            className='ml-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Цена за 1м3'\r\n            onChange={(e) => calcRowCash(e, lumber.id)} type='number'\r\n            value={lumber.rate > 0 && lumber.rate}/>\r\n\r\n          <TextField \r\n            className='ml-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Сумма руб'\r\n            onChange={(e) => setRowCash(e, lumber.id)} type='number'\r\n            value={lumber.cash > 0 && lumber.cash}/>\r\n\r\n        </div>\r\n        <div className='d-flex justify-content-between mt-2'>\r\n          <p className='font-16 color-dark mb-0'>Объем: \r\n            <span className='font-500'> {lumber.volume_total + ' м3'}</span>\r\n          </p>\r\n        </div>\r\n      </div>}\r\n      {lumber.lumber > 0 && \r\n        <div className='divider divider-margins bg-highlight mt-2'></div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function AddExpensesComp (props) {\r\n  const { setAddExpenses, addExpenses } = props\r\n\r\n  return (\r\n    <div className='my-3'>\r\n      <TextField \r\n        className=''\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='доставка'\r\n        onChange={setAddExpenses} type='number'\r\n        value={addExpenses > 0 && addExpenses}/>\r\n    </div>\r\n  )\r\n} ","import axios from 'axios';\r\n\r\nimport React, { Component, useState  } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, lodashToggle, getObjectbyId } \r\n  from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { CreatedSale, AddNote, LumberToSale, AddExpensesComp, SaleToCreate } \r\n  from '../../components/kladman/SaleCreate';\r\n\r\n\r\nexport class SaleCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      lumbersToSale: [],\r\n      totalVolume: 0.0,\r\n      totaCash: 0,\r\n      note: '',\r\n      addExpenses: 0,\r\n\r\n      dataToSave: null,\r\n      \r\n      createdSale: null,\r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.setRowCash = this.setRowCash.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.setNote = this.setNote.bind(this);\r\n    this.setAddExpenses = this.setAddExpenses.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(endpoints.KLADMAN_SALE_INIT_DATA)\r\n      .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ \r\n          pineBrus: initData.pine_brus_lumbers,\r\n          larchBrus: initData.larch_brus_lumbers,\r\n          pineDoska: initData.pine_doska_lumbers,\r\n          larchDoska: initData.larch_doska_lumbers,\r\n          lumbers: initData.lumbers,\r\n         });\r\n      })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale, addExpenses } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.cash = (lumber.volume_total * lumber.rate).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale, addExpenses)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale, addExpenses } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rate =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.cash = (lumber.volume_total * lumber.rate).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale, addExpenses)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRowCash (e, id) {\r\n    let { lumbersToSale, addExpenses } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.cash =  e.target.value ? parseInt(e.target.value) : 0\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale, addExpenses)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers, addExpenses) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    totalCash += parseFloat(addExpenses)\r\n\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  setNote (e) {\r\n    this.setState({\r\n      note: e.target.value\r\n    })\r\n  }\r\n\r\n  setAddExpenses (e) {\r\n    let { lumbersToSale } = this.state\r\n    const addExpenses = e.target.value ? parseInt(e.target.value) : 0\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale, addExpenses)\r\n    this.setState({\r\n      addExpenses: addExpenses,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, totalCash, totalVolume, addExpenses, note } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      note: note,\r\n      add_expenses: addExpenses,\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      dataToSave: null,\r\n      lumbersToSale: [],\r\n      totalVolume: 0.0,\r\n      totaCash: 0,\r\n      note: '',\r\n      addExpenses: 0,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  render() {\r\n    const { lumbersToSale, createdSale, totalCash, totalVolume, note, addExpenses, dataToSave, message } \r\n      = this.state\r\n    return (\r\n      <div>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleToCreate sale={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div className='card card-style mb-1 mt-2 mx-1'>\r\n                <div className='content'>\r\n                  <div className='d-flex justify-content-between mb-2 text-center'>\r\n                    <h2>Что продаем?</h2>\r\n                    <button className='btn btn-sm bg-teal-light' onClick={this.clear}>Очистить </button>\r\n                  </div>\r\n                  \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumberToSale \r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      setRowCash={this.setRowCash}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                    Добавить пиломатериал\r\n                  </button>\r\n\r\n                  <AddExpensesComp addExpenses={addExpenses} setAddExpenses={this.setAddExpenses}/>\r\n                  \r\n                  {totalCash > 0 &&\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                      <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n                    </div>\r\n                  }\r\n                  <AddNote note={note} setNote={this.setData}/>\r\n                  {totalCash > 0 &&\r\n                    <button\r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n                        shadow-l mt-2'>\r\n                      Далее\r\n                    </button>\r\n                  }\r\n                </div>\r\n            </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { getObjectbyId } from '../utils';\r\n\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.lumber}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function SaleSchema1ToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            {/* <p className={rowClass}>Дата: {sale.date}</p> */}\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p>\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            <p className={rowClass}>Доп. расходы: {sale.add_expenses ? sale.add_expenses + 'рублей' : 'нет'}</p>\r\n            \r\n            <p className={rowClass}>Примечание: {sale.note}</p>\r\n\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            <p className={rowClass}>Сумма рамы (брутто): {sale.rama_total_cash.toFixed(1)}  рублей</p>\r\n            <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p>\r\n            <p className={rowClass}>Вознаграждение склада: {sale.kladman_fee} рублей</p>\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n            <p className={rowClass}>Доп. расходы: {sale.add_expenses} рублей</p>\r\n            <p className={rowClass}>Сумма рамы (нетто): {sale.net_rama_cash.toFixed(1)}  рублей</p>\r\n            \r\n            <p className={rowClass}>Примечание: {sale.note}</p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function AddNote (props) {\r\n  const [open, setOpen] = useState(false)\r\n  const { note, setNote } = props\r\n  return (\r\n    <div >\r\n      <p className='my-2 btn btn-sm bg-teal-light' onClick={() => setOpen(!open)}>Добавить примечание</p>\r\n      {open &&\r\n        <TextField type='textarea' value={note} name='note' onChange={setNote} multiline={true} rowsMax={5}\r\n          id=\"standard\" variant=\"outlined\" className='d-block'\r\n        />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function LumberToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, setRowCash, pineBrus, larchBrus, pineDoska,\r\n     larchDoska, calcRowRamaCash } = props\r\n  return (\r\n    <div className='mt-2 mb-3'>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        defaultValue={null}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска сосна\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска лиственница\">\r\n          {larchDoska.map(ld =>\r\n            <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n\r\n      </Select>\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-3'>\r\n          <div className='d-flex'>\r\n            <TextField \r\n              className='mr-2'\r\n              id=\"outlined-margin-dense\" \r\n              variant=\"outlined\" \r\n              label='Количество штук'\r\n              onChange={(e) => calcRowQnty(e, lumber.id)} type='number'\r\n              value={lumber.quantity > 0 && lumber.quantity}/>\r\n              \r\n            <TextField \r\n              className='ml-2'\r\n              id=\"outlined-margin-dense\"\r\n              variant=\"outlined\" \r\n              label='Цена за 1м3 (продали)'\r\n              onChange={(e) => calcRowCash(e, lumber.id)} type='number'\r\n              value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n\r\n            <TextField \r\n              className='ml-2'\r\n              id=\"outlined-margin-dense\"\r\n              variant=\"outlined\" \r\n              label='Сумма руб'\r\n              onChange={(e) => setRowCash(e, lumber.id)} type='number'\r\n              value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n          </div>\r\n          <div className='d-flex justify-content-between mt-2'>\r\n            <p className='font-16 color-dark mb-0'>Объем: \r\n              <span className='font-500'> {lumber.volume_total + ' м3'}</span>\r\n            </p>\r\n            <TextField \r\n              className='ml-2'\r\n              id=\"outlined-margin-dense\"\r\n              variant=\"outlined\" \r\n              label='Цена за 1м3 (Бато)'\r\n              onChange={(e) => calcRowRamaCash(e, lumber.id)} type='number'\r\n              value={lumber.rama_price > 0 && lumber.rama_price}\r\n              defaultValue={lumber.market_place}\r\n              />\r\n            <p className='font-16 color-dark mb-0'>Сумма рамы: \r\n              <span className='font-500'> {lumber.rama_total_cash > 0 && lumber.rama_total_cash + ' р'}</span>\r\n            </p>\r\n          </div>\r\n         \r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <div className='divider divider-margins bg-highlight mt-2'></div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function DeliveryFeeComp (props) {\r\n  const { setDeliveryFee, deliveryFee } = props\r\n\r\n  return (\r\n    <div className='my-1'>\r\n      <TextField \r\n        className=''\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='доставка'\r\n        onChange={setDeliveryFee} type='number'\r\n        value={deliveryFee > 0 && deliveryFee}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst azureTheme = createMuiTheme({\r\n  palette: {\r\n    blue1: {\r\n      light: '#4FC1E9',\r\n      main: '#3BAFDA',\r\n      dark: '#0b769d',\r\n      contrastText: '#fff',\r\n    },\r\n    blue2: {\r\n      light: '#5D9CEC',\r\n      main: '#4A89DC',\r\n      dark: '#1a64c6',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport function Schema1CheckList (props) {\r\n  const { loader, checkLoader, seller, bonusKladman, sellers } = props\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between mb-1 text-center'>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={loader}\r\n            onChange={checkLoader}\r\n            color=\"blue2\"\r\n            name='loader'\r\n          />\r\n        }\r\n        label=\"Грузчик\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={bonusKladman}\r\n            onChange={checkLoader}\r\n            color=\"blue2\"\r\n            name='bonusKladman'\r\n          />\r\n        }\r\n        label=\"Склад бонус\"\r\n      />\r\n      <FormControl  >\r\n        <InputLabel >Продавец</InputLabel>\r\n        <Select \r\n          native \r\n          defaultValue=\"\" \r\n          className='color-dark1-light'\r\n          value={seller} onChange={checkLoader}\r\n          name='seller'\r\n          defaultValue={null}\r\n          >\r\n          <option aria-label=\"None\" />\r\n          {sellers && sellers.length > 0 && sellers.map(s => \r\n            <option value={s.id} >{s.nickname} </option>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </div>  \r\n    )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component, useState  } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, lodashToggle, getObjectbyId } \r\n  from '../../components/utils';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\nimport { CreatedSale, AddNote, LumberToSale, DeliveryFeeComp, SaleSchema1ToCreate, Schema1CheckList } \r\n  from '../../components/kladman/SaleCreateSchema1';\r\n\r\n\r\nexport class SaleCreateSchema1Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      lumbersToSale: [],\r\n      totalVolume: 0.0,\r\n      totaCash: 0,\r\n      \r\n      loader: true,\r\n      seller: null,\r\n      bonusKladman: true,      \r\n      \r\n      note: '',\r\n      addExpenses: 0,\r\n      deliveryFee: 0,\r\n\r\n      dataToSave: null,\r\n      \r\n      createdSale: null,\r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.addLumberToSale = this.addLumberToSale.bind(this);\r\n    this.setLumberID = this.setLumberID.bind(this);\r\n    this.calcRowQnty = this.calcRowQnty.bind(this);\r\n    this.calcRowCash = this.calcRowCash.bind(this);\r\n    this.calcRowRamaCash = this.calcRowRamaCash.bind(this);\r\n    this.calcTotal = this.calcTotal.bind(this);\r\n    this.setRowCash = this.setRowCash.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.setNote = this.setNote.bind(this);\r\n    this.setDeliveryFee = this.setDeliveryFee.bind(this);\r\n    this.preSave = this.preSave.bind(this);\r\n    this.back = this.back.bind(this);\r\n    this.checkLoader = this.checkLoader.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.KLADMAN_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        kladmanId: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  addLumberToSale () {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID (e, id) {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowRamaCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.rama_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.rama_total_cash = (lumber.volume_total * lumber.rama_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setRowCash (e, id) {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_total_cash =  e.target.value ? parseInt(e.target.value) : 0\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal (lumbers) {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  setNote (e) {\r\n    this.setState({\r\n      note: e.target.value\r\n    })\r\n  }\r\n\r\n  setDeliveryFee (e) {\r\n    const deliveryFee = e.target.value ? parseInt(e.target.value) : 0\r\n    this.setState({\r\n      deliveryFee: deliveryFee,\r\n    })\r\n  }\r\n\r\n  preSave () {\r\n    const { lumbersToSale, loader, seller, bonusKladman, note, addExpenses, deliveryFee, totalCash, \r\n      totalVolume, kladmanId } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonusKladman ? kladmanId : null,\r\n      note: note,\r\n      add_expenses: addExpenses,\r\n      delivery_fee: deliveryFee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData () {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_SALE_SCHEMA1_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n    .catch(err => {\r\n        // const error = new Error(err);\r\n        // error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        // throw error;\r\n    })\r\n\r\n    this.setState({\r\n      dataToSave: null,\r\n      lumbersToSale: [],\r\n      totalVolume: 0.0,\r\n      totaCash: 0,\r\n      note: '',\r\n      addExpenses: 0,\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  checkLoader(e) {\r\n    if (e.target.name === 'seller')\r\n      this.setState({[e.target.name]: e.target.value})\r\n    else\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n  }\r\n\r\n  render() {\r\n    const { lumbersToSale, createdSale, totalCash, totalVolume, note, addExpenses, dataToSave, message } \r\n      = this.state\r\n    return (\r\n      <div>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleSchema1ToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div className='card card-style mb-1 mt-2 mx-1'>\r\n                <div className='content'>\r\n                  <div className='d-flex justify-content-between mb-2 text-center'>\r\n                    <h2>Что продаем?</h2>\r\n                    <button className='btn btn-sm bg-teal-light' onClick={this.clear}>Очистить </button>\r\n                  </div>\r\n                  \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumberToSale \r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowRamaCash={this.calcRowRamaCash}\r\n                      setRowCash={this.setRowCash}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <button className='mt-1 mb-2 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                    Добавить пиломатериал\r\n                  </button>\r\n                  <div className='divider my-2'></div>\r\n                  \r\n                  <Schema1CheckList loader={this.state.loader} checkLoader={this.checkLoader}\r\n                    seller={this.state.seller} bonusKladman={this.state.bonusKladman}\r\n                    sellers={this.state.sellers}\r\n                    />\r\n                  <DeliveryFeeComp deliveryFee={this.state.deliveryFee} setDeliveryFee={this.setDeliveryFee}/>\r\n                  \r\n                  {totalCash > 0 &&\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <p className='font-20'>Общий объем: {totalVolume} м3</p>\r\n                      <p className='font-20'>Итого сумма: {totalCash} рублей</p>\r\n                    </div>\r\n                  }\r\n                  <AddNote note={note} setNote={this.setData}/>\r\n                  {totalCash > 0 &&\r\n                    <button\r\n                      onClick={this.preSave}\r\n                      className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n                        shadow-l mt-2'>\r\n                      Далее\r\n                    </button>\r\n                  }\r\n                </div>\r\n            </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата</th>\r\n        <th>Пиломат</th>\r\n        <th>Общий обьем</th>\r\n        <th>Сумма</th>\r\n        <th>Прочее(доставка)</th>\r\n        <th>Примечание</th>\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td>{sale.date}</td>\r\n            <td>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '16px'}}>\r\n                  <span className='mr-1 d-block'>{lumber.lumber}</span>\r\n                  <span className='mr-1'>{lumber.quantity}шт</span>\r\n                  <span className='mr-1'>{lumber.volume}м3</span>\r\n                  <span className=''>{lumber.rate}р</span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td>{sale.volume}м3</td>\r\n            <td>\r\n              {sale.cash}\r\n            </td>\r\n            <td>\r\n              {sale.add_expenses}\r\n            </td>\r\n            <td>\r\n              {sale.note}\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_LIST,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.results });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} />\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\n\r\nexport default function requireAuthentication(Component, group) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n        //   if (this.props.isLoggedIn === true && (ws_numbers.includes(this.props.user.workshop_number) || \r\n        //     this.props.user.is_officer)) access = true\r\n        \r\n          if (this.props.isLoggedIn === true && !group) access = true\r\n          if (this.props.isLoggedIn && group === 'manager' && user.is_manager) access = true\r\n          if (this.props.isLoggedIn && group === 'senior_ramshik' && user.is_senior_ramshik) access = true\r\n          if (this.props.isLoggedIn && group === 'kladman' && user.is_kladman) access = true\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? <Component {...this.props} />\r\n                : null\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport  ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\nimport  ManagerShiftList  from './containers/manager/Shifts';\r\nimport { ManagerStock } from './containers/manager/Stock';\r\n\r\nimport { ShiftCreateComponent } from './containers/ramshik/Shift';\r\nimport { RamshikShiftList } from './containers/ramshik/ShiftList';\r\nimport { RamshikPayouts } from './containers/ramshik/Payouts';\r\n\r\nimport { SaleCreateComponent } from './containers/kladman/SaleCreate';\r\nimport { SaleCreateSchema1Container } from './containers/kladman/SaleCreateSchema1';\r\nimport { SaleList } from './containers/manager/SaleList';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3} \r\n      // classes={{\r\n      //   variantNeedToLogin: classes.needToLogin,\r\n      // }}\r\n    >\r\n      <Router>\r\n        <div className='app' id=\"page\" className=''>\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              {/* manager views */}\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, 'manager')} />\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'manager')} />\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, 'manager')} />\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, 'manager')} />\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, 'manager')} />\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateComponent, 'manager')} />\r\n              <Route exact path=\"/manager/sales/create_sale_schema1/\" \r\n                component={requireAuthentication(SaleCreateSchema1Container, 'manager')} />\r\n\r\n              {/* ramshik views */}\r\n              <Route exact path=\"/ramshik/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, 'is_senior_ramshik')} />\r\n              <Route exact path=\"/ramshik/shift/list/\" \r\n                component={requireAuthentication(RamshikShiftList, 'is_ramshik')} />\r\n              <Route exact path=\"/ramshik/payouts/\" \r\n              component={requireAuthentication(RamshikPayouts, 'is_ramshik')} />     \r\n\r\n              {/* kladman views */}\r\n              <Route exact path=\"/kladman/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateComponent, 'kladman')} />\r\n              <Route exact path=\"/kladman/stock/\" \r\n                component={requireAuthentication(ManagerStock, 'kladman')} />\r\n              <Route exact path=\"/kladman/sale_list/\" \r\n                component={requireAuthentication(SaleList, 'kladman')} />\r\n              <Route exact path=\"/kladman/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, 'kladman')} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}